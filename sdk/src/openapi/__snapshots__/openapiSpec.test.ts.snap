// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`openapiSpec#models > should generate proper schema Adresse 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "academie": {
      "additionalProperties": false,
      "properties": {
        "code": {
          "type": "string",
        },
        "id": {
          "type": "string",
        },
        "nom": {
          "type": "string",
        },
      },
      "required": [
        "code",
        "id",
        "nom",
      ],
      "type": "object",
    },
    "code_postal": {
      "anyOf": [
        {
          "type": "string",
        },
        {
          "type": "null",
        },
      ],
    },
    "commune": {
      "additionalProperties": false,
      "properties": {
        "code_insee": {
          "type": "string",
        },
        "nom": {
          "type": "string",
        },
      },
      "required": [
        "code_insee",
        "nom",
      ],
      "type": "object",
    },
    "departement": {
      "additionalProperties": false,
      "properties": {
        "code_insee": {
          "type": "string",
        },
        "nom": {
          "type": "string",
        },
      },
      "required": [
        "code_insee",
        "nom",
      ],
      "type": "object",
    },
    "label": {
      "anyOf": [
        {
          "type": "string",
        },
        {
          "type": "null",
        },
      ],
    },
    "region": {
      "additionalProperties": false,
      "properties": {
        "code_insee": {
          "type": "string",
        },
        "nom": {
          "type": "string",
        },
      },
      "required": [
        "code_insee",
        "nom",
      ],
      "type": "object",
    },
  },
  "required": [
    "academie",
    "code_postal",
    "commune",
    "departement",
    "label",
    "region",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema Certification 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "base_legale": {
      "additionalProperties": false,
      "properties": {
        "cfd": {
          "anyOf": [
            {
              "additionalProperties": false,
              "properties": {
                "abrogation": {
                  "anyOf": [
                    {
                      "format": "date-time",
                      "type": "string",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
                "creation": {
                  "anyOf": [
                    {
                      "format": "date-time",
                      "type": "string",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
              },
              "required": [
                "creation",
                "abrogation",
              ],
              "type": "object",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "cfd",
      ],
      "type": "object",
    },
    "blocs_competences": {
      "additionalProperties": false,
      "properties": {
        "rncp": {
          "anyOf": [
            {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "code": {
                    "pattern": "^(RNCP\\d{3,5}BC)?\\d{1,2}$",
                    "type": "string",
                  },
                  "intitule": {
                    "anyOf": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "null",
                      },
                    ],
                  },
                },
                "required": [
                  "code",
                  "intitule",
                ],
                "type": "object",
              },
              "type": "array",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "rncp",
      ],
      "type": "object",
    },
    "continuite": {
      "additionalProperties": false,
      "properties": {
        "cfd": {
          "anyOf": [
            {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "code": {
                    "pattern": "^[A-Z0-9]{3}\\d{3}[A-Z0-9]{2}$",
                    "type": "string",
                  },
                  "courant": {
                    "type": "boolean",
                  },
                  "fermeture": {
                    "anyOf": [
                      {
                        "format": "date-time",
                        "type": "string",
                      },
                      {
                        "type": "null",
                      },
                    ],
                  },
                  "ouverture": {
                    "anyOf": [
                      {
                        "format": "date-time",
                        "type": "string",
                      },
                      {
                        "type": "null",
                      },
                    ],
                  },
                },
                "required": [
                  "ouverture",
                  "fermeture",
                  "code",
                  "courant",
                ],
                "type": "object",
              },
              "type": "array",
            },
            {
              "type": "null",
            },
          ],
        },
        "rncp": {
          "anyOf": [
            {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "actif": {
                    "type": "boolean",
                  },
                  "activation": {
                    "anyOf": [
                      {
                        "format": "date-time",
                        "type": "string",
                      },
                      {
                        "type": "null",
                      },
                    ],
                  },
                  "code": {
                    "pattern": "^RNCP\\d{3,5}$",
                    "type": "string",
                  },
                  "courant": {
                    "type": "boolean",
                  },
                  "fin_enregistrement": {
                    "anyOf": [
                      {
                        "format": "date-time",
                        "type": "string",
                      },
                      {
                        "type": "null",
                      },
                    ],
                  },
                },
                "required": [
                  "activation",
                  "fin_enregistrement",
                  "code",
                  "courant",
                  "actif",
                ],
                "type": "object",
              },
              "type": "array",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "cfd",
        "rncp",
      ],
      "type": "object",
    },
    "convention_collectives": {
      "additionalProperties": false,
      "properties": {
        "rncp": {
          "anyOf": [
            {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "intitule": {
                    "type": "string",
                  },
                  "numero": {
                    "type": "string",
                  },
                },
                "required": [
                  "numero",
                  "intitule",
                ],
                "type": "object",
              },
              "type": "array",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "rncp",
      ],
      "type": "object",
    },
    "domaines": {
      "additionalProperties": false,
      "properties": {
        "formacodes": {
          "additionalProperties": false,
          "properties": {
            "rncp": {
              "anyOf": [
                {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "code": {
                        "type": "string",
                      },
                      "intitule": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "code",
                      "intitule",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
                {
                  "type": "null",
                },
              ],
            },
          },
          "required": [
            "rncp",
          ],
          "type": "object",
        },
        "nsf": {
          "additionalProperties": false,
          "properties": {
            "cfd": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "code": {
                      "type": "string",
                    },
                    "intitule": {
                      "anyOf": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "null",
                        },
                      ],
                    },
                  },
                  "required": [
                    "code",
                    "intitule",
                  ],
                  "type": "object",
                },
                {
                  "type": "null",
                },
              ],
            },
            "rncp": {
              "anyOf": [
                {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "code": {
                        "pattern": "^\\d{2,3}[a-z]?$",
                        "type": "string",
                      },
                      "intitule": {
                        "anyOf": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "null",
                          },
                        ],
                      },
                    },
                    "required": [
                      "code",
                      "intitule",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
                {
                  "type": "null",
                },
              ],
            },
          },
          "required": [
            "cfd",
            "rncp",
          ],
          "type": "object",
        },
        "rome": {
          "additionalProperties": false,
          "properties": {
            "rncp": {
              "anyOf": [
                {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "code": {
                        "pattern": "^[A-Z]{1}\\d{0,4}$",
                        "type": "string",
                      },
                      "intitule": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "code",
                      "intitule",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
                {
                  "type": "null",
                },
              ],
            },
          },
          "required": [
            "rncp",
          ],
          "type": "object",
        },
      },
      "required": [
        "formacodes",
        "nsf",
        "rome",
      ],
      "type": "object",
    },
    "identifiant": {
      "additionalProperties": false,
      "properties": {
        "cfd": {
          "anyOf": [
            {
              "pattern": "^[A-Z0-9]{3}\\d{3}[A-Z0-9]{2}$",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "rncp": {
          "anyOf": [
            {
              "pattern": "^RNCP\\d{3,5}$",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "rncp_anterieur_2019": {
          "anyOf": [
            {
              "type": "boolean",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "cfd",
        "rncp",
        "rncp_anterieur_2019",
      ],
      "type": "object",
    },
    "intitule": {
      "additionalProperties": false,
      "properties": {
        "cfd": {
          "anyOf": [
            {
              "additionalProperties": false,
              "properties": {
                "court": {
                  "type": "string",
                },
                "long": {
                  "type": "string",
                },
              },
              "required": [
                "long",
                "court",
              ],
              "type": "object",
            },
            {
              "type": "null",
            },
          ],
        },
        "niveau": {
          "additionalProperties": false,
          "properties": {
            "cfd": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "europeen": {
                      "anyOf": [
                        {
                          "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                          ],
                          "type": "string",
                        },
                        {
                          "type": "null",
                        },
                      ],
                    },
                    "formation_diplome": {
                      "type": "string",
                    },
                    "interministeriel": {
                      "type": "string",
                    },
                    "libelle": {
                      "anyOf": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "null",
                        },
                      ],
                    },
                    "sigle": {
                      "type": "string",
                    },
                  },
                  "required": [
                    "europeen",
                    "formation_diplome",
                    "interministeriel",
                    "libelle",
                    "sigle",
                  ],
                  "type": "object",
                },
                {
                  "type": "null",
                },
              ],
            },
            "rncp": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "europeen": {
                      "anyOf": [
                        {
                          "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                          ],
                          "type": "string",
                        },
                        {
                          "type": "null",
                        },
                      ],
                    },
                  },
                  "required": [
                    "europeen",
                  ],
                  "type": "object",
                },
                {
                  "type": "null",
                },
              ],
            },
          },
          "required": [
            "cfd",
            "rncp",
          ],
          "type": "object",
        },
        "rncp": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "cfd",
        "niveau",
        "rncp",
      ],
      "type": "object",
    },
    "periode_validite": {
      "additionalProperties": false,
      "properties": {
        "cfd": {
          "anyOf": [
            {
              "additionalProperties": false,
              "properties": {
                "derniere_session": {
                  "anyOf": [
                    {
                      "type": "integer",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
                "fermeture": {
                  "anyOf": [
                    {
                      "format": "date-time",
                      "type": "string",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
                "ouverture": {
                  "anyOf": [
                    {
                      "format": "date-time",
                      "type": "string",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
                "premiere_session": {
                  "anyOf": [
                    {
                      "type": "integer",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
              },
              "required": [
                "ouverture",
                "fermeture",
                "premiere_session",
                "derniere_session",
              ],
              "type": "object",
            },
            {
              "type": "null",
            },
          ],
        },
        "debut": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "fin": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "rncp": {
          "anyOf": [
            {
              "additionalProperties": false,
              "properties": {
                "actif": {
                  "type": "boolean",
                },
                "activation": {
                  "anyOf": [
                    {
                      "format": "date-time",
                      "type": "string",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
                "debut_parcours": {
                  "anyOf": [
                    {
                      "format": "date-time",
                      "type": "string",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
                "fin_enregistrement": {
                  "anyOf": [
                    {
                      "format": "date-time",
                      "type": "string",
                    },
                    {
                      "type": "null",
                    },
                  ],
                },
              },
              "required": [
                "actif",
                "activation",
                "debut_parcours",
                "fin_enregistrement",
              ],
              "type": "object",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "debut",
        "fin",
        "cfd",
        "rncp",
      ],
      "type": "object",
    },
    "type": {
      "additionalProperties": false,
      "properties": {
        "certificateurs_rncp": {
          "anyOf": [
            {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "nom": {
                    "type": "string",
                  },
                  "siret": {
                    "type": "string",
                  },
                },
                "required": [
                  "siret",
                  "nom",
                ],
                "type": "object",
              },
              "type": "array",
            },
            {
              "type": "null",
            },
          ],
        },
        "enregistrement_rncp": {
          "anyOf": [
            {
              "enum": [
                "Enregistrement de droit",
                "Enregistrement sur demande",
              ],
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "gestionnaire_diplome": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "nature": {
          "additionalProperties": false,
          "properties": {
            "cfd": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "code": {
                      "anyOf": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "null",
                        },
                      ],
                    },
                    "libelle": {
                      "anyOf": [
                        {
                          "type": "string",
                        },
                        {
                          "type": "null",
                        },
                      ],
                    },
                  },
                  "required": [
                    "code",
                    "libelle",
                  ],
                  "type": "object",
                },
                {
                  "type": "null",
                },
              ],
            },
          },
          "required": [
            "cfd",
          ],
          "type": "object",
        },
        "voie_acces": {
          "additionalProperties": false,
          "properties": {
            "rncp": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "apprentissage": {
                      "type": "boolean",
                    },
                    "candidature_individuelle": {
                      "type": "boolean",
                    },
                    "contrat_professionnalisation": {
                      "type": "boolean",
                    },
                    "experience": {
                      "type": "boolean",
                    },
                    "formation_continue": {
                      "type": "boolean",
                    },
                    "formation_statut_eleve": {
                      "type": "boolean",
                    },
                  },
                  "required": [
                    "apprentissage",
                    "experience",
                    "candidature_individuelle",
                    "contrat_professionnalisation",
                    "formation_continue",
                    "formation_statut_eleve",
                  ],
                  "type": "object",
                },
                {
                  "type": "null",
                },
              ],
            },
          },
          "required": [
            "rncp",
          ],
          "type": "object",
        },
      },
      "required": [
        "nature",
        "gestionnaire_diplome",
        "enregistrement_rncp",
        "voie_acces",
        "certificateurs_rncp",
      ],
      "type": "object",
    },
  },
  "required": [
    "identifiant",
    "intitule",
    "base_legale",
    "blocs_competences",
    "convention_collectives",
    "domaines",
    "periode_validite",
    "type",
    "continuite",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema Commune 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "academie": {
      "additionalProperties": false,
      "properties": {
        "code": {
          "type": "string",
        },
        "id": {
          "type": "string",
        },
        "nom": {
          "type": "string",
        },
      },
      "required": [
        "id",
        "code",
        "nom",
      ],
      "type": "object",
    },
    "anciennes": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "codeInsee": {
            "type": "string",
          },
          "nom": {
            "type": "string",
          },
        },
        "required": [
          "codeInsee",
          "nom",
        ],
        "type": "object",
      },
      "type": "array",
    },
    "arrondissements": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
          },
          "nom": {
            "type": "string",
          },
        },
        "required": [
          "code",
          "nom",
        ],
        "type": "object",
      },
      "type": "array",
    },
    "code": {
      "additionalProperties": false,
      "properties": {
        "insee": {
          "type": "string",
        },
        "postaux": {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
      },
      "required": [
        "insee",
        "postaux",
      ],
      "type": "object",
    },
    "departement": {
      "additionalProperties": false,
      "properties": {
        "codeInsee": {
          "type": "string",
        },
        "nom": {
          "type": "string",
        },
      },
      "required": [
        "codeInsee",
        "nom",
      ],
      "type": "object",
    },
    "localisation": {
      "additionalProperties": false,
      "properties": {
        "bbox": {
          "$ref": "#/components/schemas/GeoJsonPolygon",
        },
        "centre": {
          "$ref": "#/components/schemas/GeoJsonPoint",
        },
      },
      "required": [
        "centre",
        "bbox",
      ],
      "type": "object",
    },
    "mission_locale": {
      "anyOf": [
        {
          "$ref": "#/components/schemas/MissionLocale",
        },
        {
          "type": "null",
        },
      ],
    },
    "nom": {
      "type": "string",
    },
    "region": {
      "additionalProperties": false,
      "properties": {
        "codeInsee": {
          "type": "string",
        },
        "nom": {
          "type": "string",
        },
      },
      "required": [
        "codeInsee",
        "nom",
      ],
      "type": "object",
    },
  },
  "required": [
    "nom",
    "code",
    "departement",
    "academie",
    "region",
    "localisation",
    "mission_locale",
    "arrondissements",
    "anciennes",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema Departement 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "academie": {
      "additionalProperties": false,
      "properties": {
        "code": {
          "type": "string",
        },
        "id": {
          "type": "string",
        },
        "nom": {
          "type": "string",
        },
      },
      "required": [
        "id",
        "code",
        "nom",
      ],
      "type": "object",
    },
    "codeInsee": {
      "type": "string",
    },
    "nom": {
      "type": "string",
    },
    "region": {
      "additionalProperties": false,
      "properties": {
        "codeInsee": {
          "type": "string",
        },
        "nom": {
          "type": "string",
        },
      },
      "required": [
        "codeInsee",
        "nom",
      ],
      "type": "object",
    },
  },
  "required": [
    "nom",
    "codeInsee",
    "academie",
    "region",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema Formation 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "certification": {
      "additionalProperties": false,
      "properties": {
        "connue": {
          "type": "boolean",
        },
        "valeur": {
          "$ref": "#/components/schemas/Certification",
        },
      },
      "required": [
        "connue",
        "valeur",
      ],
      "type": "object",
    },
    "contact": {
      "additionalProperties": false,
      "properties": {
        "email": {
          "anyOf": [
            {
              "format": "email",
              "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "telephone": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "email",
        "telephone",
      ],
      "type": "object",
    },
    "contenu_educatif": {
      "additionalProperties": false,
      "properties": {
        "contenu": {
          "type": "string",
        },
        "objectif": {
          "type": "string",
        },
      },
      "required": [
        "contenu",
        "objectif",
      ],
      "type": "object",
    },
    "formateur": {
      "additionalProperties": false,
      "properties": {
        "connu": {
          "type": "boolean",
        },
        "organisme": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/Organisme",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "connu",
        "organisme",
      ],
      "type": "object",
    },
    "identifiant": {
      "additionalProperties": false,
      "properties": {
        "cle_ministere_educatif": {
          "type": "string",
        },
      },
      "required": [
        "cle_ministere_educatif",
      ],
      "type": "object",
    },
    "lieu": {
      "additionalProperties": false,
      "properties": {
        "adresse": {
          "$ref": "#/components/schemas/Adresse",
        },
        "geolocalisation": {
          "$ref": "#/components/schemas/GeoJsonPoint",
        },
        "precision": {
          "anyOf": [
            {
              "type": "number",
            },
            {
              "type": "null",
            },
          ],
        },
        "siret": {
          "anyOf": [
            {
              "pattern": "^\\d{14}$",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "uai": {
          "anyOf": [
            {
              "pattern": "^\\d{7}[A-Z]$",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "adresse",
        "geolocalisation",
        "precision",
        "siret",
        "uai",
      ],
      "type": "object",
    },
    "modalite": {
      "additionalProperties": false,
      "properties": {
        "annee_cycle": {
          "anyOf": [
            {
              "type": "integer",
            },
            {
              "type": "null",
            },
          ],
        },
        "duree_indicative": {
          "type": "number",
        },
        "entierement_a_distance": {
          "type": "boolean",
        },
        "mef_10": {
          "anyOf": [
            {
              "pattern": "^\\d{10}$",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "annee_cycle",
        "duree_indicative",
        "entierement_a_distance",
        "mef_10",
      ],
      "type": "object",
    },
    "onisep": {
      "additionalProperties": false,
      "properties": {
        "discipline": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "domaine_sousdomaine": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "intitule": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "libelle_poursuite": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "lien_site_onisepfr": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "url": {
          "anyOf": [
            {
              "format": "uri",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "discipline",
        "domaine_sousdomaine",
        "intitule",
        "libelle_poursuite",
        "lien_site_onisepfr",
        "url",
      ],
      "type": "object",
    },
    "responsable": {
      "additionalProperties": false,
      "properties": {
        "connu": {
          "type": "boolean",
        },
        "organisme": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/Organisme",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "connu",
        "organisme",
      ],
      "type": "object",
    },
    "sessions": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "capacite": {
            "anyOf": [
              {
                "type": "number",
              },
              {
                "type": "null",
              },
            ],
          },
          "debut": {
            "format": "date-time",
            "type": "string",
          },
          "fin": {
            "format": "date-time",
            "type": "string",
          },
        },
        "required": [
          "capacite",
          "debut",
          "fin",
        ],
        "type": "object",
      },
      "type": "array",
    },
    "statut": {
      "additionalProperties": false,
      "properties": {
        "catalogue": {
          "enum": [
            "publié",
            "supprimé",
            "archivé",
          ],
          "type": "string",
        },
      },
      "required": [
        "catalogue",
      ],
      "type": "object",
    },
  },
  "required": [
    "certification",
    "contact",
    "contenu_educatif",
    "formateur",
    "identifiant",
    "lieu",
    "modalite",
    "onisep",
    "responsable",
    "sessions",
    "statut",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema GeoJsonPoint 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "coordinates": {
      "prefixItems": [
        {
          "maximum": 180,
          "minimum": -180,
          "type": "number",
        },
        {
          "maximum": 90,
          "minimum": -90,
          "type": "number",
        },
      ],
      "type": "array",
    },
    "type": {
      "const": "Point",
      "type": "string",
    },
  },
  "required": [
    "type",
    "coordinates",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema GeoJsonPolygon 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "coordinates": {
      "items": {
        "items": {
          "prefixItems": [
            {
              "maximum": 180,
              "minimum": -180,
              "type": "number",
            },
            {
              "maximum": 90,
              "minimum": -90,
              "type": "number",
            },
          ],
          "type": "array",
        },
        "type": "array",
      },
      "type": "array",
    },
    "type": {
      "const": "Polygon",
      "type": "string",
    },
  },
  "required": [
    "type",
    "coordinates",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema JobApplicationWrite 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "applicant_attachment_content": {
      "format": "byte",
      "maxLength": 4215276,
      "type": "string",
    },
    "applicant_attachment_name": {
      "minLength": 1,
      "pattern": "((.*?))(\\.)+([Dd][Oo][Cc][Xx]|[Pp][Dd][Ff])$",
      "type": "string",
    },
    "applicant_email": {
      "format": "email",
      "type": "string",
    },
    "applicant_first_name": {
      "maxLength": 50,
      "minLength": 1,
      "type": "string",
    },
    "applicant_last_name": {
      "maxLength": 50,
      "minLength": 1,
      "type": "string",
    },
    "applicant_message": {
      "type": [
        "string",
        "null",
      ],
    },
    "applicant_phone": {
      "type": "string",
    },
    "recipient_id": {
      "description": "Identifiant unique de la ressource vers laquelle la candidature est faite, préfixé par le nom de la collection",
      "type": "string",
    },
  },
  "required": [
    "applicant_first_name",
    "applicant_last_name",
    "applicant_email",
    "applicant_phone",
    "applicant_attachment_name",
    "applicant_attachment_content",
    "recipient_id",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema JobOfferPublishing 1`] = `
{
  "properties": {
    "publishing": {
      "properties": {
        "error": {
          "properties": {
            "code": {
              "type": "string",
            },
            "label": {
              "type": "string",
            },
          },
          "required": [
            "code",
            "label",
          ],
          "type": "object",
        },
        "status": {
          "enum": [
            "WILL_BE_PUBLISHED",
            "PUBLISHED",
            "WILL_NOT_BE_PUBLISHED",
          ],
          "type": "string",
        },
      },
      "required": [
        "status",
      ],
      "type": "object",
    },
  },
  "required": [
    "publishing",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema JobOfferRead 1`] = `
{
  "properties": {
    "apply": {
      "properties": {
        "phone": {
          "type": [
            "string",
            "null",
          ],
        },
        "recipient_id": {
          "type": [
            "string",
            "null",
          ],
        },
        "url": {
          "format": "uri",
          "type": "string",
        },
      },
      "required": [
        "phone",
        "url",
      ],
      "type": "object",
    },
    "contract": {
      "properties": {
        "duration": {
          "minimum": 0,
          "type": [
            "integer",
            "null",
          ],
        },
        "remote": {
          "enum": [
            "onsite",
            "remote",
            "hybrid",
          ],
          "type": [
            "string",
            "null",
          ],
        },
        "start": {
          "format": "date-time",
          "type": [
            "string",
            "null",
          ],
        },
        "type": {
          "items": {
            "enum": [
              "Apprentissage",
              "Professionnalisation",
            ],
            "type": "string",
          },
          "type": "array",
        },
      },
      "required": [
        "start",
        "duration",
        "type",
        "remote",
      ],
      "type": "object",
    },
    "identifier": {
      "properties": {
        "id": {
          "type": [
            "string",
            "null",
          ],
        },
        "partner_job_id": {
          "type": "string",
        },
        "partner_label": {
          "type": "string",
        },
      },
      "required": [
        "partner_job_id",
        "id",
        "partner_label",
      ],
      "type": "object",
    },
    "offer": {
      "properties": {
        "access_conditions": {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
        "description": {
          "type": "string",
        },
        "desired_skills": {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
        "opening_count": {
          "type": "number",
        },
        "publication": {
          "properties": {
            "creation": {
              "format": "date-time",
              "type": [
                "string",
                "null",
              ],
            },
            "expiration": {
              "format": "date-time",
              "type": [
                "string",
                "null",
              ],
            },
          },
          "required": [
            "creation",
            "expiration",
          ],
          "type": "object",
        },
        "rome_codes": {
          "items": {
            "pattern": "^[A-Z]\\d{4}$",
            "type": "string",
          },
          "type": "array",
        },
        "status": {
          "enum": [
            "Active",
            "Filled",
            "Cancelled",
          ],
          "type": "string",
        },
        "target_diploma": {
          "properties": {
            "european": {
              "enum": [
                "3",
                "4",
                "5",
                "6",
                "7",
              ],
              "type": "string",
            },
            "label": {
              "type": "string",
            },
          },
          "required": [
            "european",
            "label",
          ],
          "type": [
            "object",
            "null",
          ],
        },
        "title": {
          "minLength": 3,
          "type": "string",
        },
        "to_be_acquired_skills": {
          "items": {
            "type": "string",
          },
          "type": "array",
        },
      },
      "required": [
        "title",
        "desired_skills",
        "to_be_acquired_skills",
        "access_conditions",
        "opening_count",
        "publication",
        "rome_codes",
        "description",
        "target_diploma",
        "status",
      ],
      "type": "object",
    },
    "workplace": {
      "properties": {
        "brand": {
          "type": [
            "string",
            "null",
          ],
        },
        "description": {
          "type": [
            "string",
            "null",
          ],
        },
        "domain": {
          "properties": {
            "idcc": {
              "type": [
                "number",
                "null",
              ],
            },
            "naf": {
              "properties": {
                "code": {
                  "type": "string",
                },
                "label": {
                  "type": [
                    "string",
                    "null",
                  ],
                },
              },
              "required": [
                "code",
                "label",
              ],
              "type": [
                "object",
                "null",
              ],
            },
            "opco": {
              "type": [
                "string",
                "null",
              ],
            },
          },
          "required": [
            "idcc",
            "opco",
            "naf",
          ],
          "type": "object",
        },
        "legal_name": {
          "type": [
            "string",
            "null",
          ],
        },
        "location": {
          "properties": {
            "address": {
              "type": "string",
            },
            "geopoint": {
              "$ref": "#/components/schemas/GeoJsonPoint",
            },
          },
          "required": [
            "address",
            "geopoint",
          ],
          "type": "object",
        },
        "name": {
          "type": [
            "string",
            "null",
          ],
        },
        "siret": {
          "pattern": "^\\d{14}$",
          "type": [
            "string",
            "null",
          ],
        },
        "size": {
          "type": [
            "string",
            "null",
          ],
        },
        "website": {
          "format": "uri",
          "type": [
            "string",
            "null",
          ],
        },
      },
      "required": [
        "name",
        "description",
        "website",
        "siret",
        "location",
        "brand",
        "legal_name",
        "size",
        "domain",
      ],
      "type": "object",
    },
  },
  "required": [
    "identifier",
    "workplace",
    "apply",
    "contract",
    "offer",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema JobOfferWrite 1`] = `
{
  "properties": {
    "apply": {
      "properties": {
        "email": {
          "description": "Email de contact",
          "format": "email",
          "type": [
            "string",
            "null",
          ],
        },
        "phone": {
          "description": "Téléphone de contact",
          "type": [
            "string",
            "null",
          ],
        },
        "url": {
          "description": "URL pour candidater",
          "format": "uri",
          "type": [
            "string",
            "null",
          ],
        },
      },
      "type": "object",
    },
    "contract": {
      "properties": {
        "duration": {
          "minimum": 0,
          "type": [
            "integer",
            "null",
          ],
        },
        "remote": {
          "enum": [
            "onsite",
            "remote",
            "hybrid",
          ],
          "type": [
            "string",
            "null",
          ],
        },
        "start": {
          "format": "date-time",
          "type": [
            "string",
            "null",
          ],
        },
        "type": {
          "default": [
            "Apprentissage",
            "Professionnalisation",
          ],
          "items": {
            "enum": [
              "Apprentissage",
              "Professionnalisation",
            ],
            "type": "string",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "offer": {
      "properties": {
        "access_conditions": {
          "default": [],
          "items": {
            "type": "string",
          },
          "type": "array",
        },
        "description": {
          "minLength": 30,
          "type": "string",
        },
        "desired_skills": {
          "default": [],
          "items": {
            "type": "string",
          },
          "type": "array",
        },
        "multicast": {
          "default": true,
          "description": "Si l'offre peut être diffusé sur l'ensemble des plateformes partenaires",
          "type": "boolean",
        },
        "opening_count": {
          "default": 1,
          "type": "number",
        },
        "origin": {
          "description": "Origine de l'offre provenant d'un aggregateur",
          "type": [
            "string",
            "null",
          ],
        },
        "publication": {
          "properties": {
            "creation": {
              "format": "date-time",
              "type": [
                "string",
                "null",
              ],
            },
            "expiration": {
              "format": "date-time",
              "type": [
                "string",
                "null",
              ],
            },
          },
          "type": "object",
        },
        "rome_codes": {
          "items": {
            "pattern": "^[A-Z]\\d{4}$",
            "type": "string",
          },
          "type": [
            "array",
            "null",
          ],
        },
        "status": {
          "default": "Active",
          "enum": [
            "Active",
            "Filled",
            "Cancelled",
          ],
          "type": "string",
        },
        "target_diploma": {
          "properties": {
            "european": {
              "enum": [
                "3",
                "4",
                "5",
                "6",
                "7",
              ],
              "type": [
                "string",
                "null",
              ],
            },
          },
          "type": [
            "object",
            "null",
          ],
        },
        "title": {
          "minLength": 3,
          "type": "string",
        },
        "to_be_acquired_skills": {
          "default": [],
          "items": {
            "type": "string",
          },
          "type": "array",
        },
      },
      "required": [
        "title",
        "description",
      ],
      "type": "object",
    },
    "workplace": {
      "properties": {
        "description": {
          "type": [
            "string",
            "null",
          ],
        },
        "location": {
          "properties": {
            "address": {
              "type": [
                "string",
                "null",
              ],
            },
          },
          "type": [
            "object",
            "null",
          ],
        },
        "name": {
          "type": [
            "string",
            "null",
          ],
        },
        "siret": {
          "pattern": "^\\d{14}$",
          "type": "string",
        },
        "website": {
          "format": "uri",
          "type": [
            "string",
            "null",
          ],
        },
      },
      "required": [
        "siret",
      ],
      "type": "object",
    },
  },
  "required": [
    "workplace",
    "apply",
    "offer",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema JobRecruiter 1`] = `
{
  "properties": {
    "apply": {
      "properties": {
        "phone": {
          "type": [
            "string",
            "null",
          ],
        },
        "recipient_id": {
          "type": [
            "string",
            "null",
          ],
        },
        "url": {
          "format": "uri",
          "type": "string",
        },
      },
      "required": [
        "phone",
        "url",
      ],
      "type": "object",
    },
    "identifier": {
      "properties": {
        "id": {
          "type": "string",
        },
      },
      "required": [
        "id",
      ],
      "type": "object",
    },
    "workplace": {
      "properties": {
        "brand": {
          "type": [
            "string",
            "null",
          ],
        },
        "description": {
          "type": [
            "string",
            "null",
          ],
        },
        "domain": {
          "properties": {
            "idcc": {
              "type": [
                "number",
                "null",
              ],
            },
            "naf": {
              "properties": {
                "code": {
                  "type": "string",
                },
                "label": {
                  "type": [
                    "string",
                    "null",
                  ],
                },
              },
              "required": [
                "code",
                "label",
              ],
              "type": [
                "object",
                "null",
              ],
            },
            "opco": {
              "type": [
                "string",
                "null",
              ],
            },
          },
          "required": [
            "idcc",
            "opco",
            "naf",
          ],
          "type": "object",
        },
        "legal_name": {
          "type": [
            "string",
            "null",
          ],
        },
        "location": {
          "properties": {
            "address": {
              "type": "string",
            },
            "geopoint": {
              "$ref": "#/components/schemas/GeoJsonPoint",
            },
          },
          "required": [
            "address",
            "geopoint",
          ],
          "type": "object",
        },
        "name": {
          "type": [
            "string",
            "null",
          ],
        },
        "siret": {
          "pattern": "^\\d{14}$",
          "type": [
            "string",
            "null",
          ],
        },
        "size": {
          "type": [
            "string",
            "null",
          ],
        },
        "website": {
          "format": "uri",
          "type": [
            "string",
            "null",
          ],
        },
      },
      "required": [
        "name",
        "description",
        "website",
        "siret",
        "location",
        "brand",
        "legal_name",
        "size",
        "domain",
      ],
      "type": "object",
    },
  },
  "required": [
    "identifier",
    "workplace",
    "apply",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema MissionLocale 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "code": {
      "type": "string",
    },
    "contact": {
      "additionalProperties": false,
      "properties": {
        "email": {
          "anyOf": [
            {
              "format": "email",
              "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "siteWeb": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "telephone": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "email",
        "telephone",
        "siteWeb",
      ],
      "type": "object",
    },
    "id": {
      "type": "number",
    },
    "localisation": {
      "additionalProperties": false,
      "properties": {
        "adresse": {
          "type": "string",
        },
        "cp": {
          "type": "string",
        },
        "geopoint": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/GeoJsonPoint",
            },
            {
              "type": "null",
            },
          ],
        },
        "ville": {
          "type": "string",
        },
      },
      "required": [
        "geopoint",
        "adresse",
        "cp",
        "ville",
      ],
      "type": "object",
    },
    "nom": {
      "type": "string",
    },
    "siret": {
      "type": "string",
    },
  },
  "required": [
    "id",
    "code",
    "nom",
    "siret",
    "localisation",
    "contact",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema Organisme 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "contacts": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "confirmation_referentiel": {
            "type": "boolean",
          },
          "email": {
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$",
            "type": "string",
          },
          "sources": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
        },
        "required": [
          "email",
          "sources",
          "confirmation_referentiel",
        ],
        "type": "object",
      },
      "type": "array",
    },
    "etablissement": {
      "additionalProperties": false,
      "properties": {
        "adresse": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/Adresse",
            },
            {
              "type": "null",
            },
          ],
        },
        "creation": {
          "format": "date-time",
          "type": "string",
        },
        "enseigne": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "fermeture": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "geopoint": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/GeoJsonPoint",
            },
            {
              "type": "null",
            },
          ],
        },
        "ouvert": {
          "type": "boolean",
        },
        "siret": {
          "pattern": "^\\d{14}$",
          "type": "string",
        },
      },
      "required": [
        "adresse",
        "geopoint",
        "creation",
        "enseigne",
        "fermeture",
        "ouvert",
        "siret",
      ],
      "type": "object",
    },
    "identifiant": {
      "additionalProperties": false,
      "properties": {
        "siret": {
          "pattern": "^\\d{14}$",
          "type": "string",
        },
        "uai": {
          "anyOf": [
            {
              "pattern": "^\\d{7}[A-Z]$",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
      },
      "required": [
        "siret",
        "uai",
      ],
      "type": "object",
    },
    "renseignements_specifiques": {
      "additionalProperties": false,
      "properties": {
        "numero_activite": {
          "anyOf": [
            {
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "qualiopi": {
          "type": "boolean",
        },
      },
      "required": [
        "numero_activite",
        "qualiopi",
      ],
      "type": "object",
    },
    "statut": {
      "additionalProperties": false,
      "properties": {
        "referentiel": {
          "enum": [
            "présent",
            "supprimé",
          ],
          "type": "string",
        },
      },
      "required": [
        "referentiel",
      ],
      "type": "object",
    },
    "unite_legale": {
      "additionalProperties": false,
      "properties": {
        "actif": {
          "type": "boolean",
        },
        "cessation": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string",
            },
            {
              "type": "null",
            },
          ],
        },
        "creation": {
          "format": "date-time",
          "type": "string",
        },
        "raison_sociale": {
          "type": "string",
        },
        "siren": {
          "type": "string",
        },
      },
      "required": [
        "actif",
        "cessation",
        "creation",
        "raison_sociale",
        "siren",
      ],
      "type": "object",
    },
  },
  "required": [
    "contacts",
    "etablissement",
    "identifiant",
    "renseignements_specifiques",
    "statut",
    "unite_legale",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#models > should generate proper schema Pagination 1`] = `
{
  "additionalProperties": false,
  "properties": {
    "page_count": {
      "minimum": 0,
      "type": "integer",
    },
    "page_index": {
      "minimum": 0,
      "type": "integer",
    },
    "page_size": {
      "maximum": 1000,
      "minimum": 1,
      "type": "integer",
    },
  },
  "required": [
    "page_count",
    "page_size",
    "page_index",
  ],
  "type": "object",
}
`;

exports[`openapiSpec#routes > should generate schema in sync with zod definition 1`] = `
{
  "get:/certification/v1": {
    "id": "get:/certification/v1",
    "method": "get",
    "operation": {
      "description": "",
      "operationId": "getCertifications",
      "parameters": [
        {
          "allowEmptyValue": true,
          "in": "query",
          "name": "identifiant.cfd",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              "46X32402",
              "",
              "null",
            ],
            "pattern": "^([A-Z0-9]{3}\\d{3}[A-Z0-9]{2}|null)?$",
            "type": "string",
          },
        },
        {
          "allowEmptyValue": true,
          "in": "query",
          "name": "identifiant.rncp",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              "RNCP12345",
              "",
              "null",
            ],
            "pattern": "^(RNCP\\d{3,5}|null)?$",
            "type": "string",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "items": {
                  "$ref": "#/components/schemas/Certification",
                },
                "type": "array",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Certifications",
      ],
    },
    "path": "/certification/v1",
  },
  "get:/formation/v1/search": {
    "id": "get:/formation/v1/search",
    "method": "get",
    "operation": {
      "description": "",
      "operationId": "searchFormations",
      "parameters": [
        {
          "allowEmptyValue": true,
          "in": "query",
          "name": "longitude",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              48.8566,
            ],
            "maximum": 180,
            "minimum": -180,
            "type": "number",
          },
        },
        {
          "allowEmptyValue": true,
          "in": "query",
          "name": "latitude",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              2.3522,
            ],
            "maximum": 90,
            "minimum": -90,
            "type": "number",
          },
        },
        {
          "allowEmptyValue": true,
          "in": "query",
          "name": "radius",
          "required": false,
          "schema": {
            "default": 30,
            "description": "",
            "examples": [
              30,
            ],
            "maximum": 200,
            "minimum": 0,
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "target_diploma_level",
          "required": false,
          "schema": {
            "description": "",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
            ],
            "examples": [
              "3",
              "4",
              "5",
              "6",
              "7",
            ],
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "romes",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              "F1601,F1201,F1106",
              "M1806",
            ],
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "rncp",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              "RNCP34436",
              "RNCP183",
            ],
            "pattern": "^RNCP\\d{3,5}$",
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "include_archived",
          "required": false,
          "schema": {
            "default": "false",
            "description": "",
            "enum": [
              "true",
              "false",
            ],
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "page_size",
          "required": false,
          "schema": {
            "default": 100,
            "description": "",
            "examples": [
              10,
            ],
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
          },
        },
        {
          "allowEmptyValue": true,
          "in": "query",
          "name": "page_index",
          "required": false,
          "schema": {
            "default": 0,
            "description": "",
            "examples": [
              12,
            ],
            "minimum": 0,
            "type": "integer",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "description": "",
                    "items": {
                      "$ref": "#/components/schemas/Formation",
                    },
                    "type": "array",
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination",
                  },
                },
                "required": [
                  "data",
                  "pagination",
                ],
                "type": "object",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Training",
      ],
    },
    "path": "/formation/v1/search",
  },
  "get:/formation/v1/{id}": {
    "id": "get:/formation/v1/{id}",
    "method": "get",
    "operation": {
      "description": "",
      "operationId": "searchFormationById",
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "description": "",
            "examples": [
              "049510P01118838776490001178615112600012-49099#L01",
            ],
            "type": "string",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Formation",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Training",
      ],
    },
    "path": "/formation/v1/{id}",
  },
  "get:/geographie/v1/commune/search": {
    "id": "get:/geographie/v1/commune/search",
    "method": "get",
    "operation": {
      "description": "",
      "operationId": "communeSearch",
      "parameters": [
        {
          "in": "query",
          "name": "code",
          "required": true,
          "schema": {
            "description": "",
            "examples": [
              "75056",
              "75000",
            ],
            "pattern": "^\\d{5}$",
            "type": "string",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "items": {
                  "$ref": "#/components/schemas/Commune",
                },
                "type": "array",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Geography",
      ],
    },
    "path": "/geographie/v1/commune/search",
  },
  "get:/geographie/v1/departement": {
    "id": "get:/geographie/v1/departement",
    "method": "get",
    "operation": {
      "description": "",
      "operationId": "listDepartements",
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "items": {
                  "$ref": "#/components/schemas/Departement",
                },
                "type": "array",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Geography",
      ],
    },
    "path": "/geographie/v1/departement",
  },
  "get:/geographie/v1/mission-locale": {
    "id": "get:/geographie/v1/mission-locale",
    "method": "get",
    "operation": {
      "description": "",
      "operationId": "listMissionLocales",
      "parameters": [
        {
          "allowEmptyValue": true,
          "in": "query",
          "name": "longitude",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              48.8566,
            ],
            "maximum": 180,
            "minimum": -180,
            "type": "number",
          },
        },
        {
          "allowEmptyValue": true,
          "in": "query",
          "name": "latitude",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              2.3522,
            ],
            "maximum": 90,
            "minimum": -90,
            "type": "number",
          },
        },
        {
          "allowEmptyValue": true,
          "in": "query",
          "name": "radius",
          "required": false,
          "schema": {
            "default": 30,
            "description": "",
            "examples": [
              30,
            ],
            "maximum": 200,
            "minimum": 0,
            "type": "number",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "items": {
                  "$ref": "#/components/schemas/MissionLocale",
                },
                "type": "array",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Geography",
      ],
    },
    "path": "/geographie/v1/mission-locale",
  },
  "get:/job/v1/offer/{id}": {
    "id": "get:/job/v1/offer/{id}",
    "method": "get",
    "operation": {
      "description": "",
      "operationId": "jobSearchById",
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "description": "",
            "examples": [
              "6687165396d52b5e01b409545",
            ],
            "type": "string",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobOfferRead",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Job",
      ],
    },
    "path": "/job/v1/offer/{id}",
  },
  "get:/job/v1/offer/{id}/publishing-informations": {
    "id": "get:/job/v1/offer/{id}/publishing-informations",
    "method": "get",
    "operation": {
      "description": "",
      "operationId": "jobPublisingInfos",
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "description": "",
            "examples": [
              "6687165396d52b5e01b409545",
            ],
            "type": "string",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobOfferPublishing",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Job",
      ],
    },
    "path": "/job/v1/offer/{id}/publishing-informations",
  },
  "get:/job/v1/search": {
    "id": "get:/job/v1/search",
    "method": "get",
    "operation": {
      "description": "",
      "operationId": "jobSearch",
      "parameters": [
        {
          "in": "query",
          "name": "longitude",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              48.8566,
            ],
            "maximum": 180,
            "minimum": -180,
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "latitude",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              2.3522,
            ],
            "maximum": 90,
            "minimum": -90,
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "radius",
          "required": false,
          "schema": {
            "default": 30,
            "description": "",
            "examples": [
              30,
            ],
            "maximum": 200,
            "minimum": 0,
            "type": "number",
          },
        },
        {
          "in": "query",
          "name": "target_diploma_level",
          "required": false,
          "schema": {
            "description": "",
            "enum": [
              "3",
              "4",
              "5",
              "6",
              "7",
            ],
            "examples": [
              "3",
              "4",
              "5",
              "6",
              "7",
            ],
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "romes",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              "F1601,F1201,F1106",
              "M1806",
            ],
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "rncp",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              "RNCP34436",
              "RNCP183",
            ],
            "pattern": "^RNCP\\d{3,5}$",
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "opco",
          "required": false,
          "schema": {
            "description": "",
            "enum": [
              "AFDAS",
              "AKTO / Opco entreprises et salariés des services à forte intensité de main d'oeuvre",
              "ATLAS",
              "Constructys",
              "L'Opcommerce",
              "OCAPIAT",
              "OPCO 2i",
              "Opco entreprises de proximité",
              "Opco Mobilités",
              "Opco Santé",
              "Uniformation, l'Opco de la Cohésion sociale",
            ],
            "examples": [
              "AFDAS",
            ],
            "type": "string",
          },
        },
        {
          "in": "query",
          "name": "departements",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              "75&departements=06",
              "06",
            ],
            "items": {
              "type": "string",
            },
            "type": "array",
          },
        },
        {
          "in": "query",
          "name": "partners_to_exclude",
          "required": false,
          "schema": {
            "description": "",
            "examples": [
              "Hellowork&partners_to_exclude=RH Alternance",
              "Hellowork",
            ],
            "items": {
              "type": "string",
            },
            "type": "array",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "jobs": {
                    "description": "",
                    "items": {
                      "$ref": "#/components/schemas/JobOfferRead",
                    },
                    "type": "array",
                  },
                  "recruiters": {
                    "description": "",
                    "items": {
                      "$ref": "#/components/schemas/JobRecruiter",
                    },
                    "type": "array",
                  },
                  "warnings": {
                    "description": "",
                    "examples": [
                      {
                        "code": "WARNING_CODE",
                        "message": "Some warning message",
                      },
                    ],
                    "items": {
                      "properties": {
                        "code": {
                          "type": "string",
                        },
                        "message": {
                          "type": "string",
                        },
                      },
                      "required": [
                        "message",
                        "code",
                      ],
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "jobs",
                  "recruiters",
                  "warnings",
                ],
                "type": "object",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Job",
      ],
    },
    "path": "/job/v1/search",
  },
  "get:/organisme/v1/export": {
    "id": "get:/organisme/v1/export",
    "method": "get",
    "operation": {
      "description": "",
      "operationId": "exportOrganismes",
      "parameters": [
        {
          "in": "query",
          "name": "page_size",
          "required": false,
          "schema": {
            "default": 100,
            "description": "",
            "examples": [
              10,
            ],
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
          },
        },
        {
          "allowEmptyValue": true,
          "in": "query",
          "name": "page_index",
          "required": false,
          "schema": {
            "default": 0,
            "description": "",
            "examples": [
              12,
            ],
            "minimum": 0,
            "type": "integer",
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "description": "",
                    "items": {
                      "$ref": "#/components/schemas/Organisme",
                    },
                    "type": "array",
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination",
                  },
                },
                "required": [
                  "data",
                  "pagination",
                ],
                "type": "object",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Organisms",
      ],
    },
    "path": "/organisme/v1/export",
  },
  "get:/organisme/v1/recherche": {
    "id": "get:/organisme/v1/recherche",
    "method": "get",
    "operation": {
      "description": "Récupère la liste des organismes, filtrée par UAI et/ou SIRET fournis",
      "operationId": "searchOrganismes",
      "parameters": [
        {
          "in": "query",
          "name": "uai",
          "required": false,
          "schema": {
            "anyOf": [
              {
                "pattern": "^\\d{7}[A-Z]$",
                "type": "string",
              },
              {
                "type": "null",
              },
            ],
          },
        },
        {
          "in": "query",
          "name": "siret",
          "required": false,
          "schema": {
            "anyOf": [
              {
                "pattern": "^\\d{14}$",
                "type": "string",
              },
              {
                "type": "null",
              },
            ],
          },
        },
      ],
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "candidats": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "correspondances": {
                          "additionalProperties": false,
                          "properties": {
                            "siret": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "lui_meme": {
                                      "type": "boolean",
                                    },
                                    "son_formateur": {
                                      "type": "boolean",
                                    },
                                    "son_responsable": {
                                      "type": "boolean",
                                    },
                                  },
                                  "required": [
                                    "son_formateur",
                                    "son_responsable",
                                    "lui_meme",
                                  ],
                                  "type": "object",
                                },
                                {
                                  "type": "null",
                                },
                              ],
                            },
                            "uai": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "lui_meme": {
                                      "type": "boolean",
                                    },
                                    "son_lieu": {
                                      "type": "boolean",
                                    },
                                  },
                                  "required": [
                                    "lui_meme",
                                    "son_lieu",
                                  ],
                                  "type": "object",
                                },
                                {
                                  "type": "null",
                                },
                              ],
                            },
                          },
                          "required": [
                            "uai",
                            "siret",
                          ],
                          "type": "object",
                        },
                        "organisme": {
                          "additionalProperties": false,
                          "properties": {
                            "identifiant": {
                              "additionalProperties": false,
                              "properties": {
                                "siret": {
                                  "pattern": "^\\d{14}$",
                                  "type": "string",
                                },
                                "uai": {
                                  "anyOf": [
                                    {
                                      "pattern": "^\\d{7}[A-Z]$",
                                      "type": "string",
                                    },
                                    {
                                      "type": "null",
                                    },
                                  ],
                                },
                              },
                              "required": [
                                "uai",
                                "siret",
                              ],
                              "type": "object",
                            },
                          },
                          "required": [
                            "identifiant",
                          ],
                          "type": "object",
                        },
                        "status": {
                          "additionalProperties": false,
                          "properties": {
                            "declaration_catalogue": {
                              "type": "boolean",
                            },
                            "ouvert": {
                              "type": "boolean",
                            },
                            "validation_uai": {
                              "type": "boolean",
                            },
                          },
                          "required": [
                            "ouvert",
                            "declaration_catalogue",
                            "validation_uai",
                          ],
                          "type": "object",
                        },
                      },
                      "required": [
                        "status",
                        "correspondances",
                        "organisme",
                      ],
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "metadata": {
                    "additionalProperties": false,
                    "properties": {
                      "siret": {
                        "anyOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "status": {
                                "enum": [
                                  "inconnu",
                                  "fermé",
                                  "ok",
                                ],
                                "type": "string",
                              },
                            },
                            "required": [
                              "status",
                            ],
                            "type": "object",
                          },
                          {
                            "type": "null",
                          },
                        ],
                      },
                      "uai": {
                        "anyOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "status": {
                                "enum": [
                                  "inconnu",
                                  "ok",
                                ],
                                "type": "string",
                              },
                            },
                            "required": [
                              "status",
                            ],
                            "type": "object",
                          },
                          {
                            "type": "null",
                          },
                        ],
                      },
                    },
                    "required": [
                      "uai",
                      "siret",
                    ],
                    "type": "object",
                  },
                  "resultat": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "correspondances": {
                            "additionalProperties": false,
                            "properties": {
                              "siret": {
                                "anyOf": [
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "lui_meme": {
                                        "type": "boolean",
                                      },
                                      "son_formateur": {
                                        "type": "boolean",
                                      },
                                      "son_responsable": {
                                        "type": "boolean",
                                      },
                                    },
                                    "required": [
                                      "son_formateur",
                                      "son_responsable",
                                      "lui_meme",
                                    ],
                                    "type": "object",
                                  },
                                  {
                                    "type": "null",
                                  },
                                ],
                              },
                              "uai": {
                                "anyOf": [
                                  {
                                    "additionalProperties": false,
                                    "properties": {
                                      "lui_meme": {
                                        "type": "boolean",
                                      },
                                      "son_lieu": {
                                        "type": "boolean",
                                      },
                                    },
                                    "required": [
                                      "lui_meme",
                                      "son_lieu",
                                    ],
                                    "type": "object",
                                  },
                                  {
                                    "type": "null",
                                  },
                                ],
                              },
                            },
                            "required": [
                              "uai",
                              "siret",
                            ],
                            "type": "object",
                          },
                          "organisme": {
                            "additionalProperties": false,
                            "properties": {
                              "identifiant": {
                                "additionalProperties": false,
                                "properties": {
                                  "siret": {
                                    "pattern": "^\\d{14}$",
                                    "type": "string",
                                  },
                                  "uai": {
                                    "anyOf": [
                                      {
                                        "pattern": "^\\d{7}[A-Z]$",
                                        "type": "string",
                                      },
                                      {
                                        "type": "null",
                                      },
                                    ],
                                  },
                                },
                                "required": [
                                  "uai",
                                  "siret",
                                ],
                                "type": "object",
                              },
                            },
                            "required": [
                              "identifiant",
                            ],
                            "type": "object",
                          },
                          "status": {
                            "additionalProperties": false,
                            "properties": {
                              "declaration_catalogue": {
                                "type": "boolean",
                              },
                              "ouvert": {
                                "type": "boolean",
                              },
                              "validation_uai": {
                                "type": "boolean",
                              },
                            },
                            "required": [
                              "ouvert",
                              "declaration_catalogue",
                              "validation_uai",
                            ],
                            "type": "object",
                          },
                        },
                        "required": [
                          "status",
                          "correspondances",
                          "organisme",
                        ],
                        "type": "object",
                      },
                      {
                        "type": "null",
                      },
                    ],
                  },
                },
                "required": [
                  "metadata",
                  "resultat",
                  "candidats",
                ],
                "type": "object",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "Recherche d'organismes par UAI et/ou SIRET",
      "tags": [
        "Organisms",
      ],
    },
    "path": "/organisme/v1/recherche",
  },
  "post:/formation/v1/appointment/generate-link": {
    "id": "post:/formation/v1/appointment/generate-link",
    "method": "post",
    "operation": {
      "description": "",
      "operationId": "generateFormationAppointmentLink",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "cle_ministere_educatif": {
                      "description": "",
                      "type": "string",
                    },
                  },
                  "required": [
                    "cle_ministere_educatif",
                  ],
                  "type": "object",
                },
                {
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "parcoursup_id": {
                      "description": "",
                      "type": "string",
                    },
                  },
                  "required": [
                    "parcoursup_id",
                  ],
                  "type": "object",
                },
                {
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "onisep_id": {
                      "description": "",
                      "type": "string",
                    },
                  },
                  "required": [
                    "onisep_id",
                  ],
                  "type": "object",
                },
              ],
            },
          },
        },
        "required": true,
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "cfd": {
                        "description": "",
                        "type": "string",
                      },
                      "cle_ministere_educatif": {
                        "description": "",
                        "type": "string",
                      },
                      "code_postal": {
                        "description": "",
                        "type": "string",
                      },
                      "etablissement_formateur_entreprise_raison_sociale": {
                        "description": "",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "etablissement_formateur_siret": {
                        "description": "",
                        "examples": [
                          "78424186100011",
                        ],
                        "pattern": "^\\d{14}$",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "form_url": {
                        "description": "",
                        "type": "string",
                      },
                      "intitule_long": {
                        "description": "",
                        "type": "string",
                      },
                      "lieu_formation_adresse": {
                        "description": "",
                        "type": "string",
                      },
                      "localite": {
                        "description": "",
                        "type": "string",
                      },
                    },
                    "required": [
                      "etablissement_formateur_entreprise_raison_sociale",
                      "intitule_long",
                      "lieu_formation_adresse",
                      "code_postal",
                      "etablissement_formateur_siret",
                      "cfd",
                      "localite",
                      "cle_ministere_educatif",
                      "form_url",
                    ],
                    "type": "object",
                  },
                  {
                    "description": "",
                    "properties": {
                      "error": {
                        "enum": [
                          "Appointment request not available",
                        ],
                        "type": "string",
                      },
                    },
                    "required": [
                      "error",
                    ],
                    "type": "object",
                  },
                ],
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [],
        },
      ],
      "summary": "",
      "tags": [
        "Training",
      ],
    },
    "path": "/formation/v1/appointment/generate-link",
  },
  "post:/job/v1/apply": {
    "id": "post:/job/v1/apply",
    "method": "post",
    "operation": {
      "description": "",
      "operationId": "jobApply",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/JobApplicationWrite",
            },
          },
        },
        "required": true,
      },
      "responses": {
        "202": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [
            "applications:write",
          ],
        },
      ],
      "summary": "",
      "tags": [
        "Job",
      ],
    },
    "path": "/job/v1/apply",
  },
  "post:/job/v1/offer": {
    "id": "post:/job/v1/offer",
    "method": "post",
    "operation": {
      "description": "",
      "operationId": "jobOfferCreate",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/JobOfferWrite",
            },
          },
        },
        "required": true,
      },
      "responses": {
        "200": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
              },
            },
          },
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [
            "jobs:write",
          ],
        },
      ],
      "summary": "",
      "tags": [
        "Job",
      ],
    },
    "path": "/job/v1/offer",
  },
  "put:/job/v1/offer/{id}": {
    "id": "put:/job/v1/offer/{id}",
    "method": "put",
    "operation": {
      "description": "",
      "operationId": "jobOfferUpdate",
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "description": "",
            "examples": [
              "6687165396d52b5e01b409545",
            ],
            "type": "string",
          },
        },
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/JobOfferWrite",
            },
          },
        },
        "required": true,
      },
      "responses": {
        "204": {
          "description": "",
        },
        "400": {
          "$ref": "#/components/responses/BadRequest",
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized",
        },
        "403": {
          "$ref": "#/components/responses/Forbidden",
        },
        "404": {
          "$ref": "#/components/responses/NotFound",
        },
        "409": {
          "$ref": "#/components/responses/Conflict",
        },
        "419": {
          "$ref": "#/components/responses/TooManyRequests",
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError",
        },
        "502": {
          "$ref": "#/components/responses/BadGateway",
        },
        "503": {
          "$ref": "#/components/responses/ServiceUnavailable",
        },
      },
      "security": [
        {
          "api-key": [
            "jobs:write",
          ],
        },
      ],
      "summary": "",
      "tags": [
        "Job",
      ],
    },
    "path": "/job/v1/offer/{id}",
  },
}
`;

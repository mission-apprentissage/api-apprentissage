// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`generateOpenApiSchema > should be alright /certification/v1 1`] = `
[
  {
    "oldValue": true,
    "path": [
      "get",
      "parameters",
      "identifiant.cfd",
      "allowEmptyValue",
    ],
    "type": "REMOVE",
  },
  {
    "oldValue": true,
    "path": [
      "get",
      "parameters",
      "identifiant.rncp",
      "allowEmptyValue",
    ],
    "type": "REMOVE",
  },
]
`;

exports[`generateOpenApiSchema > should be alright /experimental/source/acce 1`] = `[]`;

exports[`generateOpenApiSchema > should be alright /experimental/source/acce/fille 1`] = `[]`;

exports[`generateOpenApiSchema > should be alright /experimental/source/acce/mere 1`] = `[]`;

exports[`generateOpenApiSchema > should be alright /experimental/source/acce/specialite 1`] = `[]`;

exports[`generateOpenApiSchema > should be alright /experimental/source/acce/zone 1`] = `[]`;

exports[`generateOpenApiSchema > should be alright /geographie/v1/commune/search 1`] = `
[
  {
    "oldValue": 2,
    "path": [
      "get",
      "responses",
      "200",
      "content",
      "application/json",
      "schema",
      "items",
      "properties",
      "localisation",
      "properties",
      "centre",
      "properties",
      "coordinates",
      "maxItems",
    ],
    "type": "REMOVE",
  },
  {
    "oldValue": 2,
    "path": [
      "get",
      "responses",
      "200",
      "content",
      "application/json",
      "schema",
      "items",
      "properties",
      "localisation",
      "properties",
      "centre",
      "properties",
      "coordinates",
      "minItems",
    ],
    "type": "REMOVE",
  },
  {
    "oldValue": 2,
    "path": [
      "get",
      "responses",
      "200",
      "content",
      "application/json",
      "schema",
      "items",
      "properties",
      "localisation",
      "properties",
      "bbox",
      "properties",
      "coordinates",
      "items",
      "items",
      "maxItems",
    ],
    "type": "REMOVE",
  },
  {
    "oldValue": 2,
    "path": [
      "get",
      "responses",
      "200",
      "content",
      "application/json",
      "schema",
      "items",
      "properties",
      "localisation",
      "properties",
      "bbox",
      "properties",
      "coordinates",
      "items",
      "items",
      "minItems",
    ],
    "type": "REMOVE",
  },
  {
    "oldValue": [
      {
        "_": "schema",
        "type": "null",
      },
      {
        "_": "schema",
        "properties": {
          "contact": {
            "_": "schema",
            "properties": {
              "email": {
                "_": "schema",
                "format": "email",
                "type": [
                  "string",
                  "null",
                ],
              },
              "siteWeb": {
                "_": "schema",
                "type": [
                  "string",
                  "null",
                ],
              },
              "telephone": {
                "_": "schema",
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "required": [
              "email",
              "siteWeb",
              "telephone",
            ],
            "type": "object",
          },
          "id": {
            "_": "schema",
            "type": "number",
          },
          "localisation": {
            "_": "schema",
            "properties": {
              "adresse": {
                "_": "schema",
                "type": "string",
              },
              "cp": {
                "_": "schema",
                "type": "string",
              },
              "geopoint": {
                "_": "schema",
                "additionalProperties": false,
                "properties": {
                  "coordinates": {
                    "_": "schema",
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "_": "schema",
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                      },
                      {
                        "_": "schema",
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                      },
                    ],
                    "type": "array",
                  },
                  "type": {
                    "_": "schema",
                    "enum": [
                      "Point",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "coordinates",
                  "type",
                ],
                "type": [
                  "object",
                  "null",
                ],
              },
              "ville": {
                "_": "schema",
                "type": "string",
              },
            },
            "required": [
              "adresse",
              "cp",
              "geopoint",
              "ville",
            ],
            "type": "object",
          },
          "nom": {
            "_": "schema",
            "type": "string",
          },
          "siret": {
            "_": "schema",
            "type": "string",
          },
        },
        "required": [
          "contact",
          "id",
          "localisation",
          "nom",
          "siret",
        ],
        "type": "object",
      },
    ],
    "path": [
      "get",
      "responses",
      "200",
      "content",
      "application/json",
      "schema",
      "items",
      "properties",
      "mission_locale",
      "anyOf",
    ],
    "type": "REMOVE",
  },
  {
    "path": [
      "get",
      "responses",
      "200",
      "content",
      "application/json",
      "schema",
      "items",
      "properties",
      "mission_locale",
      "type",
    ],
    "type": "CREATE",
    "value": [
      "object",
      "null",
    ],
  },
  {
    "path": [
      "get",
      "responses",
      "200",
      "content",
      "application/json",
      "schema",
      "items",
      "properties",
      "mission_locale",
      "properties",
    ],
    "type": "CREATE",
    "value": {
      "contact": {
        "_": "schema",
        "properties": {
          "email": {
            "_": "schema",
            "format": "email",
            "type": [
              "string",
              "null",
            ],
          },
          "siteWeb": {
            "_": "schema",
            "type": [
              "string",
              "null",
            ],
          },
          "telephone": {
            "_": "schema",
            "type": [
              "string",
              "null",
            ],
          },
        },
        "required": [
          "email",
          "siteWeb",
          "telephone",
        ],
        "type": "object",
      },
      "id": {
        "_": "schema",
        "type": "number",
      },
      "localisation": {
        "_": "schema",
        "properties": {
          "adresse": {
            "_": "schema",
            "type": "string",
          },
          "cp": {
            "_": "schema",
            "type": "string",
          },
          "geopoint": {
            "_": "schema",
            "additionalProperties": false,
            "properties": {
              "coordinates": {
                "_": "schema",
                "prefixItems": [
                  {
                    "_": "schema",
                    "maximum": 180,
                    "minimum": -180,
                    "type": "number",
                  },
                  {
                    "_": "schema",
                    "maximum": 90,
                    "minimum": -90,
                    "type": "number",
                  },
                ],
                "type": "array",
              },
              "type": {
                "_": "schema",
                "enum": [
                  "Point",
                ],
                "type": "string",
              },
            },
            "required": [
              "coordinates",
              "type",
            ],
            "type": [
              "object",
              "null",
            ],
          },
          "ville": {
            "_": "schema",
            "type": "string",
          },
        },
        "required": [
          "adresse",
          "cp",
          "geopoint",
          "ville",
        ],
        "type": "object",
      },
      "nom": {
        "_": "schema",
        "type": "string",
      },
      "siret": {
        "_": "schema",
        "type": "string",
      },
    },
  },
  {
    "path": [
      "get",
      "responses",
      "200",
      "content",
      "application/json",
      "schema",
      "items",
      "properties",
      "mission_locale",
      "required",
    ],
    "type": "CREATE",
    "value": [
      "contact",
      "id",
      "localisation",
      "nom",
      "siret",
    ],
  },
]
`;

exports[`generateOpenApiSchema > should be alright /geographie/v1/departement 1`] = `[]`;

exports[`generateOpenApiSchema > should be alright /geographie/v1/mission-locale 1`] = `
[
  {
    "oldValue": 2,
    "path": [
      "get",
      "responses",
      "200",
      "content",
      "application/json",
      "schema",
      "items",
      "properties",
      "localisation",
      "properties",
      "geopoint",
      "properties",
      "coordinates",
      "maxItems",
    ],
    "type": "REMOVE",
  },
  {
    "oldValue": 2,
    "path": [
      "get",
      "responses",
      "200",
      "content",
      "application/json",
      "schema",
      "items",
      "properties",
      "localisation",
      "properties",
      "geopoint",
      "properties",
      "coordinates",
      "minItems",
    ],
    "type": "REMOVE",
  },
]
`;

exports[`generateOpenApiSchema > should be alright /healthcheck 1`] = `[]`;

exports[`generateOpenApiSchema > should be alright /organisme/v1/recherche 1`] = `[]`;

exports[`generateOpenApiSchema > should generate proper schema 1`] = `
{
  "components": {
    "responses": {
      "BadGateway": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Le service est indisponible.",
              "properties": {
                "data": {
                  "description": "Données contextuelles liées à l'erreur",
                },
                "message": {
                  "description": "Un message explicatif de l'erreur",
                  "example": "The server was unable to complete your request",
                  "type": "string",
                },
                "name": {
                  "description": "Le type générique de l'erreur",
                  "example": "Bad Gateway",
                  "type": "string",
                },
                "statusCode": {
                  "description": "Le status code retourné",
                  "enum": [
                    502,
                  ],
                  "type": "number",
                },
              },
              "required": [
                "message",
                "name",
                "statusCode",
              ],
              "type": "object",
            },
          },
        },
        "description": "Le service est indisponible.",
      },
      "BadRequest": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Requête invalide",
              "properties": {
                "data": {
                  "description": "Données contextuelles liées à l'erreur",
                },
                "message": {
                  "description": "Un message explicatif de l'erreur",
                  "examples": [
                    "Request validation failed",
                  ],
                  "type": "string",
                },
                "name": {
                  "description": "Le type générique de l'erreur",
                  "examples": [
                    "Bad Request",
                  ],
                  "type": "string",
                },
                "statusCode": {
                  "description": "Le status code retourné",
                  "enum": [
                    400,
                  ],
                  "type": "number",
                },
              },
              "required": [
                "message",
                "name",
                "statusCode",
              ],
              "type": "object",
            },
          },
        },
        "description": "Requête invalide",
      },
      "Conflict": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Conflit de ressource",
              "properties": {
                "data": {
                  "description": "Données contextuelles liées à l'erreur",
                },
                "message": {
                  "description": "Un message explicatif de l'erreur",
                  "example": "La ressource exite déjà",
                  "type": "string",
                },
                "name": {
                  "description": "Le type générique de l'erreur",
                  "example": "Conflict",
                  "type": "string",
                },
                "statusCode": {
                  "description": "Le status code retourné",
                  "enum": [
                    409,
                  ],
                  "type": "number",
                },
              },
              "required": [
                "message",
                "name",
                "statusCode",
              ],
              "type": "object",
            },
          },
        },
        "description": "Conflit de ressource",
      },
      "Forbidden": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Habilitations insuffisantes pour accéder à la ressource",
              "properties": {
                "data": {
                  "description": "Données contextuelles liées à l'erreur",
                },
                "message": {
                  "description": "Un message explicatif de l'erreur",
                  "example": "Le jeton d'accès est invalide",
                  "type": "string",
                },
                "name": {
                  "description": "Le type générique de l'erreur",
                  "example": "Forbidden",
                  "type": "string",
                },
                "statusCode": {
                  "description": "Le status code retourné",
                  "enum": [
                    403,
                  ],
                  "type": "number",
                },
              },
              "required": [
                "message",
                "name",
                "statusCode",
              ],
              "type": "object",
            },
          },
        },
        "description": "Habilitations insuffisantes pour accéder à la ressource",
      },
      "InternalServerError": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Une erreur inattendue s'est produite sur le serveur.",
              "properties": {
                "data": {
                  "description": "Données contextuelles liées à l'erreur",
                },
                "message": {
                  "description": "Un message explicatif de l'erreur",
                  "example": "The server was unable to complete your request",
                  "type": "string",
                },
                "name": {
                  "description": "Le type générique de l'erreur",
                  "example": "Internal Server Error",
                  "type": "string",
                },
                "statusCode": {
                  "description": "Le status code retourné",
                  "enum": [
                    500,
                  ],
                  "type": "number",
                },
              },
              "required": [
                "message",
                "name",
                "statusCode",
              ],
              "type": "object",
            },
          },
        },
        "description": "Une erreur inattendue s'est produite sur le serveur.",
      },
      "NotFound": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Ressource non trouvée",
              "properties": {
                "data": {
                  "description": "Données contextuelles liées à l'erreur",
                },
                "message": {
                  "description": "Un message explicatif de l'erreur",
                  "example": "Resource non trouvée",
                  "type": "string",
                },
                "name": {
                  "description": "Le type générique de l'erreur",
                  "example": "Not Found",
                  "type": "string",
                },
                "statusCode": {
                  "description": "Le status code retourné",
                  "enum": [
                    404,
                  ],
                  "type": "number",
                },
              },
              "required": [
                "message",
                "name",
                "statusCode",
              ],
              "type": "object",
            },
          },
        },
        "description": "Ressource non trouvée",
      },
      "ServiceUnavailable": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Le service est en maintenance",
              "properties": {
                "data": {
                  "description": "Données contextuelles liées à l'erreur",
                },
                "message": {
                  "description": "Un message explicatif de l'erreur",
                  "example": "The server was unable to complete your request",
                  "type": "string",
                },
                "name": {
                  "description": "Le type générique de l'erreur",
                  "example": "Service Unavailable",
                  "type": "string",
                },
                "statusCode": {
                  "description": "Le status code retourné",
                  "enum": [
                    502,
                  ],
                  "type": "number",
                },
              },
              "required": [
                "message",
                "name",
                "statusCode",
              ],
              "type": "object",
            },
          },
        },
        "description": "Le service est en maintenance",
      },
      "TooManyRequests": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Limite de volumétrie atteinte pour la clé d’API",
              "properties": {
                "data": {
                  "description": "Données contextuelles liées à l'erreur",
                },
                "message": {
                  "description": "Un message explicatif de l'erreur",
                  "example": "Limite de requêtes atteinte",
                  "type": "string",
                },
                "name": {
                  "description": "Le type générique de l'erreur",
                  "example": "Too Many Requests",
                  "type": "string",
                },
                "statusCode": {
                  "description": "Le status code retourné",
                  "enum": [
                    419,
                  ],
                  "type": "number",
                },
              },
              "required": [
                "message",
                "name",
                "statusCode",
              ],
              "type": "object",
            },
          },
        },
        "description": "Limite de volumétrie atteinte pour la clé d’API",
      },
      "Unauthorized": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Clé d’API manquante ou invalide",
              "properties": {
                "data": {
                  "description": "Données contextuelles liées à l'erreur",
                },
                "message": {
                  "description": "Un message explicatif de l'erreur",
                  "example": "Vous devez être connecté pour accéder à cette ressource",
                  "type": "string",
                },
                "name": {
                  "description": "Le type générique de l'erreur",
                  "example": "Unauthorized",
                  "type": "string",
                },
                "statusCode": {
                  "description": "Le status code retourné",
                  "enum": [
                    401,
                  ],
                  "type": "number",
                },
              },
              "required": [
                "message",
                "name",
                "statusCode",
              ],
              "type": "object",
            },
          },
        },
        "description": "Clé d’API manquante ou invalide",
      },
    },
    "schemas": {
      "Certification": {
        "description": "Certification",
        "properties": {
          "base_legale": {
            "description": "Dates de création et d’abrogation des diplômes crées par arrêtés",
            "properties": {
              "cfd": {
                "description": "Informations légales issue de la base centrale des nomenclatures (BCN) relatives au diplôme.

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                "properties": {
                  "abrogation": {
                    "description": "Date d'arrêté d'abrogation du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '23:59:59' sur le fuseau horaire 'Europe/Paris'.
- La date est retournée au format ISO 8601 avec le fuseau horaire 'Europe/Paris'.
",
                    "examples": [
                      "2022-08-31T23:59:59.000+02:00",
                      "2022-12-31T23:59:59.000+01:00",
                    ],
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "creation": {
                    "description": "Date d'arrêté de création du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '00:00:00' sur le fuseau horaire 'Europe/Paris'.
- La date est retournée au format ISO 8601 avec le fuseau horaire 'Europe/Paris'.
",
                    "examples": [
                      "2014-02-21T00:00:00.000+01:00",
                      "2018-05-11T00:00:00.000+02:00",
                    ],
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                },
                "required": [
                  "creation",
                  "abrogation",
                ],
                "type": [
                  "object",
                  "null",
                ],
              },
            },
            "required": [
              "cfd",
            ],
            "type": "object",
          },
          "blocs_competences": {
            "description": "Liste du (ou des) code (s) et intitulé(s) des blocs de compétences validées par la certification",
            "properties": {
              "rncp": {
                "description": "Liste des blocs de compétences issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                "items": {
                  "properties": {
                    "code": {
                      "examples": [
                        "RNCP37537BC01",
                      ],
                      "pattern": "^(RNCP\\d{3,5}BC)?\\d{1,2}$",
                      "type": "string",
                    },
                    "intitule": {
                      "examples": [
                        "Approvisionnement, communication, sécurité alimentaire et hygiène en boulangerie",
                      ],
                      "type": [
                        "string",
                        "null",
                      ],
                    },
                  },
                  "required": [
                    "code",
                    "intitule",
                  ],
                  "type": "object",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "required": [
              "rncp",
            ],
            "type": "object",
          },
          "continuite": {
            "description": "**Liste des couples CFD-RNCP assurant la continuité de la certification professionnelles.** La liste inclut à la fois les fiches remplacées et remplaçantes. Elle est ordonnée par date d'activation de la fiche RNCP et inclut la fiche courante.
",
            "properties": {
              "cfd": {
                "description": "Liste des diplômes assurant la continuité du diplôme. La liste inclut à la fois les diplômes remplacés et remplaçant. La liste est ordonnée par date d'ouverture du diplôme et inclut le diplôme courant.

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.
- Pour distinguer les diplômes remplacés des diplômes remplaçant, il faut se référer aux dates d'ouverture et de fermeture des diplômes.
",
                "items": {
                  "properties": {
                    "code": {
                      "pattern": "^[A-Z0-9]{3}\\d{3}[A-Z0-9]{2}$",
                      "type": "string",
                    },
                    "courant": {
                      "description": "Indique si le diplôme correspond au diplôme courant, i.e \`identifiant.cfd\` est égal au \`code\`.",
                      "type": "boolean",
                    },
                    "fermeture": {
                      "description": "Date de fermeture du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '23:59:59' sur le fuseau horaire 'Europe/Paris'.",
                      "examples": [
                        "2022-08-31T23:59:59.000+02:00",
                        "2022-12-31T23:59:59.000+01:00",
                      ],
                      "format": "date-time",
                      "type": [
                        "string",
                        "null",
                      ],
                    },
                    "ouverture": {
                      "description": "Date d'ouverture du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '00:00:00' sur le fuseau horaire 'Europe/Paris'.",
                      "examples": [
                        "2021-09-01T00:00:00.000+02:00",
                        "2022-01-01T00:00:00.000+01:00",
                      ],
                      "format": "date-time",
                      "type": [
                        "string",
                        "null",
                      ],
                    },
                  },
                  "required": [
                    "ouverture",
                    "fermeture",
                    "code",
                    "courant",
                  ],
                  "type": "object",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
              "rncp": {
                "description": "Liste des fiches RNCP assurant la continuité de la certification. La liste inclut à la fois les fiches remplacées et remplaçantes. La liste est ordonnée par date d'activation de la fiche RNCP et inclut la fiche courante.


Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.
- Pour distinguer les fiches remplacées des fiches remplaçant, il faut se référer aux dates d'activation et de fin d'enregistrement des fiches.
",
                "items": {
                  "properties": {
                    "actif": {
                      "description": "Lorsque la fiche est active, les inscriptions à la formation sont ouvertes, à l’inverse, lorsque la fiche est inactive, les inscriptions sont fermées.",
                      "type": "boolean",
                    },
                    "activation": {
                      "description": "Date à laquelle la fiche RNCP est passée au statut \`actif\`.

Notes:

- La couverture de ce champ est partiel car nous ne sommes pas en mesure pour le moment de récupérer les dates d'activation antérieures au 24 décembre 2021.

- France Compétence ne fournie pas l'information, nous le déduisons de la date de premiere apparation de la fiche RNCP avec le statut \`actif\`.",
                      "examples": [
                        "2021-09-01T00:00:00.000+02:00",
                        "2022-01-01T00:00:00.000+01:00",
                      ],
                      "format": "date-time",
                      "type": [
                        "string",
                        "null",
                      ],
                    },
                    "code": {
                      "description": "Indique si la fiche correspond à la fiche courante, i.e \`identifiant.rncp\` est égal au \`code\`.",
                      "pattern": "^RNCP\\d{3,5}$",
                      "type": "string",
                    },
                    "courant": {
                      "type": "boolean",
                    },
                    "fin_enregistrement": {
                      "description": "Date de fin d’enregistrement d’une fiche au RNCP.

Notes:

- France Compétence fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '23:59:59' sur le fuseau horaire 'Europe/Paris'.",
                      "examples": [
                        "2021-09-01T00:00:00.000+02:00",
                        "2022-01-01T00:00:00.000+01:00",
                      ],
                      "format": "date-time",
                      "type": [
                        "string",
                        "null",
                      ],
                    },
                  },
                  "required": [
                    "activation",
                    "fin_enregistrement",
                    "code",
                    "courant",
                    "actif",
                  ],
                  "type": "object",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "required": [
              "cfd",
              "rncp",
            ],
            "type": "object",
          },
          "convention_collectives": {
            "description": "Liste(s) de la ou des convention(s) collective(s) rattachées à la certification",
            "properties": {
              "rncp": {
                "description": "Liste des conventions collectives issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                "items": {
                  "properties": {
                    "intitule": {
                      "examples": [
                        "Bâtiment (Employés, techniciens et agents de maîtrise, ingénieurs, assimilés et cadres)",
                      ],
                      "type": "string",
                    },
                    "numero": {
                      "examples": [
                        "3002",
                      ],
                      "type": "string",
                    },
                  },
                  "required": [
                    "numero",
                    "intitule",
                  ],
                  "type": "object",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
            },
            "required": [
              "rncp",
            ],
            "type": "object",
          },
          "domaines": {
            "description": "Cet élément contient des listes de codes et d’intitulés qui décrivent le domaine de la formation à travers différentes nomenclatures :

- la **Nomenclature des Spécialités de Formation (NSF).** Produite par l’INSEE, elle a pour objectif de couvrir l'ensemble des formations professionnelles ou non, de tout niveau, et sert à déterminer les domaines de formation.
- le **Répertoire Opérationnel des Métiers et des Emplois (ROME).** Conçu par France Travail (anciennement Pôle Emploi), ce référentiel présente l'ensemble des métiers regroupés par fiches, organisées par domaines professionnels.
- le **Formacode®, thésaurus de l’offre de formation** du Centre Inffo est un outil pour aider à l’indexation et la recherche d’informations sur l’offre de formation.
",
            "properties": {
              "formacodes": {
                "description": "Formacode® issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                "properties": {
                  "rncp": {
                    "description": "Formacode® issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                    "items": {
                      "properties": {
                        "code": {
                          "examples": [
                            "21538",
                          ],
                          "type": "string",
                        },
                        "intitule": {
                          "examples": [
                            "21538 : Boulangerie",
                          ],
                          "type": "string",
                        },
                      },
                      "required": [
                        "code",
                        "intitule",
                      ],
                      "type": "object",
                    },
                    "type": [
                      "array",
                      "null",
                    ],
                  },
                },
                "required": [
                  "rncp",
                ],
                "type": "object",
              },
              "nsf": {
                "properties": {
                  "cfd": {
                    "description": "NSF issue de la base centrale des nomenclatures (BCN).

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.
- Le code NSF est déduis du code formation diplôme (CFD), il n'inclut donc pas la lettre de spécialité et le tableau ne contient qu'un seul élément.
",
                    "properties": {
                      "code": {
                        "examples": [
                          "221",
                          "310",
                        ],
                        "type": "string",
                      },
                      "intitule": {
                        "examples": [
                          "AGRO-ALIMENTAIRE, ALIMENTATION, CUISINE",
                          "SPECIALIT.PLURIV.DES ECHANGES & GESTION",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "required": [
                      "code",
                      "intitule",
                    ],
                    "type": [
                      "object",
                      "null",
                    ],
                  },
                  "rncp": {
                    "description": "NSF issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                    "items": {
                      "properties": {
                        "code": {
                          "examples": [
                            "221",
                          ],
                          "pattern": "^\\d{2,3}[a-z]?$",
                          "type": "string",
                        },
                        "intitule": {
                          "examples": [
                            "221 : Agro-alimentaire, alimentation, cuisine",
                          ],
                          "type": [
                            "string",
                            "null",
                          ],
                        },
                      },
                      "required": [
                        "code",
                        "intitule",
                      ],
                      "type": "object",
                    },
                    "type": [
                      "array",
                      "null",
                    ],
                  },
                },
                "required": [
                  "cfd",
                  "rncp",
                ],
                "type": "object",
              },
              "rome": {
                "description": "Répertoire Opérationnel des Métiers et des Emplois (ROME).",
                "properties": {
                  "rncp": {
                    "description": "ROME issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                    "items": {
                      "properties": {
                        "code": {
                          "examples": [
                            "D1102",
                          ],
                          "pattern": "^[A-Z]{1}\\d{0,4}$",
                          "type": "string",
                        },
                        "intitule": {
                          "examples": [
                            "Boulangerie - viennoiserie",
                          ],
                          "type": "string",
                        },
                      },
                      "required": [
                        "code",
                        "intitule",
                      ],
                      "type": "object",
                    },
                    "type": [
                      "array",
                      "null",
                    ],
                  },
                },
                "required": [
                  "rncp",
                ],
                "type": "object",
              },
            },
            "required": [
              "formacodes",
              "nsf",
              "rome",
            ],
            "type": "object",
          },
          "identifiant": {
            "description": "**Une certification correspond à un couple CFD-RNCP sur une période donnée.** Le Code Formation Diplôme (CFD) ou code scolarité référence la certification dans la Base Centrale des Nomenclature. Le code RNCP référence la certification dans le Répertoire National des Certifications Professionnelle.

La [Base Centrale des Nomenclature](https://infocentre.pleiade.education.fr/bcn/) (BCN) est administrée par l’Education Nationale.

Le [Répertoire des Certifications Professionnelles](https://www.francecompetences.fr/recherche-resultats/?types=certification&search=&pageType=certification&active=1) (RNCP) est administré par France Compétences. **Il contient des fiches antérieures à la réforme de 2019 pour lesquelles certains champs étaient alors inexistants ou optionnels.**


Notes:

- les fiches RNCP antérieures à la réforme de 2019 ont certaines données qui ne sont pas renseignées, elles sont identifiées par le champ \`rncp_anterieur_2019\` à \`true\`.",
            "properties": {
              "cfd": {
                "description": "Code Formation Diplôme (CFD) de la certification.

Notes:

- \`null\` si et seulement si aucun diplôme CFD correspondant à la fiche RNCP (\`identifiant.rncp\`) n'est connu.
- Lorsque le code est \`null\`, toutes les informations issues de la base centrale des nomenclatures (BCN) seront \`null\`
",
                "examples": [
                  "50022137",
                ],
                "pattern": "^[A-Z0-9]{3}\\d{3}[A-Z0-9]{2}$",
                "type": [
                  "string",
                  "null",
                ],
              },
              "rncp": {
                "description": "Code Répertoire National des Certifications Professionnelles (RNCP) de la certification.

Notes:

- \`null\` si et seulement si aucune fiche RNCP correspondant au diplôme (\`identifiant.cfd\`) n'est connu.
- Lorsque le code est \`null\`, toutes les informations issues de France Compétence seront \`null\`
",
                "examples": [
                  "RNCP37537",
                ],
                "pattern": "^RNCP\\d{3,5}$",
                "type": [
                  "string",
                  "null",
                ],
              },
              "rncp_anterieur_2019": {
                "description": "Identifie les certifications dont le code RNCP correspond à une fiche antérieure à la réforme de 2019.

Notes:

- \`null\` si \`identifiant.rncp\` est \`null\`
- \`true\` si le numéro de fiche \`identifiant.rncp\` est inférieur à \`34,000\`
- \`false\` sinon
",
                "type": [
                  "boolean",
                  "null",
                ],
              },
            },
            "required": [
              "cfd",
              "rncp",
              "rncp_anterieur_2019",
            ],
            "type": "object",
          },
          "intitule": {
            "description": "Intitulé de la certification professionnelle.

Si la formation a comme résultat l’obtention d’un diplôme, le contenu de cet élément devrait utiliser une dénomination conforme aux tables de l’Éducation Nationale - soit les champs \`.cfd.court\` ou \`.cfd.long\`

Si la formation a comme résultat un titre ou une certification, le contenu devrait utiliser une dénomination conforme au contenu du Répertoire National des Certifications Professionnelles (RNCP) - soit le champ \`.rncp\`

source : [Lhéo](http://lheo.gouv.fr/2.3/lheo/intitule-formation.html)
",
            "properties": {
              "cfd": {
                "description": "Intitulés de la certification issue de la base centrale des nomenclatures (BCN).

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                "properties": {
                  "court": {
                    "description": "**Intitulé court du diplôme.**",
                    "examples": [
                      "BOULANGER",
                      "GENIE BIO - AGRONOMIE",
                    ],
                    "type": "string",
                  },
                  "long": {
                    "description": "**Intitulé long du diplôme.**",
                    "examples": [
                      "BOULANGER (CAP)",
                      "GENIE BIOLOGIQUE OPTION AGRONOMIE (DUT)",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "long",
                  "court",
                ],
                "type": [
                  "object",
                  "null",
                ],
              },
              "niveau": {
                "description": "Niveau de qualification de la certification professionnelle",
                "properties": {
                  "cfd": {
                    "description": "Niveau de la certification issue de la base centrale des nomenclatures (BCN).

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                    "properties": {
                      "europeen": {
                        "description": "Niveau de qualification de la certification (de 1 à 8) utilisés dans les référentiels nationaux européens.

Notes:

- peut être \`null\` lorsque le niveau de diplôme n'a pas de correspondance avec les niveaux européens ou qu'elle n'est pas déterminée.
- lorsque la fiche RNCP correspondante est connue, il faut priviliégier le niveau européen issue de France Compétences.
",
                        "enum": [
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7",
                          "8",
                        ],
                        "examples": [
                          "3",
                          "5",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "formation_diplome": {
                        "description": "Code à 3 caractères qui renseigne sur le niveau du diplôme suivant le référentiel de l'Éducation Nationale.

Notes:

- correspond aux 3 premiers caractères du code CFD.",
                        "examples": [
                          "500",
                          "370",
                        ],
                        "type": "string",
                      },
                      "interministeriel": {
                        "description": "code interministériel du niveau de la formation suivant le référentiel de l'Éducation Nationale.

Notes:

- correspond au premier caractère du code CFD, sauf pour le CFD \`01321401\`",
                        "examples": [
                          "3",
                          "6",
                        ],
                        "type": "string",
                      },
                      "libelle": {
                        "examples": [
                          "CLASSE PREPA",
                          "TITRE PROFESSIONNEL HOMOLOGUE OU CERTIFIE",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "sigle": {
                        "examples": [
                          "CAP",
                          "DUT",
                          "BTS",
                          "CPGE",
                        ],
                        "type": "string",
                      },
                    },
                    "required": [
                      "europeen",
                      "formation_diplome",
                      "interministeriel",
                      "libelle",
                      "sigle",
                    ],
                    "type": [
                      "object",
                      "null",
                    ],
                  },
                  "rncp": {
                    "description": "Niveau de qualification issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                    "properties": {
                      "europeen": {
                        "description": "Niveau de qualification de la certification (de 1 à 8) utilisés dans les référentiels nationaux européens.

Notes:

- \`null\` lorsque le niveau de diplôme n'a pas de correspondance avec les niveaux européens.",
                        "enum": [
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7",
                          "8",
                        ],
                        "examples": [
                          "3",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "required": [
                      "europeen",
                    ],
                    "type": [
                      "object",
                      "null",
                    ],
                  },
                },
                "required": [
                  "cfd",
                  "rncp",
                ],
                "type": "object",
              },
              "rncp": {
                "description": "Intitulé de la certification issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                "examples": [
                  "Boulanger",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "required": [
              "cfd",
              "niveau",
              "rncp",
            ],
            "type": "object",
          },
          "periode_validite": {
            "description": "**Un couple CFD-RNCP a une période de validité** qui correspond à l’intersection de la période d’ouverture du diplôme et de la période d’activité de la fiche RNCP.

Notes:

Les dates sont retournées au format ISO 8601 avec le fuseau horaire Europe/Paris.",
            "properties": {
              "cfd": {
                "description": "La période de validité d’un CFD est décrite par :

- **La date d’ouverture** : moment où il est possible de s’inscrire pour l’obtention de la certification (ou du diplôme)
- **La première session** : année de sortie des premiers diplômés
- **La dernière session** : année de sortie des derniers diplômés
- **La date de fermeture** : moment où il n’est plus possible d’émettre le diplôme.


Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                "properties": {
                  "derniere_session": {
                    "description": "Année de sortie des derniers diplômés.",
                    "examples": [
                      2025,
                    ],
                    "type": [
                      "integer",
                      "null",
                    ],
                  },
                  "fermeture": {
                    "description": "Date de fermeture du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '23:59:59' sur le fuseau horaire 'Europe/Paris'.",
                    "examples": [
                      "2022-08-31T23:59:59.000+02:00",
                      "2022-12-31T23:59:59.000+01:00",
                    ],
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "ouverture": {
                    "description": "Date d'ouverture du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '00:00:00' sur le fuseau horaire 'Europe/Paris'.",
                    "examples": [
                      "2021-09-01T00:00:00.000+02:00",
                      "2022-01-01T00:00:00.000+01:00",
                    ],
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "premiere_session": {
                    "description": "Année de sortie des premiers diplômés.",
                    "examples": [
                      2022,
                    ],
                    "type": [
                      "integer",
                      "null",
                    ],
                  },
                },
                "required": [
                  "ouverture",
                  "fermeture",
                  "premiere_session",
                  "derniere_session",
                ],
                "type": [
                  "object",
                  "null",
                ],
              },
              "debut": {
                "description": "Date de début de validité de la certification. Cette date correspond à l'intersection de la date d'ouverture du diplôme et de la date d'activation de la fiche RNCP.

Notes:

- La couverture de ce champ est partiel car nous ne sommes pas en mesure pour le moment de récupérer les dates d'activation antérieures au 24 décembre 2021.",
                "examples": [
                  "2021-09-01T00:00:00.000+02:00",
                  "2022-01-01T00:00:00.000+01:00",
                ],
                "format": "date-time",
                "type": [
                  "string",
                  "null",
                ],
              },
              "fin": {
                "description": "Date de fin de validité de la certification. Cette date correspond à l'intersection de la date de fermeture du diplôme et de la date de fin d'enregistrement.",
                "examples": [
                  "2022-08-31T23:59:59.000+02:00",
                  "2022-12-31T23:59:59.000+01:00",
                ],
                "format": "date-time",
                "type": [
                  "string",
                  "null",
                ],
              },
              "rncp": {
                "description": "La période de validité d’une fiche RNCP est décrite par :

- **La date d’activation** correspond à la date laquelle la fiche RNCP est passée au **statut actif : les inscriptions à la formation sont ouvertes** jusqu'à la date limite de délivrance de la certification.
- La **date de début des parcours certifiants** (anciennement appelée “**date d’effet**” pour les enregistrements de droits, et “**date de décision**” pour les enregistrement sur demande)
- La **date de fin d’enregistrement** : le lendemain, la fiche RNCP passe du statut “**actif**” à “**inactif**”. Pour les enregistrement de droit, cette date est renseignée par le certificateur, et pour les enregistrements sur demande, elle est déterminée par commission au moment de la décision d’enregistrement. A cette date, l'accès à la certification n'est plus possible (les inscriptions sont fermées) mais elle peut continuer à être délivrée pour les parcours en cours (formation ou VAE) ou pour la signature d'un contrat d'apprentissage suite à un nouveau contrat consécutif à une rupture du contrat.


Un enregistrement au RNCP est de maximum 5 ans, dépassé ce délai toute fiche doit fait l’objet d’une demande de renouvellement.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                "properties": {
                  "actif": {
                    "description": "Lorsque la fiche est active, les inscriptions à la formation sont ouvertes, à l’inverse, lorsque la fiche est inactive, les inscriptions sont fermées.",
                    "type": "boolean",
                  },
                  "activation": {
                    "description": "Date à laquelle la fiche RNCP est passée au statut \`actif\`.

Notes:

- La couverture de ce champ est partiel car nous ne sommes pas en mesure pour le moment de récupérer les dates d'activation antérieures au 24 décembre 2021.
- France Compétence ne fournie pas l'information, nous le déduisons de la date de premiere apparation de la fiche RNCP avec le statut \`actif\`.
",
                    "examples": [
                      "2021-09-01T00:00:00.000+02:00",
                      "2022-01-01T00:00:00.000+01:00",
                    ],
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "debut_parcours": {
                    "description": "Date de début des parcours certifiants. Anciennement appelée 'date d'effet' pour les enregistrements de droit et correspondant à la date de décision pour les enregistrements sur demande.

Notes:

La date est retournée au format ISO 8601 avec le fuseau horaire Europe/Paris.",
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "fin_enregistrement": {
                    "description": "Date de fin d’enregistrement d’une fiche au RNCP.

Notes:

- France Compétence fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '23:59:59' sur le fuseau horaire 'Europe/Paris'.",
                    "examples": [
                      "2021-09-01T00:00:00.000+02:00",
                      "2022-01-01T00:00:00.000+01:00",
                    ],
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                },
                "required": [
                  "actif",
                  "activation",
                  "debut_parcours",
                  "fin_enregistrement",
                ],
                "type": [
                  "object",
                  "null",
                ],
              },
            },
            "required": [
              "debut",
              "fin",
              "cfd",
              "rncp",
            ],
            "type": "object",
          },
          "type": {
            "description": "Le type de certification renseigne sur

- la nature du diplôme
- le service responsable de la définition du diplôme
- le(s) nom(s) et numéro(s) SIRET du ou des certificateur(s) renseigné(s) dans le RNCP
- le type d’enregistrement au RNCP (de droit ou sur demande)
- la voie d’accès à la formation (apprentissage, expérience, candidature individuelle, contrat de professionnalisation, formation continue et formation statut élève).
",
            "properties": {
              "certificateurs_rncp": {
                "description": "Liste des certificateurs de la fiche RNCP.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                "items": {
                  "properties": {
                    "nom": {
                      "description": "Nom du certificateur renseigné dans le RNCP.",
                      "type": "string",
                    },
                    "siret": {
                      "description": "Numéro SIRET du certificateur renseigné dans le RNCP.",
                      "type": "string",
                    },
                  },
                  "required": [
                    "siret",
                    "nom",
                  ],
                  "type": "object",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
              "enregistrement_rncp": {
                "description": "Permet de savoir si la certification est enregistrée de droit ou sur demande au Repertoire National des Certifications Professionnelles (RNCP)

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                "enum": [
                  "Enregistrement de droit",
                  "Enregistrement sur demande",
                ],
                "examples": [
                  "Enregistrement de droit",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "gestionnaire_diplome": {
                "description": "Service responsable de la définition du diplôme.

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                "examples": [
                  "DGESCO A2-3",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "nature": {
                "description": "Nature du diplôme.",
                "properties": {
                  "cfd": {
                    "description": "Nature du diplôme issue de la base centrale des nomenclatures (BCN).

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                    "properties": {
                      "code": {
                        "examples": [
                          "1",
                          "2",
                          "P",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "libelle": {
                        "examples": [
                          "DIPLOME NATIONAL / DIPLOME D'ETAT",
                          "TITRE PROFESSIONNEL HOMOLOGUE OU CERTIFIE",
                          "CLASSE PREPA",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "required": [
                      "code",
                      "libelle",
                    ],
                    "type": [
                      "object",
                      "null",
                    ],
                  },
                },
                "required": [
                  "cfd",
                ],
                "type": "object",
              },
              "voie_acces": {
                "description": "Voie d’accès à la certification.",
                "properties": {
                  "rncp": {
                    "description": "Voie d’accès à la certification issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                    "properties": {
                      "apprentissage": {
                        "description": "Certification accessible en contrat d’apprentissage.",
                        "type": "boolean",
                      },
                      "candidature_individuelle": {
                        "description": "Certification accessible par candidature individuelle.",
                        "type": "boolean",
                      },
                      "contrat_professionnalisation": {
                        "description": "Certification accessible en contrat de professionnalisation.",
                        "type": "boolean",
                      },
                      "experience": {
                        "description": "Certification accessible par expérience.",
                        "type": "boolean",
                      },
                      "formation_continue": {
                        "description": "Certification accessible après un parcours de formation continue.",
                        "type": "boolean",
                      },
                      "formation_statut_eleve": {
                        "description": "Certification accessible après un parcours de formation sous statut d’élève ou d’étudiant.",
                        "type": "boolean",
                      },
                    },
                    "required": [
                      "apprentissage",
                      "experience",
                      "candidature_individuelle",
                      "contrat_professionnalisation",
                      "formation_continue",
                      "formation_statut_eleve",
                    ],
                    "type": [
                      "object",
                      "null",
                    ],
                  },
                },
                "required": [
                  "rncp",
                ],
                "type": "object",
              },
            },
            "required": [
              "nature",
              "gestionnaire_diplome",
              "enregistrement_rncp",
              "voie_acces",
              "certificateurs_rncp",
            ],
            "type": "object",
          },
        },
        "required": [
          "identifiant",
          "intitule",
          "base_legale",
          "blocs_competences",
          "convention_collectives",
          "domaines",
          "periode_validite",
          "type",
          "continuite",
        ],
        "type": "object",
      },
      "Commune": {
        "description": "Commune",
        "properties": {
          "academie": {
            "description": "Académie de la commune",
            "properties": {
              "code": {
                "description": "Code de l'académie",
                "type": "string",
              },
              "id": {
                "description": "Identifiant de l'académie",
                "type": "string",
              },
              "nom": {
                "description": "Nom de l'académie",
                "type": "string",
              },
            },
            "required": [
              "id",
              "code",
              "nom",
            ],
            "type": "object",
          },
          "anciennes": {
            "description": "Anciennes communes fusionnées",
            "items": {
              "properties": {
                "codeInsee": {
                  "description": "Code INSEE de l'ancienne commune",
                  "type": "string",
                },
                "nom": {
                  "description": "Nom de l'ancienne commune",
                  "type": "string",
                },
              },
              "required": [
                "codeInsee",
                "nom",
              ],
              "type": "object",
            },
            "type": "array",
          },
          "arrondissements": {
            "description": "Arrondissements de la commune",
            "items": {
              "properties": {
                "code": {
                  "description": "Code INSEE de l'arrondissement",
                  "type": "string",
                },
                "nom": {
                  "description": "Nom de l'arrondissement",
                  "type": "string",
                },
              },
              "required": [
                "code",
                "nom",
              ],
              "type": "object",
            },
            "type": "array",
          },
          "code": {
            "description": "Code INSEE et postaux de la commune

Une commune peut avoir plusieurs code postaux, et un code postal peut correspondre à plusieurs communes. Le code INSEE lui est unique pour chaque commune.",
            "properties": {
              "insee": {
                "description": "Code INSEE de la commune",
                "type": "string",
              },
              "postaux": {
                "description": "Liste des codes postaux de la commune",
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
            },
            "required": [
              "insee",
              "postaux",
            ],
            "type": "object",
          },
          "departement": {
            "description": "Département de la commune",
            "properties": {
              "codeInsee": {
                "description": "Code INSEE du département",
                "type": "string",
              },
              "nom": {
                "description": "Nom du département",
                "type": "string",
              },
            },
            "required": [
              "codeInsee",
              "nom",
            ],
            "type": "object",
          },
          "localisation": {
            "description": "Les informations de localisations sont composés du:

- Du \`centre\` de la commune
- De la boite englobante (\`bbox\`) qui délimite la zone de la commune.

Les champs \`centre\` et \`bbox\` sont tous les deux au format [GeoJSON](https://fr.wikipedia.org/wiki/GeoJSON)
",
            "properties": {
              "bbox": {
                "description": "Coordonnées de la boîte englobante de la commune au format GeoJSON "Polygon"",
                "properties": {
                  "coordinates": {
                    "items": {
                      "items": {
                        "maxItems": 2,
                        "minItems": 2,
                        "prefixItems": [
                          {
                            "maximum": 180,
                            "minimum": -180,
                            "type": "number",
                          },
                          {
                            "maximum": 90,
                            "minimum": -90,
                            "type": "number",
                          },
                        ],
                        "type": "array",
                      },
                      "type": "array",
                    },
                    "type": "array",
                  },
                  "type": {
                    "enum": [
                      "Polygon",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "type",
                  "coordinates",
                ],
                "type": "object",
              },
              "centre": {
                "additionalProperties": false,
                "description": "Coordonnées du centre de la commune au format GeoJSON "Point"",
                "properties": {
                  "coordinates": {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                      },
                      {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                      },
                    ],
                    "type": "array",
                  },
                  "type": {
                    "enum": [
                      "Point",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "type",
                  "coordinates",
                ],
                "type": "object",
              },
            },
            "required": [
              "centre",
              "bbox",
            ],
            "type": "object",
          },
          "mission_locale": {
            "anyOf": [
              {
                "type": "null",
              },
              {
                "description": "Mission Locale",
                "properties": {
                  "contact": {
                    "properties": {
                      "email": {
                        "format": "email",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "siteWeb": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "telephone": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "required": [
                      "email",
                      "telephone",
                      "siteWeb",
                    ],
                    "type": "object",
                  },
                  "id": {
                    "description": "Identifiant de la Mission Locale",
                    "type": "number",
                  },
                  "localisation": {
                    "description": "Localisation de la mission locale",
                    "properties": {
                      "adresse": {
                        "description": "Adresse de la Mission Locale",
                        "type": "string",
                      },
                      "cp": {
                        "description": "Code postal de la Mission Locale",
                        "type": "string",
                      },
                      "geopoint": {
                        "additionalProperties": false,
                        "description": "Coordonnés GPS au format GeoJSON "Point"",
                        "properties": {
                          "coordinates": {
                            "maxItems": 2,
                            "minItems": 2,
                            "prefixItems": [
                              {
                                "maximum": 180,
                                "minimum": -180,
                                "type": "number",
                              },
                              {
                                "maximum": 90,
                                "minimum": -90,
                                "type": "number",
                              },
                            ],
                            "type": "array",
                          },
                          "type": {
                            "enum": [
                              "Point",
                            ],
                            "type": "string",
                          },
                        },
                        "required": [
                          "type",
                          "coordinates",
                        ],
                        "type": [
                          "object",
                          "null",
                        ],
                      },
                      "ville": {
                        "description": "Ville de la Mission Locale",
                        "type": "string",
                      },
                    },
                    "required": [
                      "geopoint",
                      "adresse",
                      "cp",
                      "ville",
                    ],
                    "type": "object",
                  },
                  "nom": {
                    "description": "Nom de la mission locale",
                    "type": "string",
                  },
                  "siret": {
                    "description": "Numéro SIRET de la mission locale",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                  "nom",
                  "siret",
                  "localisation",
                  "contact",
                ],
                "type": "object",
              },
            ],
            "description": "Mission locale dont relève la commune",
          },
          "nom": {
            "description": "Nom de la commune",
            "type": "string",
          },
          "region": {
            "description": "Région de la commune",
            "properties": {
              "codeInsee": {
                "description": "Code INSEE de la région",
                "type": "string",
              },
              "nom": {
                "description": "Nom de la région",
                "type": "string",
              },
            },
            "required": [
              "codeInsee",
              "nom",
            ],
            "type": "object",
          },
        },
        "required": [
          "nom",
          "code",
          "departement",
          "academie",
          "region",
          "localisation",
          "mission_locale",
          "arrondissements",
          "anciennes",
        ],
        "type": "object",
      },
      "Departement": {
        "description": "Département",
        "properties": {
          "academie": {
            "description": "Académie de la commune",
            "properties": {
              "code": {
                "description": "Code de l'académie",
                "type": "string",
              },
              "id": {
                "description": "Identifiant de l'académie",
                "type": "string",
              },
              "nom": {
                "description": "Nom de l'académie",
                "type": "string",
              },
            },
            "required": [
              "id",
              "code",
              "nom",
            ],
            "type": "object",
          },
          "codeInsee": {
            "description": "Code INSEE du département",
            "type": "string",
          },
          "nom": {
            "description": "Nom du département",
            "type": "string",
          },
          "region": {
            "description": "Région de la commune",
            "properties": {
              "codeInsee": {
                "description": "Code INSEE de la région",
                "type": "string",
              },
              "nom": {
                "description": "Nom de la région",
                "type": "string",
              },
            },
            "required": [
              "codeInsee",
              "nom",
            ],
            "type": "object",
          },
        },
        "required": [
          "nom",
          "codeInsee",
          "academie",
          "region",
        ],
        "type": "object",
      },
      "JobApplicationWrite": {
        "additionalProperties": false,
        "description": "Candidature",
        "properties": {
          "applicant_attachment_content": {
            "description": "CV du candidat",
            "format": "byte",
            "maxLength": 4215276,
            "type": "string",
          },
          "applicant_attachment_name": {
            "description": "Nom du CV",
            "minLength": 1,
            "pattern": "((.*?))(\\.)+([Dd][Oo][Cc][Xx]|[Pp][Dd][Ff])$",
            "type": "string",
          },
          "applicant_email": {
            "description": "Email du candidat",
            "format": "email",
            "type": "string",
          },
          "applicant_first_name": {
            "description": "Prénom du candidat",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
          },
          "applicant_last_name": {
            "description": "Nom du candidat",
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
          },
          "applicant_message": {
            "type": [
              "string",
              "null",
            ],
          },
          "applicant_phone": {
            "description": "Numéro de téléphone du candidat",
            "type": "string",
          },
          "recipient_id": {
            "description": "Identifiant du destinataire récupéré de \`apply.recipient_id\` depuis les resultas de la route de recherche.",
            "type": "string",
          },
        },
        "required": [
          "applicant_first_name",
          "applicant_last_name",
          "applicant_email",
          "applicant_phone",
          "applicant_attachment_name",
          "applicant_attachment_content",
          "recipient_id",
        ],
        "type": "object",
      },
      "JobOfferRead": {
        "description": "Offre d'emploi",
        "properties": {
          "apply": {
            "description": "Eléments qui permettent de déposer une candidature :

- URL de redirection
- numéro de téléphone
- email de l’entreprise
",
            "properties": {
              "phone": {
                "description": "Recruiter's phone number

Notes:

Only European phone numbers are allowed. There is also a check on the nature of the number: only mobile and landline phones are allowed.",
                "examples": [
                  "0199000000",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "recipient_id": {
                "description": "Identifier to use for applying to the job offer using /v3/jobs/apply route",
                "type": [
                  "string",
                  "null",
                ],
              },
              "url": {
                "description": "Redirect URL to the application form",
                "examples": [
                  "https://labonnealternance.apprentissage.beta.gouv.fr/recherche-apprentissage?display=list&page=fiche&type=matcha&itemId=664752a2ebe24062b758c641",
                ],
                "format": "uri",
                "type": "string",
              },
            },
            "required": [
              "phone",
              "url",
            ],
            "type": "object",
          },
          "contract": {
            "description": "Un contrat est décrit par :

- Le type (apprentissage et/ou professionnalisation).
- La date de début.
- La durée.
- Le mode de travail (présentiel, télétravail ou hybride).
",
            "properties": {
              "duration": {
                "description": "Contract duration in months.",
                "examples": [
                  12,
                ],
                "minimum": 0,
                "type": [
                  "integer",
                  "null",
                ],
              },
              "remote": {
                "description": "Work mode (on-site, remote, or hybrid)",
                "enum": [
                  "onsite",
                  "remote",
                  "hybrid",
                ],
                "examples": [
                  "onsite",
                  "remote",
                  "hybrid",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "start": {
                "description": "Date de début du contrat.",
                "examples": [
                  "2024-09-23T10:00:00.000Z",
                ],
                "format": "date-time",
                "type": [
                  "string",
                  "null",
                ],
              },
              "type": {
                "description": "Contract type (apprenticeship and/or professionalization)",
                "items": {
                  "description": "Contract type (apprenticeship and/or professionalization)",
                  "enum": [
                    "Apprentissage",
                    "Professionnalisation",
                  ],
                  "examples": [
                    "Apprentissage",
                    "Professionnalisation",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
            },
            "required": [
              "start",
              "duration",
              "type",
              "remote",
            ],
            "type": "object",
          },
          "identifier": {
            "description": "Cet élément regroupe :

- le partenaire à l'origine de l'offre d'emploi
- l'identifiant unique de l'offre d'emploi au sein du système d'information La bonne alternance
",
            "properties": {
              "id": {
                "description": "Identifier of the job offer in the La bonne alternance database.

Notes:

France Travail offers are not stored in the La bonne alternance database but are retrieved on the fly. They do not have an identifier in the database.",
                "examples": [
                  "6687165396d52b5e01b409545",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "partner_job_id": {
                "description": "Offer identifier within the partner's information system.",
                "examples": [
                  "b16a546a-e61f-4028-b5a3-1a7bbfaa4e3d",
                ],
                "type": "string",
              },
              "partner_label": {
                "description": "Partner originating the job offer.

Notes:

In the case of La Bonne Alternance, the partner_label is: "La bonne alternance".",
                "examples": [
                  "France Travail",
                  "La bonne alternance",
                ],
                "type": "string",
              },
            },
            "required": [
              "partner_job_id",
              "id",
              "partner_label",
            ],
            "type": "object",
          },
          "offer": {
            "description": "Une offre d’emploi est décrite par :

- L’intitulé. Exemple : Développeur / Développeuse web.

- La description. Exemple : Conçoit, développe et met au point un projet d'application informatique, de la phase d'étude à son intégration, pour un client ou une entreprise selon des besoins fonctionnels et un cahier des charges. Peut conduire des projets de développement. Peut coordonner une équipe.

- Le niveau de diplôme visé. Exemple : BP, Bac, autres formations niveau (Bac)

- Les compétences ou qualités attendues pour le poste. Exemple : Faire preuve d'autonomie ; Faire preuve de créativité, d'inventivité ; Faire preuve de rigueur et de précision ; Travailler en équipe

- Les compétences ou qualités à acquérir durant l'alternance. Exemple : Recherche, Innovation (Analyser les indicateurs pertinents sur les tendances et les usages des clients ; Concevoir et développer une solution digitale ; Créer une documentation technique). Nouvelles technologies (Assembler des composants logiciels ; Concevoir une application web)

- Les conditions d’accès au métier. Exemple : Ce métier est accessible avec un diplôme de niveau Bac+2 (BTS, DUT) à Master (MIAGE, diplôme d'ingénieur, Master professionnel, ...) en informatique. Il est également accessible avec une expérience professionnelle en informatique, système d'exploitation ou dans un domaine applicatif. La pratique de l'anglais (vocabulaire technique) est requise.

- Le mode de travail (présentiel, télétravail ou hybride).


Le ROME correspond au Référentiel Opérationnel des Métiers et des Emplois. Conçu par France Travail (anciennement Pôle Emploi), ce référentiel présente l'ensemble des métiers regroupés par fiches, organisées par domaines professionnels.",
            "properties": {
              "access_conditions": {
                "description": "The conditions for entering the profession",
                "items": {
                  "description": "The conditions for entering the profession",
                  "examples": [
                    "Ce métier est accessible avec un diplôme de niveau Bac+2 (BTS, DUT) à Master (MIAGE, diplôme d'ingénieur, Master professionnel, ...) en informatique.",
                    "Il est également accessible avec une expérience professionnelle en informatique, système d'exploitation ou dans un domaine applicatif.",
                    "La pratique de l'anglais (vocabulaire technique) est requise.",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "description": {
                "description": "Job offer description.",
                "examples": [
                  "Conçoit, développe et met au point un projet d'application informatique, de la phase d'étude à son intégration, pour un client ou une entreprise selon des besoins fonctionnels et un cahier des charges. Peut conduire des projets de développement. Peut coordonner une équipe.",
                ],
                "type": "string",
              },
              "desired_skills": {
                "description": "The skills or qualities expected for the position.",
                "items": {
                  "description": "The skills or qualities expected for the position.",
                  "examples": [
                    "Faire preuve d'autonomie",
                    "Faire preuve de créativité, d'inventivité",
                    "Faire preuve de rigueur et de précision",
                    "Travailler en équipe",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "opening_count": {
                "description": "Number of positions available for this job offer",
                "examples": [
                  1,
                  3,
                ],
                "type": "number",
              },
              "publication": {
                "description": "Une opportunité d’emploi possède un cycle de vie : une date de création et une date d'expiration.
",
                "properties": {
                  "creation": {
                    "description": "Creation date of the job opportunity.",
                    "examples": [
                      "2024-07-23T13:23:01.000Z",
                    ],
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "expiration": {
                    "description": "Expiration date of the job opportunity.",
                    "examples": [
                      "2027-05-14T00:00:00Z",
                    ],
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                },
                "required": [
                  "creation",
                  "expiration",
                ],
                "type": "object",
              },
              "rome_codes": {
                "description": "ROME code(s) of the offer",
                "items": {
                  "description": "ROME code",
                  "examples": [
                    "A1401",
                  ],
                  "pattern": "^[A-Z]\\d{4}$",
                  "type": "string",
                },
                "type": "array",
              },
              "status": {
                "description": "Le statut de l'offre (cycle de vie) :

- Active : L'offre est disponible sur la plateforme et il est possible d'y postuler.
- Filled : L'offre a été pourvue et n'est donc plus disponible.
- Cancelled : L'offre a été annulée et n'est donc plus disponible.


Notes:

Only active offers are returned by the search.",
                "enum": [
                  "Active",
                  "Filled",
                  "Cancelled",
                ],
                "examples": [
                  "Active",
                ],
                "type": "string",
              },
              "target_diploma": {
                "description": "Targeted diploma level at the end of studies.",
                "properties": {
                  "european": {
                    "description": "Targeted diploma level at the end of studies.",
                    "enum": [
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                    ],
                    "examples": [
                      3,
                    ],
                    "type": "string",
                  },
                  "label": {
                    "description": "The title of the targeted diploma level at the end of studies.",
                    "examples": [
                      "BP, Bac, autres formations niveau (Bac)",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "european",
                  "label",
                ],
                "type": [
                  "object",
                  "null",
                ],
              },
              "title": {
                "description": "Job offer title.",
                "examples": [
                  "Développeur / Développeuse web",
                ],
                "minLength": 3,
                "type": "string",
              },
              "to_be_acquired_skills": {
                "description": "The skills or qualities to be acquired during the apprenticeship.",
                "items": {
                  "description": "The skills or qualities to be acquired during the apprenticeship.",
                  "examples": [
                    "Recherche, Innovation : Analyser les indicateurs pertinents sur les tendances et les usages des clients",
                    "Recherche, Innovation : Concevoir et développer une solution digitale",
                    "Nouvelles technologies : Assembler des composants logiciels",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
            },
            "required": [
              "title",
              "desired_skills",
              "to_be_acquired_skills",
              "access_conditions",
              "opening_count",
              "publication",
              "rome_codes",
              "description",
              "target_diploma",
              "status",
            ],
            "type": "object",
          },
          "workplace": {
            "description": "Cet élement regroupe :

- Le nom (enseigne ou à défaut, raison sociale) et le numéro SIRET de l’entreprise.
- La description de l’employeur et/ou du service où s’exécutera le contrat.
- La tranche effectif de l’entreprise, en nombre de salariés.
- Le site web de l’entreprise.
",
            "properties": {
              "brand": {
                "description": "Brand name of the establishment",
                "examples": [
                  "Enseigne (todo)",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "description": {
                "description": "Description of the employer and/or the department where the contract will be carried out.",
                "examples": [
                  "Service du Premier ministre, placé sous l’autorité du ministre de la Transformation et de la Fonction publiques, la direction interministérielle du numérique (DINUM) a pour mission d’élaborer la stratégie numérique de l’État et de piloter sa mise en œuvre. Notre objectif : un État plus efficace, plus simple et plus souverain grâce au numérique.",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "domain": {
                "description": "Regroupe des éléments qui décrivent le domaine auquel est rattaché le numéro SIRET de l’entreprise :

- La Nomenclature d’Activité Française (NAF). Produite par l’INSEE, elle a pour objectif de faciliter l'organisation de l'information économique et sociale.
- Le numéro IDCC de la convention collective. Produit par le ministère chargé du travail (Dares et DGT) et celui chargé de l’agriculture.
- L’Opérateur de Compétence (OPCO) de rattachement pouvant prendre en charge le financement du contrat.
",
                "properties": {
                  "idcc": {
                    "description": "Collective agreement number associated with the SIRET number",
                    "examples": [
                      1979,
                    ],
                    "type": [
                      "number",
                      "null",
                    ],
                  },
                  "naf": {
                    "description": "NAF (sector of activity) associated with the SIRET number",
                    "properties": {
                      "code": {
                        "description": "NAF code (sector of activity) associated with the SIRET number",
                        "examples": [
                          "8411Z",
                        ],
                        "type": "string",
                      },
                      "label": {
                        "description": "Label of the NAF code (sector of activity) associated with the SIRET number",
                        "examples": [
                          "Administration publique générale",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "required": [
                      "code",
                      "label",
                    ],
                    "type": [
                      "object",
                      "null",
                    ],
                  },
                  "opco": {
                    "description": "Competency Operator (OPCO) associated with the SIRET number",
                    "examples": [
                      "OPCO 2i",
                    ],
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                },
                "required": [
                  "idcc",
                  "opco",
                  "naf",
                ],
                "type": "object",
              },
              "legal_name": {
                "description": "Company legal name",
                "type": [
                  "string",
                  "null",
                ],
              },
              "location": {
                "description": "Adresse postale et géolocalisation rattachées au numéro SIRET de l’entreprise
",
                "properties": {
                  "address": {
                    "description": "Postal address of the job offer location.",
                    "examples": [
                      "20 AVENUE DE SEGUR 75007 PARIS",
                    ],
                    "type": "string",
                  },
                  "geopoint": {
                    "additionalProperties": false,
                    "description": "Geolocation linked to the address

Notes:

Derived from the address.",
                    "properties": {
                      "coordinates": {
                        "description": "Coordinates of the geolocation linked to the address",
                        "prefixItems": [
                          {
                            "description": "Longitude",
                            "examples": [
                              48.850699,
                            ],
                            "maximum": 180,
                            "minimum": -180,
                            "type": "number",
                          },
                          {
                            "description": "Latitude",
                            "examples": [
                              2.308628,
                            ],
                            "maximum": 90,
                            "minimum": -90,
                            "type": "number",
                          },
                        ],
                        "type": "array",
                      },
                      "type": {
                        "description": "GeoJSON type related to the geolocation linked to the address",
                        "enum": [
                          "Point",
                        ],
                        "examples": [
                          "Point",
                        ],
                        "type": "string",
                      },
                    },
                    "required": [
                      "coordinates",
                      "type",
                    ],
                    "type": "object",
                  },
                },
                "required": [
                  "address",
                  "geopoint",
                ],
                "type": "object",
              },
              "name": {
                "description": "Name of the establishment (brand name or, failing that, legal name)

Notes:

In the case of publishing a job offer, it is possible to use a custom name; otherwise, it will take the value of the brand name, or failing that, the legal name.",
                "examples": [
                  "DIRECTION INTERMINISTERIELLE DU NUMERIQUE (DINUM)",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "siret": {
                "description": "SIRET of the contract execution location",
                "examples": [
                  "13002526500013",
                ],
                "pattern": "^\\d{14}$",
                "type": [
                  "string",
                  "null",
                ],
              },
              "size": {
                "description": "Company workforce range, in number of employees",
                "examples": [
                  "100-199",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "website": {
                "description": "Company website",
                "examples": [
                  "https://beta.gouv.fr/startups/",
                ],
                "format": "uri",
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "required": [
              "name",
              "description",
              "website",
              "siret",
              "location",
              "brand",
              "legal_name",
              "size",
              "domain",
            ],
            "type": "object",
          },
        },
        "required": [
          "identifier",
          "workplace",
          "apply",
          "contract",
          "offer",
        ],
        "type": "object",
      },
      "JobOfferWrite": {
        "description": "Offre d'emploi",
        "properties": {
          "apply": {
            "description": "Eléments qui permettent de déposer une candidature :

- URL de redirection
- numéro de téléphone
- email de l’entreprise


Au moins une méthode de candidature doit être fournie lors du dépot d'offre. (soit url, phone, email)",
            "properties": {
              "email": {
                "description": "Recruiter's email adress",
                "examples": [
                  "jean.dupuis@beta.gouv.fr",
                ],
                "format": "email",
                "type": [
                  "string",
                  "null",
                ],
              },
              "phone": {
                "description": "Recruiter's phone number

Notes:

Only European phone numbers are allowed. There is also a check on the nature of the number: only mobile and landline phones are allowed.",
                "examples": [
                  "0199000000",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "url": {
                "description": "Redirect URL",
                "examples": [
                  "https://labonnealternance.apprentissage.beta.gouv.fr/recherche-apprentissage?display=list&page=fiche&type=matcha&itemId=664752a2ebe24062b758c641",
                ],
                "format": "uri",
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "type": "object",
          },
          "contract": {
            "description": "Un contrat est décrit par :

- Le type (apprentissage et/ou professionnalisation).
- La date de début.
- La durée.
- Le mode de travail (présentiel, télétravail ou hybride).
",
            "properties": {
              "duration": {
                "description": "Contract duration in months.",
                "examples": [
                  12,
                ],
                "minimum": 0,
                "type": [
                  "integer",
                  "null",
                ],
              },
              "remote": {
                "description": "Work mode (on-site, remote, or hybrid)",
                "enum": [
                  "onsite",
                  "remote",
                  "hybrid",
                ],
                "examples": [
                  "onsite",
                  "remote",
                  "hybrid",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "start": {
                "description": "Date de début du contrat.",
                "examples": [
                  "2024-09-23T10:00:00.000Z",
                ],
                "format": "date-time",
                "type": [
                  "string",
                  "null",
                ],
              },
              "type": {
                "default": [
                  "Apprentissage",
                  "Professionnalisation",
                ],
                "description": "Contract type (apprenticeship and/or professionalization)",
                "items": {
                  "description": "Contract type (apprenticeship and/or professionalization)",
                  "enum": [
                    "Apprentissage",
                    "Professionnalisation",
                  ],
                  "examples": [
                    "Apprentissage",
                    "Professionnalisation",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
            },
            "type": "object",
          },
          "offer": {
            "description": "Une offre d’emploi est décrite par :

- L’intitulé. Exemple : Développeur / Développeuse web.

- La description. Exemple : Conçoit, développe et met au point un projet d'application informatique, de la phase d'étude à son intégration, pour un client ou une entreprise selon des besoins fonctionnels et un cahier des charges. Peut conduire des projets de développement. Peut coordonner une équipe.

- Le niveau de diplôme visé. Exemple : BP, Bac, autres formations niveau (Bac)

- Les compétences ou qualités attendues pour le poste. Exemple : Faire preuve d'autonomie ; Faire preuve de créativité, d'inventivité ; Faire preuve de rigueur et de précision ; Travailler en équipe

- Les compétences ou qualités à acquérir durant l'alternance. Exemple : Recherche, Innovation (Analyser les indicateurs pertinents sur les tendances et les usages des clients ; Concevoir et développer une solution digitale ; Créer une documentation technique). Nouvelles technologies (Assembler des composants logiciels ; Concevoir une application web)

- Les conditions d’accès au métier. Exemple : Ce métier est accessible avec un diplôme de niveau Bac+2 (BTS, DUT) à Master (MIAGE, diplôme d'ingénieur, Master professionnel, ...) en informatique. Il est également accessible avec une expérience professionnelle en informatique, système d'exploitation ou dans un domaine applicatif. La pratique de l'anglais (vocabulaire technique) est requise.

- Le mode de travail (présentiel, télétravail ou hybride).


Le ROME correspond au Référentiel Opérationnel des Métiers et des Emplois. Conçu par France Travail (anciennement Pôle Emploi), ce référentiel présente l'ensemble des métiers regroupés par fiches, organisées par domaines professionnels.",
            "properties": {
              "access_conditions": {
                "default": [],
                "description": "The conditions for entering the profession",
                "items": {
                  "description": "The conditions for entering the profession",
                  "examples": [
                    "Ce métier est accessible avec un diplôme de niveau Bac+2 (BTS, DUT) à Master (MIAGE, diplôme d'ingénieur, Master professionnel, ...) en informatique.",
                    "Il est également accessible avec une expérience professionnelle en informatique, système d'exploitation ou dans un domaine applicatif.",
                    "La pratique de l'anglais (vocabulaire technique) est requise.",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "description": {
                "description": "Job offer description.",
                "examples": [
                  "Conçoit, développe et met au point un projet d'application informatique, de la phase d'étude à son intégration, pour un client ou une entreprise selon des besoins fonctionnels et un cahier des charges. Peut conduire des projets de développement. Peut coordonner une équipe.",
                ],
                "minLength": 30,
                "type": "string",
              },
              "desired_skills": {
                "default": [],
                "description": "The skills or qualities expected for the position.",
                "items": {
                  "description": "The skills or qualities expected for the position.",
                  "examples": [
                    "Faire preuve d'autonomie",
                    "Faire preuve de créativité, d'inventivité",
                    "Faire preuve de rigueur et de précision",
                    "Travailler en équipe",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "multicast": {
                "default": true,
                "description": "Si l'offre peut être diffusé sur l'ensemble des plateformes partenaires",
                "type": "boolean",
              },
              "opening_count": {
                "default": 1,
                "description": "Number of positions available for this job offer",
                "examples": [
                  1,
                  3,
                ],
                "type": "number",
              },
              "origin": {
                "description": "Origine de l'offre provenant d'un aggregateur",
                "type": [
                  "string",
                  "null",
                ],
              },
              "publication": {
                "description": "Une opportunité d’emploi possède un cycle de vie : une date de création et une date d'expiration.
",
                "properties": {
                  "creation": {
                    "description": "Creation date of the job opportunity.",
                    "examples": [
                      "2024-07-23T13:23:01.000Z",
                    ],
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "expiration": {
                    "description": "Expiration date of the job opportunity.",
                    "examples": [
                      "2027-05-14T00:00:00Z",
                    ],
                    "format": "date-time",
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                },
                "type": "object",
              },
              "rome_codes": {
                "description": "ROME code(s) of the offer

Notes:

If the published offer does not have a ROME code provided, we deduce the ROME codes from the job offer title.",
                "items": {
                  "description": "ROME code",
                  "examples": [
                    "A1401",
                  ],
                  "pattern": "^[A-Z]\\d{4}$",
                  "type": "string",
                },
                "type": [
                  "array",
                  "null",
                ],
              },
              "status": {
                "description": "Le statut de l'offre (cycle de vie) :

- Active : L'offre est disponible sur la plateforme et il est possible d'y postuler.
- Filled : L'offre a été pourvue et n'est donc plus disponible.
- Cancelled : L'offre a été annulée et n'est donc plus disponible.


Notes:

When creating an offer, only active offers are accepted. However, during an update, it is possible to cancel or mark an offer as filled.",
                "enum": [
                  "Active",
                  "Filled",
                  "Cancelled",
                ],
                "examples": [
                  "Active",
                  "Filled",
                  "Cancelled",
                ],
                "type": "string",
              },
              "target_diploma": {
                "description": "Targeted diploma level at the end of studies.",
                "properties": {
                  "european": {
                    "description": "Targeted diploma level at the end of studies.",
                    "enum": [
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                    ],
                    "examples": [
                      3,
                    ],
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                },
                "type": [
                  "object",
                  "null",
                ],
              },
              "title": {
                "description": "Job offer title.",
                "examples": [
                  "Développeur / Développeuse web",
                ],
                "minLength": 3,
                "type": "string",
              },
              "to_be_acquired_skills": {
                "default": [],
                "description": "The skills or qualities to be acquired during the apprenticeship.",
                "items": {
                  "description": "The skills or qualities to be acquired during the apprenticeship.",
                  "examples": [
                    "Recherche, Innovation : Analyser les indicateurs pertinents sur les tendances et les usages des clients",
                    "Recherche, Innovation : Concevoir et développer une solution digitale",
                    "Nouvelles technologies : Assembler des composants logiciels",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
            },
            "required": [
              "title",
              "description",
            ],
            "type": "object",
          },
          "workplace": {
            "description": "Cet élement regroupe :

- Le nom (enseigne ou à défaut, raison sociale) et le numéro SIRET de l’entreprise.
- La description de l’employeur et/ou du service où s’exécutera le contrat.
- La tranche effectif de l’entreprise, en nombre de salariés.
- Le site web de l’entreprise.
",
            "properties": {
              "description": {
                "description": "Description of the employer and/or the department where the contract will be carried out.",
                "examples": [
                  "Service du Premier ministre, placé sous l’autorité du ministre de la Transformation et de la Fonction publiques, la direction interministérielle du numérique (DINUM) a pour mission d’élaborer la stratégie numérique de l’État et de piloter sa mise en œuvre. Notre objectif : un État plus efficace, plus simple et plus souverain grâce au numérique.",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "location": {
                "description": "Adresse postale et géolocalisation rattachées au numéro SIRET de l’entreprise
",
                "properties": {
                  "address": {
                    "description": "Address of the job offer

Notes:

In the case of job offer publication, a custom address can be provided; otherwise, the establishment's address will be used.

The geopoint field is derived from the address.",
                    "examples": [
                      "20 AVENUE DE SEGUR 75007 PARIS",
                    ],
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                },
                "type": [
                  "object",
                  "null",
                ],
              },
              "name": {
                "description": "Name of the establishment (brand name or, failing that, legal name)

Notes:

In the case of publishing a job offer, it is possible to use a custom name; otherwise, it will take the value of the brand name, or failing that, the legal name.",
                "examples": [
                  "DIRECTION INTERMINISTERIELLE DU NUMERIQUE (DINUM)",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "siret": {
                "description": "SIRET of the contract execution location

Notes:

The information \`brand\` \`legal_name\` \`size\` \`idcc\` \`opco\` \`naf\` is automatically deduced from the SIRET.",
                "examples": [
                  "13002526500013",
                ],
                "pattern": "^\\d{14}$",
                "type": "string",
              },
              "website": {
                "description": "Company website",
                "examples": [
                  "https://beta.gouv.fr/startups/",
                ],
                "format": "uri",
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "required": [
              "siret",
            ],
            "type": "object",
          },
        },
        "required": [
          "workplace",
          "apply",
          "offer",
        ],
        "type": "object",
      },
      "JobRecruiter": {
        "description": "Recruteur",
        "properties": {
          "apply": {
            "description": "Eléments qui permettent de déposer une candidature :

- URL de redirection
- numéro de téléphone
- email de l’entreprise
",
            "properties": {
              "phone": {
                "description": "Recruiter's phone number

Notes:

Only European phone numbers are allowed. There is also a check on the nature of the number: only mobile and landline phones are allowed.",
                "examples": [
                  "0199000000",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "recipient_id": {
                "description": "Identifier to use for applying to the job offer using /v3/jobs/apply route",
                "type": [
                  "string",
                  "null",
                ],
              },
              "url": {
                "description": "Redirect URL to the application form",
                "examples": [
                  "https://labonnealternance.apprentissage.beta.gouv.fr/recherche-apprentissage?display=list&page=fiche&type=matcha&itemId=664752a2ebe24062b758c641",
                ],
                "format": "uri",
                "type": "string",
              },
            },
            "required": [
              "phone",
              "url",
            ],
            "type": "object",
          },
          "identifier": {
            "description": "Cet élément regroupe :

- le partenaire à l'origine de l'offre d'emploi
- l'identifiant unique de l'offre d'emploi au sein du système d'information La bonne alternance
",
            "properties": {
              "id": {
                "description": "Partner responsible for the job offer.",
                "examples": [
                  "6687165396d52b5e01b409545",
                ],
                "type": "string",
              },
            },
            "required": [
              "id",
            ],
            "type": "object",
          },
          "workplace": {
            "description": "Cet élement regroupe :

- Le nom (enseigne ou à défaut, raison sociale) et le numéro SIRET de l’entreprise.
- La description de l’employeur et/ou du service où s’exécutera le contrat.
- La tranche effectif de l’entreprise, en nombre de salariés.
- Le site web de l’entreprise.
",
            "properties": {
              "brand": {
                "description": "Brand name of the establishment",
                "examples": [
                  "Enseigne (todo)",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "description": {
                "description": "Description of the employer and/or the department where the contract will be carried out.",
                "examples": [
                  "Service du Premier ministre, placé sous l’autorité du ministre de la Transformation et de la Fonction publiques, la direction interministérielle du numérique (DINUM) a pour mission d’élaborer la stratégie numérique de l’État et de piloter sa mise en œuvre. Notre objectif : un État plus efficace, plus simple et plus souverain grâce au numérique.",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "domain": {
                "description": "Regroupe des éléments qui décrivent le domaine auquel est rattaché le numéro SIRET de l’entreprise :

- La Nomenclature d’Activité Française (NAF). Produite par l’INSEE, elle a pour objectif de faciliter l'organisation de l'information économique et sociale.
- Le numéro IDCC de la convention collective. Produit par le ministère chargé du travail (Dares et DGT) et celui chargé de l’agriculture.
- L’Opérateur de Compétence (OPCO) de rattachement pouvant prendre en charge le financement du contrat.
",
                "properties": {
                  "idcc": {
                    "description": "Collective agreement number associated with the SIRET number",
                    "examples": [
                      1979,
                    ],
                    "type": [
                      "number",
                      "null",
                    ],
                  },
                  "naf": {
                    "description": "NAF (sector of activity) associated with the SIRET number",
                    "properties": {
                      "code": {
                        "description": "NAF code (sector of activity) associated with the SIRET number",
                        "examples": [
                          "8411Z",
                        ],
                        "type": "string",
                      },
                      "label": {
                        "description": "Label of the NAF code (sector of activity) associated with the SIRET number",
                        "examples": [
                          "Administration publique générale",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "required": [
                      "code",
                      "label",
                    ],
                    "type": [
                      "object",
                      "null",
                    ],
                  },
                  "opco": {
                    "description": "Competency Operator (OPCO) associated with the SIRET number",
                    "examples": [
                      "OPCO 2i",
                    ],
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                },
                "required": [
                  "idcc",
                  "opco",
                  "naf",
                ],
                "type": "object",
              },
              "legal_name": {
                "description": "Company legal name",
                "type": [
                  "string",
                  "null",
                ],
              },
              "location": {
                "description": "Adresse postale et géolocalisation rattachées au numéro SIRET de l’entreprise
",
                "properties": {
                  "address": {
                    "description": "Postal address of the job offer location.",
                    "examples": [
                      "20 AVENUE DE SEGUR 75007 PARIS",
                    ],
                    "type": "string",
                  },
                  "geopoint": {
                    "additionalProperties": false,
                    "description": "Geolocation linked to the address

Notes:

Derived from the address.",
                    "properties": {
                      "coordinates": {
                        "description": "Coordinates of the geolocation linked to the address",
                        "prefixItems": [
                          {
                            "description": "Longitude",
                            "examples": [
                              48.850699,
                            ],
                            "maximum": 180,
                            "minimum": -180,
                            "type": "number",
                          },
                          {
                            "description": "Latitude",
                            "examples": [
                              2.308628,
                            ],
                            "maximum": 90,
                            "minimum": -90,
                            "type": "number",
                          },
                        ],
                        "type": "array",
                      },
                      "type": {
                        "description": "GeoJSON type related to the geolocation linked to the address",
                        "enum": [
                          "Point",
                        ],
                        "examples": [
                          "Point",
                        ],
                        "type": "string",
                      },
                    },
                    "required": [
                      "coordinates",
                      "type",
                    ],
                    "type": "object",
                  },
                },
                "required": [
                  "address",
                  "geopoint",
                ],
                "type": "object",
              },
              "name": {
                "description": "Name of the establishment (brand name or, failing that, legal name)

Notes:

In the case of publishing a job offer, it is possible to use a custom name; otherwise, it will take the value of the brand name, or failing that, the legal name.",
                "examples": [
                  "DIRECTION INTERMINISTERIELLE DU NUMERIQUE (DINUM)",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "siret": {
                "description": "SIRET of the contract execution location",
                "examples": [
                  "13002526500013",
                ],
                "pattern": "^\\d{14}$",
                "type": [
                  "string",
                  "null",
                ],
              },
              "size": {
                "description": "Company workforce range, in number of employees",
                "examples": [
                  "100-199",
                ],
                "type": [
                  "string",
                  "null",
                ],
              },
              "website": {
                "description": "Company website",
                "examples": [
                  "https://beta.gouv.fr/startups/",
                ],
                "format": "uri",
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "required": [
              "name",
              "description",
              "website",
              "siret",
              "location",
              "brand",
              "legal_name",
              "size",
              "domain",
            ],
            "type": "object",
          },
        },
        "required": [
          "identifier",
          "workplace",
          "apply",
        ],
        "type": "object",
      },
      "MissionLocale": {
        "description": "Mission Locale",
        "properties": {
          "contact": {
            "properties": {
              "email": {
                "format": "email",
                "type": [
                  "string",
                  "null",
                ],
              },
              "siteWeb": {
                "type": [
                  "string",
                  "null",
                ],
              },
              "telephone": {
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "required": [
              "email",
              "telephone",
              "siteWeb",
            ],
            "type": "object",
          },
          "id": {
            "description": "Identifiant de la Mission Locale",
            "type": "number",
          },
          "localisation": {
            "description": "Localisation de la mission locale",
            "properties": {
              "adresse": {
                "description": "Adresse de la Mission Locale",
                "type": "string",
              },
              "cp": {
                "description": "Code postal de la Mission Locale",
                "type": "string",
              },
              "geopoint": {
                "additionalProperties": false,
                "description": "Coordonnés GPS au format GeoJSON "Point"",
                "properties": {
                  "coordinates": {
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                      {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                      },
                      {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                      },
                    ],
                    "type": "array",
                  },
                  "type": {
                    "enum": [
                      "Point",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "type",
                  "coordinates",
                ],
                "type": [
                  "object",
                  "null",
                ],
              },
              "ville": {
                "description": "Ville de la Mission Locale",
                "type": "string",
              },
            },
            "required": [
              "geopoint",
              "adresse",
              "cp",
              "ville",
            ],
            "type": "object",
          },
          "nom": {
            "description": "Nom de la mission locale",
            "type": "string",
          },
          "siret": {
            "description": "Numéro SIRET de la mission locale",
            "type": "string",
          },
        },
        "required": [
          "id",
          "nom",
          "siret",
          "localisation",
          "contact",
        ],
        "type": "object",
      },
    },
    "securitySchemes": {
      "api-key": {
        "bearerFormat": "Bearer",
        "description": "Clé d'API à fournir dans le header \`Authorization\`. Si la route nécessite une habiliation particulière veuillez contacter le support pour en faire la demande à [support_api@apprentissage.beta.gouv.fr](mailto:support_api@apprentissage.beta.gouv.fr)",
        "scheme": "bearer",
        "type": "http",
      },
    },
  },
  "info": {
    "contact": {
      "email": "support_api@apprentissage.beta.gouv.fr",
      "name": "Équipe API Apprentissage",
    },
    "license": {
      "name": "Etalab-2.0",
      "url": "https://github.com/etalab/licence-ouverte/blob/master/LO.md",
    },
    "termsOfService": "https://api.apprentissage.beta.gouv.fr/cgu",
    "title": "Documentation technique de l'API Apprentissage",
    "version": "V1.0",
  },
  "openapi": "3.1.0",
  "paths": {
    "/certification/v1": {
      "get": {
        "description": "Récupère la liste des certifications, filtrée par \`identifiant.cfd\` et \`identifiant.rncp\`",
        "operationId": "getCertifications",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Filtre la liste des certifications par \`identifiant.cfd\`

- Si la valeur est vide ou \`null\`, filtre avec \`identifiant.cfd = null\`

- Si la valeur est absente, aucun filtre n'est appliqué

- Sinon doit respecter le regex \`/^[A-Z0-9]{3}\\d{3}[A-Z0-9]{2}$/\`",
            "in": "query",
            "name": "identifiant.cfd",
            "required": false,
            "schema": {
              "examples": [
                "46X32402",
                "",
                "null",
              ],
              "pattern": "^([A-Z0-9]{3}\\d{3}[A-Z0-9]{2}|null)?$",
              "type": "string",
            },
          },
          {
            "allowEmptyValue": true,
            "description": "Filtre la liste des certifications par \`identifiant.rncp\`

- Si la valeur est vide ou \`null\`, filtre avec \`identifiant.rncp = null\`

- Si la valeur est absente, aucun filtre n'est appliqué

- Sinon doit respecter le regex \`/^RNCP\\d{3,5}$/\`",
            "in": "query",
            "name": "identifiant.rncp",
            "required": false,
            "schema": {
              "examples": [
                "RNCP12345",
                "",
                "null",
              ],
              "pattern": "^(RNCP\\d{3,5}|null)?$",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "description": "Certification",
                    "properties": {
                      "base_legale": {
                        "description": "Dates de création et d’abrogation des diplômes crées par arrêtés",
                        "properties": {
                          "cfd": {
                            "description": "Informations légales issue de la base centrale des nomenclatures (BCN) relatives au diplôme.

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                            "properties": {
                              "abrogation": {
                                "description": "Date d'arrêté d'abrogation du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '23:59:59' sur le fuseau horaire 'Europe/Paris'.
- La date est retournée au format ISO 8601 avec le fuseau horaire 'Europe/Paris'.
",
                                "examples": [
                                  "2022-08-31T23:59:59.000+02:00",
                                  "2022-12-31T23:59:59.000+01:00",
                                ],
                                "format": "date-time",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "creation": {
                                "description": "Date d'arrêté de création du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '00:00:00' sur le fuseau horaire 'Europe/Paris'.
- La date est retournée au format ISO 8601 avec le fuseau horaire 'Europe/Paris'.
",
                                "examples": [
                                  "2014-02-21T00:00:00.000+01:00",
                                  "2018-05-11T00:00:00.000+02:00",
                                ],
                                "format": "date-time",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "creation",
                              "abrogation",
                            ],
                            "type": [
                              "object",
                              "null",
                            ],
                          },
                        },
                        "required": [
                          "cfd",
                        ],
                        "type": "object",
                      },
                      "blocs_competences": {
                        "description": "Liste du (ou des) code (s) et intitulé(s) des blocs de compétences validées par la certification",
                        "properties": {
                          "rncp": {
                            "description": "Liste des blocs de compétences issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                            "items": {
                              "properties": {
                                "code": {
                                  "examples": [
                                    "RNCP37537BC01",
                                  ],
                                  "pattern": "^(RNCP\\d{3,5}BC)?\\d{1,2}$",
                                  "type": "string",
                                },
                                "intitule": {
                                  "examples": [
                                    "Approvisionnement, communication, sécurité alimentaire et hygiène en boulangerie",
                                  ],
                                  "type": [
                                    "string",
                                    "null",
                                  ],
                                },
                              },
                              "required": [
                                "code",
                                "intitule",
                              ],
                              "type": "object",
                            },
                            "type": [
                              "array",
                              "null",
                            ],
                          },
                        },
                        "required": [
                          "rncp",
                        ],
                        "type": "object",
                      },
                      "continuite": {
                        "description": "**Liste des couples CFD-RNCP assurant la continuité de la certification professionnelles.** La liste inclut à la fois les fiches remplacées et remplaçantes. Elle est ordonnée par date d'activation de la fiche RNCP et inclut la fiche courante.
",
                        "properties": {
                          "cfd": {
                            "description": "Liste des diplômes assurant la continuité du diplôme. La liste inclut à la fois les diplômes remplacés et remplaçant. La liste est ordonnée par date d'ouverture du diplôme et inclut le diplôme courant.

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.
- Pour distinguer les diplômes remplacés des diplômes remplaçant, il faut se référer aux dates d'ouverture et de fermeture des diplômes.
",
                            "items": {
                              "properties": {
                                "code": {
                                  "pattern": "^[A-Z0-9]{3}\\d{3}[A-Z0-9]{2}$",
                                  "type": "string",
                                },
                                "courant": {
                                  "description": "Indique si le diplôme correspond au diplôme courant, i.e \`identifiant.cfd\` est égal au \`code\`.",
                                  "type": "boolean",
                                },
                                "fermeture": {
                                  "description": "Date de fermeture du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '23:59:59' sur le fuseau horaire 'Europe/Paris'.",
                                  "examples": [
                                    "2022-08-31T23:59:59.000+02:00",
                                    "2022-12-31T23:59:59.000+01:00",
                                  ],
                                  "format": "date-time",
                                  "type": [
                                    "string",
                                    "null",
                                  ],
                                },
                                "ouverture": {
                                  "description": "Date d'ouverture du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '00:00:00' sur le fuseau horaire 'Europe/Paris'.",
                                  "examples": [
                                    "2021-09-01T00:00:00.000+02:00",
                                    "2022-01-01T00:00:00.000+01:00",
                                  ],
                                  "format": "date-time",
                                  "type": [
                                    "string",
                                    "null",
                                  ],
                                },
                              },
                              "required": [
                                "ouverture",
                                "fermeture",
                                "code",
                                "courant",
                              ],
                              "type": "object",
                            },
                            "type": [
                              "array",
                              "null",
                            ],
                          },
                          "rncp": {
                            "description": "Liste des fiches RNCP assurant la continuité de la certification. La liste inclut à la fois les fiches remplacées et remplaçantes. La liste est ordonnée par date d'activation de la fiche RNCP et inclut la fiche courante.


Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.
- Pour distinguer les fiches remplacées des fiches remplaçant, il faut se référer aux dates d'activation et de fin d'enregistrement des fiches.
",
                            "items": {
                              "properties": {
                                "actif": {
                                  "description": "Lorsque la fiche est active, les inscriptions à la formation sont ouvertes, à l’inverse, lorsque la fiche est inactive, les inscriptions sont fermées.",
                                  "type": "boolean",
                                },
                                "activation": {
                                  "description": "Date à laquelle la fiche RNCP est passée au statut \`actif\`.

Notes:

- La couverture de ce champ est partiel car nous ne sommes pas en mesure pour le moment de récupérer les dates d'activation antérieures au 24 décembre 2021.

- France Compétence ne fournie pas l'information, nous le déduisons de la date de premiere apparation de la fiche RNCP avec le statut \`actif\`.",
                                  "examples": [
                                    "2021-09-01T00:00:00.000+02:00",
                                    "2022-01-01T00:00:00.000+01:00",
                                  ],
                                  "format": "date-time",
                                  "type": [
                                    "string",
                                    "null",
                                  ],
                                },
                                "code": {
                                  "description": "Indique si la fiche correspond à la fiche courante, i.e \`identifiant.rncp\` est égal au \`code\`.",
                                  "pattern": "^RNCP\\d{3,5}$",
                                  "type": "string",
                                },
                                "courant": {
                                  "type": "boolean",
                                },
                                "fin_enregistrement": {
                                  "description": "Date de fin d’enregistrement d’une fiche au RNCP.

Notes:

- France Compétence fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '23:59:59' sur le fuseau horaire 'Europe/Paris'.",
                                  "examples": [
                                    "2021-09-01T00:00:00.000+02:00",
                                    "2022-01-01T00:00:00.000+01:00",
                                  ],
                                  "format": "date-time",
                                  "type": [
                                    "string",
                                    "null",
                                  ],
                                },
                              },
                              "required": [
                                "activation",
                                "fin_enregistrement",
                                "code",
                                "courant",
                                "actif",
                              ],
                              "type": "object",
                            },
                            "type": [
                              "array",
                              "null",
                            ],
                          },
                        },
                        "required": [
                          "cfd",
                          "rncp",
                        ],
                        "type": "object",
                      },
                      "convention_collectives": {
                        "description": "Liste(s) de la ou des convention(s) collective(s) rattachées à la certification",
                        "properties": {
                          "rncp": {
                            "description": "Liste des conventions collectives issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                            "items": {
                              "properties": {
                                "intitule": {
                                  "examples": [
                                    "Bâtiment (Employés, techniciens et agents de maîtrise, ingénieurs, assimilés et cadres)",
                                  ],
                                  "type": "string",
                                },
                                "numero": {
                                  "examples": [
                                    "3002",
                                  ],
                                  "type": "string",
                                },
                              },
                              "required": [
                                "numero",
                                "intitule",
                              ],
                              "type": "object",
                            },
                            "type": [
                              "array",
                              "null",
                            ],
                          },
                        },
                        "required": [
                          "rncp",
                        ],
                        "type": "object",
                      },
                      "domaines": {
                        "description": "Cet élément contient des listes de codes et d’intitulés qui décrivent le domaine de la formation à travers différentes nomenclatures :

- la **Nomenclature des Spécialités de Formation (NSF).** Produite par l’INSEE, elle a pour objectif de couvrir l'ensemble des formations professionnelles ou non, de tout niveau, et sert à déterminer les domaines de formation.
- le **Répertoire Opérationnel des Métiers et des Emplois (ROME).** Conçu par France Travail (anciennement Pôle Emploi), ce référentiel présente l'ensemble des métiers regroupés par fiches, organisées par domaines professionnels.
- le **Formacode®, thésaurus de l’offre de formation** du Centre Inffo est un outil pour aider à l’indexation et la recherche d’informations sur l’offre de formation.
",
                        "properties": {
                          "formacodes": {
                            "description": "Formacode® issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                            "properties": {
                              "rncp": {
                                "description": "Formacode® issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                                "items": {
                                  "properties": {
                                    "code": {
                                      "examples": [
                                        "21538",
                                      ],
                                      "type": "string",
                                    },
                                    "intitule": {
                                      "examples": [
                                        "21538 : Boulangerie",
                                      ],
                                      "type": "string",
                                    },
                                  },
                                  "required": [
                                    "code",
                                    "intitule",
                                  ],
                                  "type": "object",
                                },
                                "type": [
                                  "array",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "rncp",
                            ],
                            "type": "object",
                          },
                          "nsf": {
                            "properties": {
                              "cfd": {
                                "description": "NSF issue de la base centrale des nomenclatures (BCN).

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.
- Le code NSF est déduis du code formation diplôme (CFD), il n'inclut donc pas la lettre de spécialité et le tableau ne contient qu'un seul élément.
",
                                "properties": {
                                  "code": {
                                    "examples": [
                                      "221",
                                      "310",
                                    ],
                                    "type": "string",
                                  },
                                  "intitule": {
                                    "examples": [
                                      "AGRO-ALIMENTAIRE, ALIMENTATION, CUISINE",
                                      "SPECIALIT.PLURIV.DES ECHANGES & GESTION",
                                    ],
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                },
                                "required": [
                                  "code",
                                  "intitule",
                                ],
                                "type": [
                                  "object",
                                  "null",
                                ],
                              },
                              "rncp": {
                                "description": "NSF issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                                "items": {
                                  "properties": {
                                    "code": {
                                      "examples": [
                                        "221",
                                      ],
                                      "pattern": "^\\d{2,3}[a-z]?$",
                                      "type": "string",
                                    },
                                    "intitule": {
                                      "examples": [
                                        "221 : Agro-alimentaire, alimentation, cuisine",
                                      ],
                                      "type": [
                                        "string",
                                        "null",
                                      ],
                                    },
                                  },
                                  "required": [
                                    "code",
                                    "intitule",
                                  ],
                                  "type": "object",
                                },
                                "type": [
                                  "array",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "cfd",
                              "rncp",
                            ],
                            "type": "object",
                          },
                          "rome": {
                            "description": "Répertoire Opérationnel des Métiers et des Emplois (ROME).",
                            "properties": {
                              "rncp": {
                                "description": "ROME issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                                "items": {
                                  "properties": {
                                    "code": {
                                      "examples": [
                                        "D1102",
                                      ],
                                      "pattern": "^[A-Z]{1}\\d{0,4}$",
                                      "type": "string",
                                    },
                                    "intitule": {
                                      "examples": [
                                        "Boulangerie - viennoiserie",
                                      ],
                                      "type": "string",
                                    },
                                  },
                                  "required": [
                                    "code",
                                    "intitule",
                                  ],
                                  "type": "object",
                                },
                                "type": [
                                  "array",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "rncp",
                            ],
                            "type": "object",
                          },
                        },
                        "required": [
                          "formacodes",
                          "nsf",
                          "rome",
                        ],
                        "type": "object",
                      },
                      "identifiant": {
                        "description": "**Une certification correspond à un couple CFD-RNCP sur une période donnée.** Le Code Formation Diplôme (CFD) ou code scolarité référence la certification dans la Base Centrale des Nomenclature. Le code RNCP référence la certification dans le Répertoire National des Certifications Professionnelle.

La [Base Centrale des Nomenclature](https://infocentre.pleiade.education.fr/bcn/) (BCN) est administrée par l’Education Nationale.

Le [Répertoire des Certifications Professionnelles](https://www.francecompetences.fr/recherche-resultats/?types=certification&search=&pageType=certification&active=1) (RNCP) est administré par France Compétences. **Il contient des fiches antérieures à la réforme de 2019 pour lesquelles certains champs étaient alors inexistants ou optionnels.**


Notes:

- les fiches RNCP antérieures à la réforme de 2019 ont certaines données qui ne sont pas renseignées, elles sont identifiées par le champ \`rncp_anterieur_2019\` à \`true\`.",
                        "properties": {
                          "cfd": {
                            "description": "Code Formation Diplôme (CFD) de la certification.

Notes:

- \`null\` si et seulement si aucun diplôme CFD correspondant à la fiche RNCP (\`identifiant.rncp\`) n'est connu.
- Lorsque le code est \`null\`, toutes les informations issues de la base centrale des nomenclatures (BCN) seront \`null\`
",
                            "examples": [
                              "50022137",
                            ],
                            "pattern": "^[A-Z0-9]{3}\\d{3}[A-Z0-9]{2}$",
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                          "rncp": {
                            "description": "Code Répertoire National des Certifications Professionnelles (RNCP) de la certification.

Notes:

- \`null\` si et seulement si aucune fiche RNCP correspondant au diplôme (\`identifiant.cfd\`) n'est connu.
- Lorsque le code est \`null\`, toutes les informations issues de France Compétence seront \`null\`
",
                            "examples": [
                              "RNCP37537",
                            ],
                            "pattern": "^RNCP\\d{3,5}$",
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                          "rncp_anterieur_2019": {
                            "description": "Identifie les certifications dont le code RNCP correspond à une fiche antérieure à la réforme de 2019.

Notes:

- \`null\` si \`identifiant.rncp\` est \`null\`
- \`true\` si le numéro de fiche \`identifiant.rncp\` est inférieur à \`34,000\`
- \`false\` sinon
",
                            "type": [
                              "boolean",
                              "null",
                            ],
                          },
                        },
                        "required": [
                          "cfd",
                          "rncp",
                          "rncp_anterieur_2019",
                        ],
                        "type": "object",
                      },
                      "intitule": {
                        "description": "Intitulé de la certification professionnelle.

Si la formation a comme résultat l’obtention d’un diplôme, le contenu de cet élément devrait utiliser une dénomination conforme aux tables de l’Éducation Nationale - soit les champs \`.cfd.court\` ou \`.cfd.long\`

Si la formation a comme résultat un titre ou une certification, le contenu devrait utiliser une dénomination conforme au contenu du Répertoire National des Certifications Professionnelles (RNCP) - soit le champ \`.rncp\`

source : [Lhéo](http://lheo.gouv.fr/2.3/lheo/intitule-formation.html)
",
                        "properties": {
                          "cfd": {
                            "description": "Intitulés de la certification issue de la base centrale des nomenclatures (BCN).

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                            "properties": {
                              "court": {
                                "description": "**Intitulé court du diplôme.**",
                                "examples": [
                                  "BOULANGER",
                                  "GENIE BIO - AGRONOMIE",
                                ],
                                "type": "string",
                              },
                              "long": {
                                "description": "**Intitulé long du diplôme.**",
                                "examples": [
                                  "BOULANGER (CAP)",
                                  "GENIE BIOLOGIQUE OPTION AGRONOMIE (DUT)",
                                ],
                                "type": "string",
                              },
                            },
                            "required": [
                              "long",
                              "court",
                            ],
                            "type": [
                              "object",
                              "null",
                            ],
                          },
                          "niveau": {
                            "description": "Niveau de qualification de la certification professionnelle",
                            "properties": {
                              "cfd": {
                                "description": "Niveau de la certification issue de la base centrale des nomenclatures (BCN).

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                                "properties": {
                                  "europeen": {
                                    "description": "Niveau de qualification de la certification (de 1 à 8) utilisés dans les référentiels nationaux européens.

Notes:

- peut être \`null\` lorsque le niveau de diplôme n'a pas de correspondance avec les niveaux européens ou qu'elle n'est pas déterminée.
- lorsque la fiche RNCP correspondante est connue, il faut priviliégier le niveau européen issue de France Compétences.
",
                                    "enum": [
                                      "1",
                                      "2",
                                      "3",
                                      "4",
                                      "5",
                                      "6",
                                      "7",
                                      "8",
                                    ],
                                    "examples": [
                                      "3",
                                      "5",
                                    ],
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                  "formation_diplome": {
                                    "description": "Code à 3 caractères qui renseigne sur le niveau du diplôme suivant le référentiel de l'Éducation Nationale.

Notes:

- correspond aux 3 premiers caractères du code CFD.",
                                    "examples": [
                                      "500",
                                      "370",
                                    ],
                                    "type": "string",
                                  },
                                  "interministeriel": {
                                    "description": "code interministériel du niveau de la formation suivant le référentiel de l'Éducation Nationale.

Notes:

- correspond au premier caractère du code CFD, sauf pour le CFD \`01321401\`",
                                    "examples": [
                                      "3",
                                      "6",
                                    ],
                                    "type": "string",
                                  },
                                  "libelle": {
                                    "examples": [
                                      "CLASSE PREPA",
                                      "TITRE PROFESSIONNEL HOMOLOGUE OU CERTIFIE",
                                    ],
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                  "sigle": {
                                    "examples": [
                                      "CAP",
                                      "DUT",
                                      "BTS",
                                      "CPGE",
                                    ],
                                    "type": "string",
                                  },
                                },
                                "required": [
                                  "europeen",
                                  "formation_diplome",
                                  "interministeriel",
                                  "libelle",
                                  "sigle",
                                ],
                                "type": [
                                  "object",
                                  "null",
                                ],
                              },
                              "rncp": {
                                "description": "Niveau de qualification issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                                "properties": {
                                  "europeen": {
                                    "description": "Niveau de qualification de la certification (de 1 à 8) utilisés dans les référentiels nationaux européens.

Notes:

- \`null\` lorsque le niveau de diplôme n'a pas de correspondance avec les niveaux européens.",
                                    "enum": [
                                      "1",
                                      "2",
                                      "3",
                                      "4",
                                      "5",
                                      "6",
                                      "7",
                                      "8",
                                    ],
                                    "examples": [
                                      "3",
                                    ],
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                },
                                "required": [
                                  "europeen",
                                ],
                                "type": [
                                  "object",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "cfd",
                              "rncp",
                            ],
                            "type": "object",
                          },
                          "rncp": {
                            "description": "Intitulé de la certification issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                            "examples": [
                              "Boulanger",
                            ],
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                        },
                        "required": [
                          "cfd",
                          "niveau",
                          "rncp",
                        ],
                        "type": "object",
                      },
                      "periode_validite": {
                        "description": "**Un couple CFD-RNCP a une période de validité** qui correspond à l’intersection de la période d’ouverture du diplôme et de la période d’activité de la fiche RNCP.

Notes:

Les dates sont retournées au format ISO 8601 avec le fuseau horaire Europe/Paris.",
                        "properties": {
                          "cfd": {
                            "description": "La période de validité d’un CFD est décrite par :

- **La date d’ouverture** : moment où il est possible de s’inscrire pour l’obtention de la certification (ou du diplôme)
- **La première session** : année de sortie des premiers diplômés
- **La dernière session** : année de sortie des derniers diplômés
- **La date de fermeture** : moment où il n’est plus possible d’émettre le diplôme.


Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                            "properties": {
                              "derniere_session": {
                                "description": "Année de sortie des derniers diplômés.",
                                "examples": [
                                  2025,
                                ],
                                "type": [
                                  "integer",
                                  "null",
                                ],
                              },
                              "fermeture": {
                                "description": "Date de fermeture du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '23:59:59' sur le fuseau horaire 'Europe/Paris'.",
                                "examples": [
                                  "2022-08-31T23:59:59.000+02:00",
                                  "2022-12-31T23:59:59.000+01:00",
                                ],
                                "format": "date-time",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "ouverture": {
                                "description": "Date d'ouverture du diplôme.

Notes:

- La base centrale des nomenclatures (BCN) fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '00:00:00' sur le fuseau horaire 'Europe/Paris'.",
                                "examples": [
                                  "2021-09-01T00:00:00.000+02:00",
                                  "2022-01-01T00:00:00.000+01:00",
                                ],
                                "format": "date-time",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "premiere_session": {
                                "description": "Année de sortie des premiers diplômés.",
                                "examples": [
                                  2022,
                                ],
                                "type": [
                                  "integer",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "ouverture",
                              "fermeture",
                              "premiere_session",
                              "derniere_session",
                            ],
                            "type": [
                              "object",
                              "null",
                            ],
                          },
                          "debut": {
                            "description": "Date de début de validité de la certification. Cette date correspond à l'intersection de la date d'ouverture du diplôme et de la date d'activation de la fiche RNCP.

Notes:

- La couverture de ce champ est partiel car nous ne sommes pas en mesure pour le moment de récupérer les dates d'activation antérieures au 24 décembre 2021.",
                            "examples": [
                              "2021-09-01T00:00:00.000+02:00",
                              "2022-01-01T00:00:00.000+01:00",
                            ],
                            "format": "date-time",
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                          "fin": {
                            "description": "Date de fin de validité de la certification. Cette date correspond à l'intersection de la date de fermeture du diplôme et de la date de fin d'enregistrement.",
                            "examples": [
                              "2022-08-31T23:59:59.000+02:00",
                              "2022-12-31T23:59:59.000+01:00",
                            ],
                            "format": "date-time",
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                          "rncp": {
                            "description": "La période de validité d’une fiche RNCP est décrite par :

- **La date d’activation** correspond à la date laquelle la fiche RNCP est passée au **statut actif : les inscriptions à la formation sont ouvertes** jusqu'à la date limite de délivrance de la certification.
- La **date de début des parcours certifiants** (anciennement appelée “**date d’effet**” pour les enregistrements de droits, et “**date de décision**” pour les enregistrement sur demande)
- La **date de fin d’enregistrement** : le lendemain, la fiche RNCP passe du statut “**actif**” à “**inactif**”. Pour les enregistrement de droit, cette date est renseignée par le certificateur, et pour les enregistrements sur demande, elle est déterminée par commission au moment de la décision d’enregistrement. A cette date, l'accès à la certification n'est plus possible (les inscriptions sont fermées) mais elle peut continuer à être délivrée pour les parcours en cours (formation ou VAE) ou pour la signature d'un contrat d'apprentissage suite à un nouveau contrat consécutif à une rupture du contrat.


Un enregistrement au RNCP est de maximum 5 ans, dépassé ce délai toute fiche doit fait l’objet d’une demande de renouvellement.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                            "properties": {
                              "actif": {
                                "description": "Lorsque la fiche est active, les inscriptions à la formation sont ouvertes, à l’inverse, lorsque la fiche est inactive, les inscriptions sont fermées.",
                                "type": "boolean",
                              },
                              "activation": {
                                "description": "Date à laquelle la fiche RNCP est passée au statut \`actif\`.

Notes:

- La couverture de ce champ est partiel car nous ne sommes pas en mesure pour le moment de récupérer les dates d'activation antérieures au 24 décembre 2021.
- France Compétence ne fournie pas l'information, nous le déduisons de la date de premiere apparation de la fiche RNCP avec le statut \`actif\`.
",
                                "examples": [
                                  "2021-09-01T00:00:00.000+02:00",
                                  "2022-01-01T00:00:00.000+01:00",
                                ],
                                "format": "date-time",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "debut_parcours": {
                                "description": "Date de début des parcours certifiants. Anciennement appelée 'date d'effet' pour les enregistrements de droit et correspondant à la date de décision pour les enregistrements sur demande.

Notes:

La date est retournée au format ISO 8601 avec le fuseau horaire Europe/Paris.",
                                "format": "date-time",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "fin_enregistrement": {
                                "description": "Date de fin d’enregistrement d’une fiche au RNCP.

Notes:

- France Compétence fournie cette date sans l'information de l'heure, nous interprétons arbitrairement l'heure à '23:59:59' sur le fuseau horaire 'Europe/Paris'.",
                                "examples": [
                                  "2021-09-01T00:00:00.000+02:00",
                                  "2022-01-01T00:00:00.000+01:00",
                                ],
                                "format": "date-time",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "actif",
                              "activation",
                              "debut_parcours",
                              "fin_enregistrement",
                            ],
                            "type": [
                              "object",
                              "null",
                            ],
                          },
                        },
                        "required": [
                          "debut",
                          "fin",
                          "cfd",
                          "rncp",
                        ],
                        "type": "object",
                      },
                      "type": {
                        "description": "Le type de certification renseigne sur

- la nature du diplôme
- le service responsable de la définition du diplôme
- le(s) nom(s) et numéro(s) SIRET du ou des certificateur(s) renseigné(s) dans le RNCP
- le type d’enregistrement au RNCP (de droit ou sur demande)
- la voie d’accès à la formation (apprentissage, expérience, candidature individuelle, contrat de professionnalisation, formation continue et formation statut élève).
",
                        "properties": {
                          "certificateurs_rncp": {
                            "description": "Liste des certificateurs de la fiche RNCP.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                            "items": {
                              "properties": {
                                "nom": {
                                  "description": "Nom du certificateur renseigné dans le RNCP.",
                                  "type": "string",
                                },
                                "siret": {
                                  "description": "Numéro SIRET du certificateur renseigné dans le RNCP.",
                                  "type": "string",
                                },
                              },
                              "required": [
                                "siret",
                                "nom",
                              ],
                              "type": "object",
                            },
                            "type": [
                              "array",
                              "null",
                            ],
                          },
                          "enregistrement_rncp": {
                            "description": "Permet de savoir si la certification est enregistrée de droit ou sur demande au Repertoire National des Certifications Professionnelles (RNCP)

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                            "enum": [
                              "Enregistrement de droit",
                              "Enregistrement sur demande",
                            ],
                            "examples": [
                              "Enregistrement de droit",
                            ],
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                          "gestionnaire_diplome": {
                            "description": "Service responsable de la définition du diplôme.

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                            "examples": [
                              "DGESCO A2-3",
                            ],
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                          "nature": {
                            "description": "Nature du diplôme.",
                            "properties": {
                              "cfd": {
                                "description": "Nature du diplôme issue de la base centrale des nomenclatures (BCN).

Notes:

- \`null\` lorsque le champs \`identifiant.cfd\` est \`null\`.",
                                "properties": {
                                  "code": {
                                    "examples": [
                                      "1",
                                      "2",
                                      "P",
                                    ],
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                  "libelle": {
                                    "examples": [
                                      "DIPLOME NATIONAL / DIPLOME D'ETAT",
                                      "TITRE PROFESSIONNEL HOMOLOGUE OU CERTIFIE",
                                      "CLASSE PREPA",
                                    ],
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                },
                                "required": [
                                  "code",
                                  "libelle",
                                ],
                                "type": [
                                  "object",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "cfd",
                            ],
                            "type": "object",
                          },
                          "voie_acces": {
                            "description": "Voie d’accès à la certification.",
                            "properties": {
                              "rncp": {
                                "description": "Voie d’accès à la certification issue de France Compétences.

Notes:

- \`null\` lorsque le champs \`identifiant.rncp\` est \`null\`.",
                                "properties": {
                                  "apprentissage": {
                                    "description": "Certification accessible en contrat d’apprentissage.",
                                    "type": "boolean",
                                  },
                                  "candidature_individuelle": {
                                    "description": "Certification accessible par candidature individuelle.",
                                    "type": "boolean",
                                  },
                                  "contrat_professionnalisation": {
                                    "description": "Certification accessible en contrat de professionnalisation.",
                                    "type": "boolean",
                                  },
                                  "experience": {
                                    "description": "Certification accessible par expérience.",
                                    "type": "boolean",
                                  },
                                  "formation_continue": {
                                    "description": "Certification accessible après un parcours de formation continue.",
                                    "type": "boolean",
                                  },
                                  "formation_statut_eleve": {
                                    "description": "Certification accessible après un parcours de formation sous statut d’élève ou d’étudiant.",
                                    "type": "boolean",
                                  },
                                },
                                "required": [
                                  "apprentissage",
                                  "experience",
                                  "candidature_individuelle",
                                  "contrat_professionnalisation",
                                  "formation_continue",
                                  "formation_statut_eleve",
                                ],
                                "type": [
                                  "object",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "rncp",
                            ],
                            "type": "object",
                          },
                        },
                        "required": [
                          "nature",
                          "gestionnaire_diplome",
                          "enregistrement_rncp",
                          "voie_acces",
                          "certificateurs_rncp",
                        ],
                        "type": "object",
                      },
                    },
                    "required": [
                      "identifiant",
                      "intitule",
                      "base_legale",
                      "blocs_competences",
                      "convention_collectives",
                      "domaines",
                      "periode_validite",
                      "type",
                      "continuite",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "Liste des certifications",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Requête invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "examples": [
                        "Request validation failed",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "examples": [
                        "Bad Request",
                      ],
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        400,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Requête invalide",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Clé d’API manquante ou invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Vous devez être connecté pour accéder à cette ressource",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        401,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Clé d’API manquante ou invalide",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Habilitations insuffisantes pour accéder à la ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Le jeton d'accès est invalide",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Forbidden",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        403,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Habilitations insuffisantes pour accéder à la ressource",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Ressource non trouvée",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Resource non trouvée",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Not Found",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        404,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Ressource non trouvée",
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Conflit de ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "La ressource exite déjà",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Conflict",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        409,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflit de ressource",
          },
          "419": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Limite de volumétrie atteinte pour la clé d’API",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Limite de requêtes atteinte",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Too Many Requests",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        419,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Limite de volumétrie atteinte pour la clé d’API",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Une erreur inattendue s'est produite sur le serveur.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Internal Server Error",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        500,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Une erreur inattendue s'est produite sur le serveur.",
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est indisponible.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Bad Gateway",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est indisponible.",
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est en maintenance",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Service Unavailable",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est en maintenance",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "summary": "Récupération des certifications",
        "tags": [
          "Certifications",
        ],
      },
    },
    "/experimental/source/acce": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "uai",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "description": "Si renseigné, limite le nombre de résultats retournés. Sinon retourne tous les résultats.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "description": "Si renseigné, limite le nombre de résultats retournés. Sinon retourne tous les résultats.",
              "type": [
                "number",
                "null",
              ],
            },
          },
          {
            "description": "Si renseigné, ignore les N premiers résultats.",
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "description": "Si renseigné, ignore les N premiers résultats.",
              "type": [
                "number",
                "null",
              ],
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "academie": {
                        "pattern": "^\\d{2}$",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "academie_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "adresse_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "appariement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "appariement_complement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "appellation_officielle": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "boite_postale_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "categorie_financiere": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "categorie_financiere_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "categorie_juridique": {
                        "type": "string",
                      },
                      "categorie_juridique_libe": {
                        "type": "string",
                      },
                      "code_postal_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "commune": {
                        "type": "string",
                      },
                      "commune_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "contrat_etablissement": {
                        "enum": [
                          "99",
                          "10",
                          "30",
                          "20",
                          "50",
                          "31",
                          "21",
                          "!!",
                          "40",
                          "41",
                          "60",
                        ],
                        "type": "string",
                      },
                      "contrat_etablissement_libe": {
                        "enum": [
                          "Sans objet",
                          "Hors contrat",
                          "Contrat d'association pour toutes les classes",
                          "Contrat simple pour toutes les classes",
                          "Reconnu par l'Etat",
                          "Contrat d'association pour une partie des classes",
                          "Contrat simple pour une partie des classes",
                          "Inconnu du gestionnaire",
                          "Contrats simple et d'association pour toutes les classes",
                          "Contrats simple et d'association pour une partie des classes",
                          "Sous contrat établissement agricole",
                        ],
                        "type": "string",
                      },
                      "coordonnee_x": {
                        "type": [
                          "number",
                          "null",
                        ],
                      },
                      "coordonnee_y": {
                        "type": [
                          "number",
                          "null",
                        ],
                      },
                      "date_derniere_mise_a_jour": {
                        "type": "string",
                      },
                      "date_fermeture": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "date_geolocalisation": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "date_ouverture": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "denomination_principale": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "departement_insee_3": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "departement_insee_3_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "etat_etablissement": {
                        "enum": [
                          "1",
                          "2",
                          "3",
                          "4",
                        ],
                        "type": "string",
                      },
                      "etat_etablissement_libe": {
                        "enum": [
                          "Ouvert",
                          "À fermer",
                          "À ouvrir",
                          "Fermé",
                        ],
                        "type": "string",
                      },
                      "etat_sirad_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "hebergement_etablissement": {
                        "type": "string",
                      },
                      "hebergement_etablissement_libe": {
                        "type": "string",
                      },
                      "lieu_dit_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "localisation": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "localisation_complement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "localite_acheminement_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "mel_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "mention_distribution": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "ministere_tutelle": {
                        "pattern": "^\\d{2}$",
                        "type": "string",
                      },
                      "ministere_tutelle_libe": {
                        "type": "string",
                      },
                      "nature_uai": {
                        "pattern": "^\\d{3}$",
                        "type": "string",
                      },
                      "nature_uai_libe": {
                        "type": "string",
                      },
                      "niveau_uai": {
                        "enum": [
                          "1",
                          "3",
                          "2",
                          "4",
                        ],
                        "type": "string",
                      },
                      "niveau_uai_libe": {
                        "enum": [
                          "UAI célibataire",
                          "UAI fille",
                          "UAI mère",
                          "UAI mère et fille",
                        ],
                        "type": "string",
                      },
                      "numero_finess_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_siren_siret_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_telecopieur_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_telephone_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_uai": {
                        "type": "string",
                      },
                      "patronyme_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "pays": {
                        "type": "string",
                      },
                      "pays_etranger_acheminement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "pays_libe": {
                        "type": "string",
                      },
                      "secteur_public_prive": {
                        "enum": [
                          "PR",
                          "PU",
                        ],
                        "type": "string",
                      },
                      "secteur_public_prive_libe": {
                        "enum": [
                          "Privé",
                          "Public",
                        ],
                        "type": "string",
                      },
                      "sigle_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "site_web": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "situation_comptable": {
                        "type": "string",
                      },
                      "situation_comptable_libe": {
                        "type": "string",
                      },
                      "source": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "tutelle_2": {
                        "pattern": "^\\d{2}$",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "tutelle_2_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "type_uai": {
                        "type": "string",
                      },
                      "type_uai_libe": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "nature_uai",
                      "nature_uai_libe",
                      "type_uai",
                      "type_uai_libe",
                      "etat_etablissement",
                      "etat_etablissement_libe",
                      "ministere_tutelle",
                      "ministere_tutelle_libe",
                      "tutelle_2",
                      "tutelle_2_libe",
                      "secteur_public_prive",
                      "secteur_public_prive_libe",
                      "sigle_uai",
                      "categorie_juridique",
                      "categorie_juridique_libe",
                      "contrat_etablissement",
                      "contrat_etablissement_libe",
                      "categorie_financiere",
                      "categorie_financiere_libe",
                      "situation_comptable",
                      "situation_comptable_libe",
                      "niveau_uai",
                      "niveau_uai_libe",
                      "commune",
                      "commune_libe",
                      "academie",
                      "academie_libe",
                      "pays",
                      "pays_libe",
                      "departement_insee_3",
                      "departement_insee_3_libe",
                      "denomination_principale",
                      "appellation_officielle",
                      "patronyme_uai",
                      "hebergement_etablissement",
                      "hebergement_etablissement_libe",
                      "numero_siren_siret_uai",
                      "numero_finess_uai",
                      "date_fermeture",
                      "date_derniere_mise_a_jour",
                      "lieu_dit_uai",
                      "adresse_uai",
                      "boite_postale_uai",
                      "code_postal_uai",
                      "etat_sirad_uai",
                      "localite_acheminement_uai",
                      "pays_etranger_acheminement",
                      "numero_telephone_uai",
                      "numero_telecopieur_uai",
                      "mention_distribution",
                      "mel_uai",
                      "site_web",
                      "coordonnee_x",
                      "coordonnee_y",
                      "appariement",
                      "appariement_complement",
                      "localisation",
                      "localisation_complement",
                      "date_geolocalisation",
                      "source",
                      "numero_uai",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "tags": [
          "Expérimental",
        ],
      },
    },
    "/experimental/source/acce/fille": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "uai",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "description": "Si renseigné, limite le nombre de résultats retournés. Sinon retourne tous les résultats.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "description": "Si renseigné, limite le nombre de résultats retournés. Sinon retourne tous les résultats.",
              "type": [
                "number",
                "null",
              ],
            },
          },
          {
            "description": "Si renseigné, ignore les N premiers résultats.",
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "description": "Si renseigné, ignore les N premiers résultats.",
              "type": [
                "number",
                "null",
              ],
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "academie": {
                        "pattern": "^\\d{2}$",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "academie_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "adresse_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "appariement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "appariement_complement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "appellation_officielle": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "boite_postale_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "categorie_financiere": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "categorie_financiere_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "categorie_juridique": {
                        "type": "string",
                      },
                      "categorie_juridique_libe": {
                        "type": "string",
                      },
                      "code_postal_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "commune": {
                        "type": "string",
                      },
                      "commune_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "contrat_etablissement": {
                        "enum": [
                          "99",
                          "10",
                          "30",
                          "20",
                          "50",
                          "31",
                          "21",
                          "!!",
                          "40",
                          "41",
                          "60",
                        ],
                        "type": "string",
                      },
                      "contrat_etablissement_libe": {
                        "enum": [
                          "Sans objet",
                          "Hors contrat",
                          "Contrat d'association pour toutes les classes",
                          "Contrat simple pour toutes les classes",
                          "Reconnu par l'Etat",
                          "Contrat d'association pour une partie des classes",
                          "Contrat simple pour une partie des classes",
                          "Inconnu du gestionnaire",
                          "Contrats simple et d'association pour toutes les classes",
                          "Contrats simple et d'association pour une partie des classes",
                          "Sous contrat établissement agricole",
                        ],
                        "type": "string",
                      },
                      "coordonnee_x": {
                        "type": [
                          "number",
                          "null",
                        ],
                      },
                      "coordonnee_y": {
                        "type": [
                          "number",
                          "null",
                        ],
                      },
                      "date_derniere_mise_a_jour": {
                        "type": "string",
                      },
                      "date_fermeture": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "date_geolocalisation": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "date_ouverture": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "denomination_principale": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "departement_insee_3": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "departement_insee_3_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "etat_etablissement": {
                        "enum": [
                          "1",
                          "2",
                          "3",
                          "4",
                        ],
                        "type": "string",
                      },
                      "etat_etablissement_libe": {
                        "enum": [
                          "Ouvert",
                          "À fermer",
                          "À ouvrir",
                          "Fermé",
                        ],
                        "type": "string",
                      },
                      "etat_sirad_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "hebergement_etablissement": {
                        "type": "string",
                      },
                      "hebergement_etablissement_libe": {
                        "type": "string",
                      },
                      "lieu_dit_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "localisation": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "localisation_complement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "localite_acheminement_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "mel_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "mention_distribution": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "ministere_tutelle": {
                        "pattern": "^\\d{2}$",
                        "type": "string",
                      },
                      "ministere_tutelle_libe": {
                        "type": "string",
                      },
                      "nature_uai": {
                        "pattern": "^\\d{3}$",
                        "type": "string",
                      },
                      "nature_uai_libe": {
                        "type": "string",
                      },
                      "niveau_uai": {
                        "enum": [
                          "1",
                          "3",
                          "2",
                          "4",
                        ],
                        "type": "string",
                      },
                      "niveau_uai_libe": {
                        "enum": [
                          "UAI célibataire",
                          "UAI fille",
                          "UAI mère",
                          "UAI mère et fille",
                        ],
                        "type": "string",
                      },
                      "numero_finess_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_siren_siret_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_telecopieur_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_telephone_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_uai_fille": {
                        "type": "string",
                      },
                      "numero_uai_trouve": {
                        "type": "string",
                      },
                      "patronyme_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "pays": {
                        "type": "string",
                      },
                      "pays_etranger_acheminement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "pays_libe": {
                        "type": "string",
                      },
                      "secteur_public_prive": {
                        "enum": [
                          "PR",
                          "PU",
                        ],
                        "type": "string",
                      },
                      "secteur_public_prive_libe": {
                        "enum": [
                          "Privé",
                          "Public",
                        ],
                        "type": "string",
                      },
                      "sigle_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "site_web": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "situation_comptable": {
                        "type": "string",
                      },
                      "situation_comptable_libe": {
                        "type": "string",
                      },
                      "source": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "tutelle_2": {
                        "pattern": "^\\d{2}$",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "tutelle_2_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "type_rattachement": {
                        "type": "string",
                      },
                      "type_uai": {
                        "type": "string",
                      },
                      "type_uai_libe": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "nature_uai",
                      "nature_uai_libe",
                      "type_uai",
                      "type_uai_libe",
                      "etat_etablissement",
                      "etat_etablissement_libe",
                      "ministere_tutelle",
                      "ministere_tutelle_libe",
                      "tutelle_2",
                      "tutelle_2_libe",
                      "secteur_public_prive",
                      "secteur_public_prive_libe",
                      "sigle_uai",
                      "categorie_juridique",
                      "categorie_juridique_libe",
                      "contrat_etablissement",
                      "contrat_etablissement_libe",
                      "categorie_financiere",
                      "categorie_financiere_libe",
                      "situation_comptable",
                      "situation_comptable_libe",
                      "niveau_uai",
                      "niveau_uai_libe",
                      "commune",
                      "commune_libe",
                      "academie",
                      "academie_libe",
                      "pays",
                      "pays_libe",
                      "departement_insee_3",
                      "departement_insee_3_libe",
                      "denomination_principale",
                      "appellation_officielle",
                      "patronyme_uai",
                      "hebergement_etablissement",
                      "hebergement_etablissement_libe",
                      "numero_siren_siret_uai",
                      "numero_finess_uai",
                      "date_fermeture",
                      "date_derniere_mise_a_jour",
                      "lieu_dit_uai",
                      "adresse_uai",
                      "boite_postale_uai",
                      "code_postal_uai",
                      "etat_sirad_uai",
                      "localite_acheminement_uai",
                      "pays_etranger_acheminement",
                      "numero_telephone_uai",
                      "numero_telecopieur_uai",
                      "mention_distribution",
                      "mel_uai",
                      "site_web",
                      "coordonnee_x",
                      "coordonnee_y",
                      "appariement",
                      "appariement_complement",
                      "localisation",
                      "localisation_complement",
                      "date_geolocalisation",
                      "source",
                      "numero_uai_trouve",
                      "numero_uai_fille",
                      "type_rattachement",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "tags": [
          "Expérimental",
        ],
      },
    },
    "/experimental/source/acce/mere": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "uai",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "description": "Si renseigné, limite le nombre de résultats retournés. Sinon retourne tous les résultats.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "description": "Si renseigné, limite le nombre de résultats retournés. Sinon retourne tous les résultats.",
              "type": [
                "number",
                "null",
              ],
            },
          },
          {
            "description": "Si renseigné, ignore les N premiers résultats.",
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "description": "Si renseigné, ignore les N premiers résultats.",
              "type": [
                "number",
                "null",
              ],
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "academie": {
                        "pattern": "^\\d{2}$",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "academie_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "adresse_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "appariement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "appariement_complement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "appellation_officielle": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "boite_postale_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "categorie_financiere": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "categorie_financiere_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "categorie_juridique": {
                        "type": "string",
                      },
                      "categorie_juridique_libe": {
                        "type": "string",
                      },
                      "code_postal_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "commune": {
                        "type": "string",
                      },
                      "commune_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "contrat_etablissement": {
                        "enum": [
                          "99",
                          "10",
                          "30",
                          "20",
                          "50",
                          "31",
                          "21",
                          "!!",
                          "40",
                          "41",
                          "60",
                        ],
                        "type": "string",
                      },
                      "contrat_etablissement_libe": {
                        "enum": [
                          "Sans objet",
                          "Hors contrat",
                          "Contrat d'association pour toutes les classes",
                          "Contrat simple pour toutes les classes",
                          "Reconnu par l'Etat",
                          "Contrat d'association pour une partie des classes",
                          "Contrat simple pour une partie des classes",
                          "Inconnu du gestionnaire",
                          "Contrats simple et d'association pour toutes les classes",
                          "Contrats simple et d'association pour une partie des classes",
                          "Sous contrat établissement agricole",
                        ],
                        "type": "string",
                      },
                      "coordonnee_x": {
                        "type": [
                          "number",
                          "null",
                        ],
                      },
                      "coordonnee_y": {
                        "type": [
                          "number",
                          "null",
                        ],
                      },
                      "date_derniere_mise_a_jour": {
                        "type": "string",
                      },
                      "date_fermeture": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "date_geolocalisation": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "date_ouverture": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "denomination_principale": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "departement_insee_3": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "departement_insee_3_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "etat_etablissement": {
                        "enum": [
                          "1",
                          "2",
                          "3",
                          "4",
                        ],
                        "type": "string",
                      },
                      "etat_etablissement_libe": {
                        "enum": [
                          "Ouvert",
                          "À fermer",
                          "À ouvrir",
                          "Fermé",
                        ],
                        "type": "string",
                      },
                      "etat_sirad_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "hebergement_etablissement": {
                        "type": "string",
                      },
                      "hebergement_etablissement_libe": {
                        "type": "string",
                      },
                      "lieu_dit_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "localisation": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "localisation_complement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "localite_acheminement_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "mel_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "mention_distribution": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "ministere_tutelle": {
                        "pattern": "^\\d{2}$",
                        "type": "string",
                      },
                      "ministere_tutelle_libe": {
                        "type": "string",
                      },
                      "nature_uai": {
                        "pattern": "^\\d{3}$",
                        "type": "string",
                      },
                      "nature_uai_libe": {
                        "type": "string",
                      },
                      "niveau_uai": {
                        "enum": [
                          "1",
                          "3",
                          "2",
                          "4",
                        ],
                        "type": "string",
                      },
                      "niveau_uai_libe": {
                        "enum": [
                          "UAI célibataire",
                          "UAI fille",
                          "UAI mère",
                          "UAI mère et fille",
                        ],
                        "type": "string",
                      },
                      "numero_finess_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_siren_siret_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_telecopieur_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_telephone_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "numero_uai_mere": {
                        "type": "string",
                      },
                      "numero_uai_trouve": {
                        "type": "string",
                      },
                      "patronyme_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "pays": {
                        "type": "string",
                      },
                      "pays_etranger_acheminement": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "pays_libe": {
                        "type": "string",
                      },
                      "secteur_public_prive": {
                        "enum": [
                          "PR",
                          "PU",
                        ],
                        "type": "string",
                      },
                      "secteur_public_prive_libe": {
                        "enum": [
                          "Privé",
                          "Public",
                        ],
                        "type": "string",
                      },
                      "sigle_uai": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "site_web": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "situation_comptable": {
                        "type": "string",
                      },
                      "situation_comptable_libe": {
                        "type": "string",
                      },
                      "source": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "tutelle_2": {
                        "pattern": "^\\d{2}$",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "tutelle_2_libe": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "type_rattachement": {
                        "type": "string",
                      },
                      "type_uai": {
                        "type": "string",
                      },
                      "type_uai_libe": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "nature_uai",
                      "nature_uai_libe",
                      "type_uai",
                      "type_uai_libe",
                      "etat_etablissement",
                      "etat_etablissement_libe",
                      "ministere_tutelle",
                      "ministere_tutelle_libe",
                      "tutelle_2",
                      "tutelle_2_libe",
                      "secteur_public_prive",
                      "secteur_public_prive_libe",
                      "sigle_uai",
                      "categorie_juridique",
                      "categorie_juridique_libe",
                      "contrat_etablissement",
                      "contrat_etablissement_libe",
                      "categorie_financiere",
                      "categorie_financiere_libe",
                      "situation_comptable",
                      "situation_comptable_libe",
                      "niveau_uai",
                      "niveau_uai_libe",
                      "commune",
                      "commune_libe",
                      "academie",
                      "academie_libe",
                      "pays",
                      "pays_libe",
                      "departement_insee_3",
                      "departement_insee_3_libe",
                      "denomination_principale",
                      "appellation_officielle",
                      "patronyme_uai",
                      "hebergement_etablissement",
                      "hebergement_etablissement_libe",
                      "numero_siren_siret_uai",
                      "numero_finess_uai",
                      "date_fermeture",
                      "date_derniere_mise_a_jour",
                      "lieu_dit_uai",
                      "adresse_uai",
                      "boite_postale_uai",
                      "code_postal_uai",
                      "etat_sirad_uai",
                      "localite_acheminement_uai",
                      "pays_etranger_acheminement",
                      "numero_telephone_uai",
                      "numero_telecopieur_uai",
                      "mention_distribution",
                      "mel_uai",
                      "site_web",
                      "coordonnee_x",
                      "coordonnee_y",
                      "appariement",
                      "appariement_complement",
                      "localisation",
                      "localisation_complement",
                      "date_geolocalisation",
                      "source",
                      "numero_uai_trouve",
                      "numero_uai_mere",
                      "type_rattachement",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "tags": [
          "Expérimental",
        ],
      },
    },
    "/experimental/source/acce/specialite": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "uai",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "description": "Si renseigné, limite le nombre de résultats retournés. Sinon retourne tous les résultats.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "description": "Si renseigné, limite le nombre de résultats retournés. Sinon retourne tous les résultats.",
              "type": [
                "number",
                "null",
              ],
            },
          },
          {
            "description": "Si renseigné, ignore les N premiers résultats.",
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "description": "Si renseigné, ignore les N premiers résultats.",
              "type": [
                "number",
                "null",
              ],
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "date_fermeture": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "date_ouverture": {
                        "type": "string",
                      },
                      "numero_uai": {
                        "type": "string",
                      },
                      "specificite_uai": {
                        "type": "string",
                      },
                      "specificite_uai_libe": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "numero_uai",
                      "specificite_uai",
                      "specificite_uai_libe",
                      "date_ouverture",
                      "date_fermeture",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "tags": [
          "Expérimental",
        ],
      },
    },
    "/experimental/source/acce/zone": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "uai",
            "required": false,
            "schema": {
              "type": "string",
            },
          },
          {
            "description": "Si renseigné, limite le nombre de résultats retournés. Sinon retourne tous les résultats.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "description": "Si renseigné, limite le nombre de résultats retournés. Sinon retourne tous les résultats.",
              "type": [
                "number",
                "null",
              ],
            },
          },
          {
            "description": "Si renseigné, ignore les N premiers résultats.",
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "description": "Si renseigné, ignore les N premiers résultats.",
              "type": [
                "number",
                "null",
              ],
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "date_derniere_mise_a_jour": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "date_fermeture": {
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "date_ouverture": {
                        "type": "string",
                      },
                      "numero_uai": {
                        "type": "string",
                      },
                      "type_zone_uai": {
                        "type": "string",
                      },
                      "type_zone_uai_libe": {
                        "type": "string",
                      },
                      "zone": {
                        "type": "string",
                      },
                      "zone_libe": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "numero_uai",
                      "type_zone_uai",
                      "type_zone_uai_libe",
                      "zone",
                      "zone_libe",
                      "date_ouverture",
                      "date_fermeture",
                      "date_derniere_mise_a_jour",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "tags": [
          "Expérimental",
        ],
      },
    },
    "/geographie/v1/commune/search": {
      "get": {
        "description": "Recherche de communes par code insee ou postal. Attention, un meme code postal peut-etre associé à plusieurs communes et une commune peut avoir plusieurs code postaux.",
        "operationId": "communeSearch",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "description": "Code INSEE ou postal recherché",
              "examples": [
                "75056",
                "75000",
              ],
              "pattern": "^\\d{5}$",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Liste des communes correspondant au code INSEE ou postal recherché",
                  "items": {
                    "description": "Commune",
                    "properties": {
                      "academie": {
                        "description": "Académie de la commune",
                        "properties": {
                          "code": {
                            "description": "Code de l'académie",
                            "type": "string",
                          },
                          "id": {
                            "description": "Identifiant de l'académie",
                            "type": "string",
                          },
                          "nom": {
                            "description": "Nom de l'académie",
                            "type": "string",
                          },
                        },
                        "required": [
                          "id",
                          "code",
                          "nom",
                        ],
                        "type": "object",
                      },
                      "anciennes": {
                        "description": "Anciennes communes fusionnées",
                        "items": {
                          "properties": {
                            "codeInsee": {
                              "description": "Code INSEE de l'ancienne commune",
                              "type": "string",
                            },
                            "nom": {
                              "description": "Nom de l'ancienne commune",
                              "type": "string",
                            },
                          },
                          "required": [
                            "codeInsee",
                            "nom",
                          ],
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "arrondissements": {
                        "description": "Arrondissements de la commune",
                        "items": {
                          "properties": {
                            "code": {
                              "description": "Code INSEE de l'arrondissement",
                              "type": "string",
                            },
                            "nom": {
                              "description": "Nom de l'arrondissement",
                              "type": "string",
                            },
                          },
                          "required": [
                            "code",
                            "nom",
                          ],
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "code": {
                        "description": "Code INSEE et postaux de la commune

Une commune peut avoir plusieurs code postaux, et un code postal peut correspondre à plusieurs communes. Le code INSEE lui est unique pour chaque commune.",
                        "properties": {
                          "insee": {
                            "description": "Code INSEE de la commune",
                            "type": "string",
                          },
                          "postaux": {
                            "description": "Liste des codes postaux de la commune",
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        },
                        "required": [
                          "insee",
                          "postaux",
                        ],
                        "type": "object",
                      },
                      "departement": {
                        "description": "Département de la commune",
                        "properties": {
                          "codeInsee": {
                            "description": "Code INSEE du département",
                            "type": "string",
                          },
                          "nom": {
                            "description": "Nom du département",
                            "type": "string",
                          },
                        },
                        "required": [
                          "codeInsee",
                          "nom",
                        ],
                        "type": "object",
                      },
                      "localisation": {
                        "description": "Les informations de localisations sont composés du:

- Du \`centre\` de la commune
- De la boite englobante (\`bbox\`) qui délimite la zone de la commune.

Les champs \`centre\` et \`bbox\` sont tous les deux au format [GeoJSON](https://fr.wikipedia.org/wiki/GeoJSON)
",
                        "properties": {
                          "bbox": {
                            "description": "Coordonnées de la boîte englobante de la commune au format GeoJSON "Polygon"",
                            "properties": {
                              "coordinates": {
                                "items": {
                                  "items": {
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "prefixItems": [
                                      {
                                        "maximum": 180,
                                        "minimum": -180,
                                        "type": "number",
                                      },
                                      {
                                        "maximum": 90,
                                        "minimum": -90,
                                        "type": "number",
                                      },
                                    ],
                                    "type": "array",
                                  },
                                  "type": "array",
                                },
                                "type": "array",
                              },
                              "type": {
                                "enum": [
                                  "Polygon",
                                ],
                                "type": "string",
                              },
                            },
                            "required": [
                              "type",
                              "coordinates",
                            ],
                            "type": "object",
                          },
                          "centre": {
                            "additionalProperties": false,
                            "description": "Coordonnées du centre de la commune au format GeoJSON "Point"",
                            "properties": {
                              "coordinates": {
                                "maxItems": 2,
                                "minItems": 2,
                                "prefixItems": [
                                  {
                                    "maximum": 180,
                                    "minimum": -180,
                                    "type": "number",
                                  },
                                  {
                                    "maximum": 90,
                                    "minimum": -90,
                                    "type": "number",
                                  },
                                ],
                                "type": "array",
                              },
                              "type": {
                                "enum": [
                                  "Point",
                                ],
                                "type": "string",
                              },
                            },
                            "required": [
                              "type",
                              "coordinates",
                            ],
                            "type": "object",
                          },
                        },
                        "required": [
                          "centre",
                          "bbox",
                        ],
                        "type": "object",
                      },
                      "mission_locale": {
                        "anyOf": [
                          {
                            "type": "null",
                          },
                          {
                            "description": "Mission Locale",
                            "properties": {
                              "contact": {
                                "properties": {
                                  "email": {
                                    "format": "email",
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                  "siteWeb": {
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                  "telephone": {
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                },
                                "required": [
                                  "email",
                                  "telephone",
                                  "siteWeb",
                                ],
                                "type": "object",
                              },
                              "id": {
                                "description": "Identifiant de la Mission Locale",
                                "type": "number",
                              },
                              "localisation": {
                                "description": "Localisation de la mission locale",
                                "properties": {
                                  "adresse": {
                                    "description": "Adresse de la Mission Locale",
                                    "type": "string",
                                  },
                                  "cp": {
                                    "description": "Code postal de la Mission Locale",
                                    "type": "string",
                                  },
                                  "geopoint": {
                                    "additionalProperties": false,
                                    "description": "Coordonnés GPS au format GeoJSON "Point"",
                                    "properties": {
                                      "coordinates": {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "prefixItems": [
                                          {
                                            "maximum": 180,
                                            "minimum": -180,
                                            "type": "number",
                                          },
                                          {
                                            "maximum": 90,
                                            "minimum": -90,
                                            "type": "number",
                                          },
                                        ],
                                        "type": "array",
                                      },
                                      "type": {
                                        "enum": [
                                          "Point",
                                        ],
                                        "type": "string",
                                      },
                                    },
                                    "required": [
                                      "type",
                                      "coordinates",
                                    ],
                                    "type": [
                                      "object",
                                      "null",
                                    ],
                                  },
                                  "ville": {
                                    "description": "Ville de la Mission Locale",
                                    "type": "string",
                                  },
                                },
                                "required": [
                                  "geopoint",
                                  "adresse",
                                  "cp",
                                  "ville",
                                ],
                                "type": "object",
                              },
                              "nom": {
                                "description": "Nom de la mission locale",
                                "type": "string",
                              },
                              "siret": {
                                "description": "Numéro SIRET de la mission locale",
                                "type": "string",
                              },
                            },
                            "required": [
                              "id",
                              "nom",
                              "siret",
                              "localisation",
                              "contact",
                            ],
                            "type": "object",
                          },
                        ],
                        "description": "Mission locale dont relève la commune",
                      },
                      "nom": {
                        "description": "Nom de la commune",
                        "type": "string",
                      },
                      "region": {
                        "description": "Région de la commune",
                        "properties": {
                          "codeInsee": {
                            "description": "Code INSEE de la région",
                            "type": "string",
                          },
                          "nom": {
                            "description": "Nom de la région",
                            "type": "string",
                          },
                        },
                        "required": [
                          "codeInsee",
                          "nom",
                        ],
                        "type": "object",
                      },
                    },
                    "required": [
                      "nom",
                      "code",
                      "departement",
                      "academie",
                      "region",
                      "localisation",
                      "mission_locale",
                      "arrondissements",
                      "anciennes",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "Succès",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Requête invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "examples": [
                        "Request validation failed",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "examples": [
                        "Bad Request",
                      ],
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        400,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Requête invalide",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Clé d’API manquante ou invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Vous devez être connecté pour accéder à cette ressource",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        401,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Clé d’API manquante ou invalide",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Habilitations insuffisantes pour accéder à la ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Le jeton d'accès est invalide",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Forbidden",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        403,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Habilitations insuffisantes pour accéder à la ressource",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Ressource non trouvée",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Resource non trouvée",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Not Found",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        404,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Ressource non trouvée",
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Conflit de ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "La ressource exite déjà",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Conflict",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        409,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflit de ressource",
          },
          "419": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Limite de volumétrie atteinte pour la clé d’API",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Limite de requêtes atteinte",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Too Many Requests",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        419,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Limite de volumétrie atteinte pour la clé d’API",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Une erreur inattendue s'est produite sur le serveur.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Internal Server Error",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        500,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Une erreur inattendue s'est produite sur le serveur.",
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est indisponible.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Bad Gateway",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est indisponible.",
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est en maintenance",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Service Unavailable",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est en maintenance",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "summary": "Recherche de communes par code insee ou postal",
        "tags": [
          "Géographie",
        ],
      },
    },
    "/geographie/v1/departement": {
      "get": {
        "description": "Récupération des départements français, pour des raisons pratiques les collectivités et territoires d'outre-mer sont inclus et assimilés à des départements",
        "operationId": "listDepartements",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Liste des départements français",
                  "items": {
                    "description": "Département",
                    "properties": {
                      "academie": {
                        "description": "Académie de la commune",
                        "properties": {
                          "code": {
                            "description": "Code de l'académie",
                            "type": "string",
                          },
                          "id": {
                            "description": "Identifiant de l'académie",
                            "type": "string",
                          },
                          "nom": {
                            "description": "Nom de l'académie",
                            "type": "string",
                          },
                        },
                        "required": [
                          "id",
                          "code",
                          "nom",
                        ],
                        "type": "object",
                      },
                      "codeInsee": {
                        "description": "Code INSEE du département",
                        "type": "string",
                      },
                      "nom": {
                        "description": "Nom du département",
                        "type": "string",
                      },
                      "region": {
                        "description": "Région de la commune",
                        "properties": {
                          "codeInsee": {
                            "description": "Code INSEE de la région",
                            "type": "string",
                          },
                          "nom": {
                            "description": "Nom de la région",
                            "type": "string",
                          },
                        },
                        "required": [
                          "codeInsee",
                          "nom",
                        ],
                        "type": "object",
                      },
                    },
                    "required": [
                      "nom",
                      "codeInsee",
                      "academie",
                      "region",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "Succès",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Requête invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "examples": [
                        "Request validation failed",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "examples": [
                        "Bad Request",
                      ],
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        400,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Requête invalide",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Clé d’API manquante ou invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Vous devez être connecté pour accéder à cette ressource",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        401,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Clé d’API manquante ou invalide",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Habilitations insuffisantes pour accéder à la ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Le jeton d'accès est invalide",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Forbidden",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        403,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Habilitations insuffisantes pour accéder à la ressource",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Ressource non trouvée",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Resource non trouvée",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Not Found",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        404,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Ressource non trouvée",
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Conflit de ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "La ressource exite déjà",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Conflict",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        409,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflit de ressource",
          },
          "419": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Limite de volumétrie atteinte pour la clé d’API",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Limite de requêtes atteinte",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Too Many Requests",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        419,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Limite de volumétrie atteinte pour la clé d’API",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Une erreur inattendue s'est produite sur le serveur.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Internal Server Error",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        500,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Une erreur inattendue s'est produite sur le serveur.",
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est indisponible.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Bad Gateway",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est indisponible.",
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est en maintenance",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Service Unavailable",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est en maintenance",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "summary": "Récupération des départements français",
        "tags": [
          "Géographie",
        ],
      },
    },
    "/geographie/v1/mission-locale": {
      "get": {
        "description": "Récupération de la liste des missions locales",
        "operationId": "listMissionLocales",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Liste des missions locales",
                  "items": {
                    "description": "Mission Locale",
                    "properties": {
                      "contact": {
                        "properties": {
                          "email": {
                            "format": "email",
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                          "siteWeb": {
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                          "telephone": {
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                        },
                        "required": [
                          "email",
                          "telephone",
                          "siteWeb",
                        ],
                        "type": "object",
                      },
                      "id": {
                        "description": "Identifiant de la Mission Locale",
                        "type": "number",
                      },
                      "localisation": {
                        "description": "Localisation de la mission locale",
                        "properties": {
                          "adresse": {
                            "description": "Adresse de la Mission Locale",
                            "type": "string",
                          },
                          "cp": {
                            "description": "Code postal de la Mission Locale",
                            "type": "string",
                          },
                          "geopoint": {
                            "additionalProperties": false,
                            "description": "Coordonnés GPS au format GeoJSON "Point"",
                            "properties": {
                              "coordinates": {
                                "maxItems": 2,
                                "minItems": 2,
                                "prefixItems": [
                                  {
                                    "maximum": 180,
                                    "minimum": -180,
                                    "type": "number",
                                  },
                                  {
                                    "maximum": 90,
                                    "minimum": -90,
                                    "type": "number",
                                  },
                                ],
                                "type": "array",
                              },
                              "type": {
                                "enum": [
                                  "Point",
                                ],
                                "type": "string",
                              },
                            },
                            "required": [
                              "type",
                              "coordinates",
                            ],
                            "type": [
                              "object",
                              "null",
                            ],
                          },
                          "ville": {
                            "description": "Ville de la Mission Locale",
                            "type": "string",
                          },
                        },
                        "required": [
                          "geopoint",
                          "adresse",
                          "cp",
                          "ville",
                        ],
                        "type": "object",
                      },
                      "nom": {
                        "description": "Nom de la mission locale",
                        "type": "string",
                      },
                      "siret": {
                        "description": "Numéro SIRET de la mission locale",
                        "type": "string",
                      },
                    },
                    "required": [
                      "id",
                      "nom",
                      "siret",
                      "localisation",
                      "contact",
                    ],
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "Succès",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Requête invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "examples": [
                        "Request validation failed",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "examples": [
                        "Bad Request",
                      ],
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        400,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Requête invalide",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Clé d’API manquante ou invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Vous devez être connecté pour accéder à cette ressource",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        401,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Clé d’API manquante ou invalide",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Habilitations insuffisantes pour accéder à la ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Le jeton d'accès est invalide",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Forbidden",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        403,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Habilitations insuffisantes pour accéder à la ressource",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Ressource non trouvée",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Resource non trouvée",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Not Found",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        404,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Ressource non trouvée",
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Conflit de ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "La ressource exite déjà",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Conflict",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        409,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflit de ressource",
          },
          "419": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Limite de volumétrie atteinte pour la clé d’API",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Limite de requêtes atteinte",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Too Many Requests",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        419,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Limite de volumétrie atteinte pour la clé d’API",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Une erreur inattendue s'est produite sur le serveur.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Internal Server Error",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        500,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Une erreur inattendue s'est produite sur le serveur.",
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est indisponible.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Bad Gateway",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est indisponible.",
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est en maintenance",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Service Unavailable",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est en maintenance",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "summary": "Récupération de la liste des missions locales",
        "tags": [
          "Géographie",
        ],
      },
    },
    "/healthcheck": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Statut de l'application",
                  "properties": {
                    "env": {
                      "enum": [
                        "local",
                        "recette",
                        "production",
                        "preview",
                        "test",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "example": "api",
                      "type": "string",
                    },
                    "version": {
                      "example": "1.0.0",
                      "type": "string",
                    },
                  },
                  "required": [
                    "name",
                    "version",
                    "env",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Statut de l'application",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Requête invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "examples": [
                        "Request validation failed",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "examples": [
                        "Bad Request",
                      ],
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        400,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Requête invalide",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Clé d’API manquante ou invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Vous devez être connecté pour accéder à cette ressource",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        401,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Clé d’API manquante ou invalide",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Habilitations insuffisantes pour accéder à la ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Le jeton d'accès est invalide",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Forbidden",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        403,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Habilitations insuffisantes pour accéder à la ressource",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Ressource non trouvée",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Resource non trouvée",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Not Found",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        404,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Ressource non trouvée",
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Conflit de ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "La ressource exite déjà",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Conflict",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        409,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflit de ressource",
          },
          "419": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Limite de volumétrie atteinte pour la clé d’API",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Limite de requêtes atteinte",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Too Many Requests",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        419,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Limite de volumétrie atteinte pour la clé d’API",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Une erreur inattendue s'est produite sur le serveur.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Internal Server Error",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        500,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Une erreur inattendue s'est produite sur le serveur.",
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est indisponible.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Bad Gateway",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est indisponible.",
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est en maintenance",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Service Unavailable",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est en maintenance",
          },
        },
        "security": [],
        "tags": [
          "Système",
        ],
      },
    },
    "/job/v1/apply": {
      "post": {
        "description": "Afin de fluidifier le parcours de vos utilisateurs, cette API vous permet de transmettre directement aux recruteurs les candidatures de vos usagers, sans que ces derniers n’aient à quitter votre site.

Pour cela, elle requiert seulement la transmission des coordonnées ainsi que du CV du candidat. Un message de motivation, à destination du recruteur, peut également être transmis de manière facultative. La candidature est ensuite envoyée au recruteur par email.

L’utilisation de cette route d’API est possible dans 2 scénarios différents :

- On postule à une offre spécifique, dans ce cas il est nécessaire de connaitre l’identifiant de l’offre.
- On postule à une entreprise spécifique, dans ce cas il est nécessaire de connaitre l’identifiant du recruteur.
",
        "operationId": "jobApply",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Candidature",
                "properties": {
                  "applicant_attachment_content": {
                    "description": "CV du candidat",
                    "format": "byte",
                    "maxLength": 4215276,
                    "type": "string",
                  },
                  "applicant_attachment_name": {
                    "description": "Nom du CV",
                    "minLength": 1,
                    "pattern": "((.*?))(\\.)+([Dd][Oo][Cc][Xx]|[Pp][Dd][Ff])$",
                    "type": "string",
                  },
                  "applicant_email": {
                    "description": "Email du candidat",
                    "format": "email",
                    "type": "string",
                  },
                  "applicant_first_name": {
                    "description": "Prénom du candidat",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                  },
                  "applicant_last_name": {
                    "description": "Nom du candidat",
                    "maxLength": 50,
                    "minLength": 1,
                    "type": "string",
                  },
                  "applicant_message": {
                    "type": [
                      "string",
                      "null",
                    ],
                  },
                  "applicant_phone": {
                    "description": "Numéro de téléphone du candidat",
                    "type": "string",
                  },
                  "recipient_id": {
                    "description": "Identifiant du destinataire récupéré de \`apply.recipient_id\` depuis les resultas de la route de recherche.",
                    "type": "string",
                  },
                },
                "required": [
                  "applicant_first_name",
                  "applicant_last_name",
                  "applicant_email",
                  "applicant_phone",
                  "applicant_attachment_name",
                  "applicant_attachment_content",
                  "recipient_id",
                ],
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Identifiant de la candidature.",
                      "type": "string",
                    },
                  },
                  "required": [
                    "id",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Succès",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Requête invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "examples": [
                        "Request validation failed",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "examples": [
                        "Bad Request",
                      ],
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        400,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Requête invalide",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Clé d’API manquante ou invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Vous devez être connecté pour accéder à cette ressource",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        401,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Clé d’API manquante ou invalide",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Habilitations insuffisantes pour accéder à la ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Le jeton d'accès est invalide",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Forbidden",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        403,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Habilitations insuffisantes pour accéder à la ressource",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Ressource non trouvée",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Resource non trouvée",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Not Found",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        404,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Ressource non trouvée",
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Conflit de ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "La ressource exite déjà",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Conflict",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        409,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflit de ressource",
          },
          "419": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Limite de volumétrie atteinte pour la clé d’API",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Limite de requêtes atteinte",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Too Many Requests",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        419,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Limite de volumétrie atteinte pour la clé d’API",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Une erreur inattendue s'est produite sur le serveur.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Internal Server Error",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        500,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Une erreur inattendue s'est produite sur le serveur.",
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est indisponible.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Bad Gateway",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est indisponible.",
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est en maintenance",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Service Unavailable",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est en maintenance",
          },
        },
        "security": [
          {
            "api-key": [
              "applications:write",
            ],
          },
        ],
        "summary": "Envoyer une candidature à une offre ou à une entreprise.",
        "tags": [
          "Job",
        ],
      },
    },
    "/job/v1/offer": {
      "post": {
        "description": "Cette API vous permet de maximiser la visibilité de vos offres d'emploi en alternance en les partageant avec le service La bonne alternance qui les redistribue automatiquement aux candidats les plus pertinents sur son site ainsi que sur ses sites partenaires.",
        "operationId": "jobOfferCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Offre d'emploi",
                "properties": {
                  "apply": {
                    "description": "Eléments qui permettent de déposer une candidature :

- URL de redirection
- numéro de téléphone
- email de l’entreprise


Au moins une méthode de candidature doit être fournie lors du dépot d'offre. (soit url, phone, email)",
                    "properties": {
                      "email": {
                        "description": "Recruiter's email adress",
                        "examples": [
                          "jean.dupuis@beta.gouv.fr",
                        ],
                        "format": "email",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "phone": {
                        "description": "Recruiter's phone number

Notes:

Only European phone numbers are allowed. There is also a check on the nature of the number: only mobile and landline phones are allowed.",
                        "examples": [
                          "0199000000",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "url": {
                        "description": "Redirect URL",
                        "examples": [
                          "https://labonnealternance.apprentissage.beta.gouv.fr/recherche-apprentissage?display=list&page=fiche&type=matcha&itemId=664752a2ebe24062b758c641",
                        ],
                        "format": "uri",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "type": "object",
                  },
                  "contract": {
                    "description": "Un contrat est décrit par :

- Le type (apprentissage et/ou professionnalisation).
- La date de début.
- La durée.
- Le mode de travail (présentiel, télétravail ou hybride).
",
                    "properties": {
                      "duration": {
                        "description": "Contract duration in months.",
                        "examples": [
                          12,
                        ],
                        "minimum": 0,
                        "type": [
                          "integer",
                          "null",
                        ],
                      },
                      "remote": {
                        "description": "Work mode (on-site, remote, or hybrid)",
                        "enum": [
                          "onsite",
                          "remote",
                          "hybrid",
                        ],
                        "examples": [
                          "onsite",
                          "remote",
                          "hybrid",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "start": {
                        "description": "Date de début du contrat.",
                        "examples": [
                          "2024-09-23T10:00:00.000Z",
                        ],
                        "format": "date-time",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "type": {
                        "default": [
                          "Apprentissage",
                          "Professionnalisation",
                        ],
                        "description": "Contract type (apprenticeship and/or professionalization)",
                        "items": {
                          "description": "Contract type (apprenticeship and/or professionalization)",
                          "enum": [
                            "Apprentissage",
                            "Professionnalisation",
                          ],
                          "examples": [
                            "Apprentissage",
                            "Professionnalisation",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                    },
                    "type": "object",
                  },
                  "offer": {
                    "description": "Une offre d’emploi est décrite par :

- L’intitulé. Exemple : Développeur / Développeuse web.

- La description. Exemple : Conçoit, développe et met au point un projet d'application informatique, de la phase d'étude à son intégration, pour un client ou une entreprise selon des besoins fonctionnels et un cahier des charges. Peut conduire des projets de développement. Peut coordonner une équipe.

- Le niveau de diplôme visé. Exemple : BP, Bac, autres formations niveau (Bac)

- Les compétences ou qualités attendues pour le poste. Exemple : Faire preuve d'autonomie ; Faire preuve de créativité, d'inventivité ; Faire preuve de rigueur et de précision ; Travailler en équipe

- Les compétences ou qualités à acquérir durant l'alternance. Exemple : Recherche, Innovation (Analyser les indicateurs pertinents sur les tendances et les usages des clients ; Concevoir et développer une solution digitale ; Créer une documentation technique). Nouvelles technologies (Assembler des composants logiciels ; Concevoir une application web)

- Les conditions d’accès au métier. Exemple : Ce métier est accessible avec un diplôme de niveau Bac+2 (BTS, DUT) à Master (MIAGE, diplôme d'ingénieur, Master professionnel, ...) en informatique. Il est également accessible avec une expérience professionnelle en informatique, système d'exploitation ou dans un domaine applicatif. La pratique de l'anglais (vocabulaire technique) est requise.

- Le mode de travail (présentiel, télétravail ou hybride).


Le ROME correspond au Référentiel Opérationnel des Métiers et des Emplois. Conçu par France Travail (anciennement Pôle Emploi), ce référentiel présente l'ensemble des métiers regroupés par fiches, organisées par domaines professionnels.",
                    "properties": {
                      "access_conditions": {
                        "default": [],
                        "description": "The conditions for entering the profession",
                        "items": {
                          "description": "The conditions for entering the profession",
                          "examples": [
                            "Ce métier est accessible avec un diplôme de niveau Bac+2 (BTS, DUT) à Master (MIAGE, diplôme d'ingénieur, Master professionnel, ...) en informatique.",
                            "Il est également accessible avec une expérience professionnelle en informatique, système d'exploitation ou dans un domaine applicatif.",
                            "La pratique de l'anglais (vocabulaire technique) est requise.",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "description": {
                        "description": "Job offer description.",
                        "examples": [
                          "Conçoit, développe et met au point un projet d'application informatique, de la phase d'étude à son intégration, pour un client ou une entreprise selon des besoins fonctionnels et un cahier des charges. Peut conduire des projets de développement. Peut coordonner une équipe.",
                        ],
                        "minLength": 30,
                        "type": "string",
                      },
                      "desired_skills": {
                        "default": [],
                        "description": "The skills or qualities expected for the position.",
                        "items": {
                          "description": "The skills or qualities expected for the position.",
                          "examples": [
                            "Faire preuve d'autonomie",
                            "Faire preuve de créativité, d'inventivité",
                            "Faire preuve de rigueur et de précision",
                            "Travailler en équipe",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "multicast": {
                        "default": true,
                        "description": "Si l'offre peut être diffusé sur l'ensemble des plateformes partenaires",
                        "type": "boolean",
                      },
                      "opening_count": {
                        "default": 1,
                        "description": "Number of positions available for this job offer",
                        "examples": [
                          1,
                          3,
                        ],
                        "type": "number",
                      },
                      "origin": {
                        "description": "Origine de l'offre provenant d'un aggregateur",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "publication": {
                        "description": "Une opportunité d’emploi possède un cycle de vie : une date de création et une date d'expiration.
",
                        "properties": {
                          "creation": {
                            "description": "Creation date of the job opportunity.",
                            "examples": [
                              "2024-07-23T13:23:01.000Z",
                            ],
                            "format": "date-time",
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                          "expiration": {
                            "description": "Expiration date of the job opportunity.",
                            "examples": [
                              "2027-05-14T00:00:00Z",
                            ],
                            "format": "date-time",
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                        },
                        "type": "object",
                      },
                      "rome_codes": {
                        "description": "ROME code(s) of the offer

Notes:

If the published offer does not have a ROME code provided, we deduce the ROME codes from the job offer title.",
                        "items": {
                          "description": "ROME code",
                          "examples": [
                            "A1401",
                          ],
                          "pattern": "^[A-Z]\\d{4}$",
                          "type": "string",
                        },
                        "type": [
                          "array",
                          "null",
                        ],
                      },
                      "status": {
                        "description": "Le statut de l'offre (cycle de vie) :

- Active : L'offre est disponible sur la plateforme et il est possible d'y postuler.
- Filled : L'offre a été pourvue et n'est donc plus disponible.
- Cancelled : L'offre a été annulée et n'est donc plus disponible.


Notes:

When creating an offer, only active offers are accepted. However, during an update, it is possible to cancel or mark an offer as filled.",
                        "enum": [
                          "Active",
                          "Filled",
                          "Cancelled",
                        ],
                        "examples": [
                          "Active",
                          "Filled",
                          "Cancelled",
                        ],
                        "type": "string",
                      },
                      "target_diploma": {
                        "description": "Targeted diploma level at the end of studies.",
                        "properties": {
                          "european": {
                            "description": "Targeted diploma level at the end of studies.",
                            "enum": [
                              "3",
                              "4",
                              "5",
                              "6",
                              "7",
                            ],
                            "examples": [
                              3,
                            ],
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                        },
                        "type": [
                          "object",
                          "null",
                        ],
                      },
                      "title": {
                        "description": "Job offer title.",
                        "examples": [
                          "Développeur / Développeuse web",
                        ],
                        "minLength": 3,
                        "type": "string",
                      },
                      "to_be_acquired_skills": {
                        "default": [],
                        "description": "The skills or qualities to be acquired during the apprenticeship.",
                        "items": {
                          "description": "The skills or qualities to be acquired during the apprenticeship.",
                          "examples": [
                            "Recherche, Innovation : Analyser les indicateurs pertinents sur les tendances et les usages des clients",
                            "Recherche, Innovation : Concevoir et développer une solution digitale",
                            "Nouvelles technologies : Assembler des composants logiciels",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                    },
                    "required": [
                      "title",
                      "description",
                    ],
                    "type": "object",
                  },
                  "workplace": {
                    "description": "Cet élement regroupe :

- Le nom (enseigne ou à défaut, raison sociale) et le numéro SIRET de l’entreprise.
- La description de l’employeur et/ou du service où s’exécutera le contrat.
- La tranche effectif de l’entreprise, en nombre de salariés.
- Le site web de l’entreprise.
",
                    "properties": {
                      "description": {
                        "description": "Description of the employer and/or the department where the contract will be carried out.",
                        "examples": [
                          "Service du Premier ministre, placé sous l’autorité du ministre de la Transformation et de la Fonction publiques, la direction interministérielle du numérique (DINUM) a pour mission d’élaborer la stratégie numérique de l’État et de piloter sa mise en œuvre. Notre objectif : un État plus efficace, plus simple et plus souverain grâce au numérique.",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "location": {
                        "description": "Adresse postale et géolocalisation rattachées au numéro SIRET de l’entreprise
",
                        "properties": {
                          "address": {
                            "description": "Address of the job offer

Notes:

In the case of job offer publication, a custom address can be provided; otherwise, the establishment's address will be used.

The geopoint field is derived from the address.",
                            "examples": [
                              "20 AVENUE DE SEGUR 75007 PARIS",
                            ],
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                        },
                        "type": [
                          "object",
                          "null",
                        ],
                      },
                      "name": {
                        "description": "Name of the establishment (brand name or, failing that, legal name)

Notes:

In the case of publishing a job offer, it is possible to use a custom name; otherwise, it will take the value of the brand name, or failing that, the legal name.",
                        "examples": [
                          "DIRECTION INTERMINISTERIELLE DU NUMERIQUE (DINUM)",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "siret": {
                        "description": "SIRET of the contract execution location

Notes:

The information \`brand\` \`legal_name\` \`size\` \`idcc\` \`opco\` \`naf\` is automatically deduced from the SIRET.",
                        "examples": [
                          "13002526500013",
                        ],
                        "pattern": "^\\d{14}$",
                        "type": "string",
                      },
                      "website": {
                        "description": "Company website",
                        "examples": [
                          "https://beta.gouv.fr/startups/",
                        ],
                        "format": "uri",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "required": [
                      "siret",
                    ],
                    "type": "object",
                  },
                },
                "required": [
                  "workplace",
                  "apply",
                  "offer",
                ],
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "Identifier of the created offer",
                      "type": "string",
                    },
                  },
                  "required": [
                    "id",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Succès",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Requête invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "examples": [
                        "Request validation failed",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "examples": [
                        "Bad Request",
                      ],
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        400,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Requête invalide",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Clé d’API manquante ou invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Vous devez être connecté pour accéder à cette ressource",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        401,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Clé d’API manquante ou invalide",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Habilitations insuffisantes pour accéder à la ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Le jeton d'accès est invalide",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Forbidden",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        403,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Habilitations insuffisantes pour accéder à la ressource",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Ressource non trouvée",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Resource non trouvée",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Not Found",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        404,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Ressource non trouvée",
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Conflit de ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "La ressource exite déjà",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Conflict",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        409,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflit de ressource",
          },
          "419": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Limite de volumétrie atteinte pour la clé d’API",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Limite de requêtes atteinte",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Too Many Requests",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        419,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Limite de volumétrie atteinte pour la clé d’API",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Une erreur inattendue s'est produite sur le serveur.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Internal Server Error",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        500,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Une erreur inattendue s'est produite sur le serveur.",
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est indisponible.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Bad Gateway",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est indisponible.",
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est en maintenance",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Service Unavailable",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est en maintenance",
          },
        },
        "security": [
          {
            "api-key": [
              "jobs:write",
            ],
          },
        ],
        "summary": "Envoyer une offre d'emploi en alternance",
        "tags": [
          "Job",
        ],
      },
    },
    "/job/v1/offer/{id}": {
      "put": {
        "description": "Cette API vous permet de maximiser la visibilité de vos offres d'emploi en alternance en les partageant avec le service La bonne alternance qui les redistribue automatiquement aux candidats les plus pertinents sur son site ainsi que sur ses sites partenaires.",
        "operationId": "jobOfferUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "description": "Identifiant unique de l’opportunité d’emploi",
              "examples": [
                "6687165396d52b5e01b409545",
              ],
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Offre d'emploi",
                "properties": {
                  "apply": {
                    "description": "Eléments qui permettent de déposer une candidature :

- URL de redirection
- numéro de téléphone
- email de l’entreprise


Au moins une méthode de candidature doit être fournie lors du dépot d'offre. (soit url, phone, email)",
                    "properties": {
                      "email": {
                        "description": "Recruiter's email adress",
                        "examples": [
                          "jean.dupuis@beta.gouv.fr",
                        ],
                        "format": "email",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "phone": {
                        "description": "Recruiter's phone number

Notes:

Only European phone numbers are allowed. There is also a check on the nature of the number: only mobile and landline phones are allowed.",
                        "examples": [
                          "0199000000",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "url": {
                        "description": "Redirect URL",
                        "examples": [
                          "https://labonnealternance.apprentissage.beta.gouv.fr/recherche-apprentissage?display=list&page=fiche&type=matcha&itemId=664752a2ebe24062b758c641",
                        ],
                        "format": "uri",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "type": "object",
                  },
                  "contract": {
                    "description": "Un contrat est décrit par :

- Le type (apprentissage et/ou professionnalisation).
- La date de début.
- La durée.
- Le mode de travail (présentiel, télétravail ou hybride).
",
                    "properties": {
                      "duration": {
                        "description": "Contract duration in months.",
                        "examples": [
                          12,
                        ],
                        "minimum": 0,
                        "type": [
                          "integer",
                          "null",
                        ],
                      },
                      "remote": {
                        "description": "Work mode (on-site, remote, or hybrid)",
                        "enum": [
                          "onsite",
                          "remote",
                          "hybrid",
                        ],
                        "examples": [
                          "onsite",
                          "remote",
                          "hybrid",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "start": {
                        "description": "Date de début du contrat.",
                        "examples": [
                          "2024-09-23T10:00:00.000Z",
                        ],
                        "format": "date-time",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "type": {
                        "default": [
                          "Apprentissage",
                          "Professionnalisation",
                        ],
                        "description": "Contract type (apprenticeship and/or professionalization)",
                        "items": {
                          "description": "Contract type (apprenticeship and/or professionalization)",
                          "enum": [
                            "Apprentissage",
                            "Professionnalisation",
                          ],
                          "examples": [
                            "Apprentissage",
                            "Professionnalisation",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                    },
                    "type": "object",
                  },
                  "offer": {
                    "description": "Une offre d’emploi est décrite par :

- L’intitulé. Exemple : Développeur / Développeuse web.

- La description. Exemple : Conçoit, développe et met au point un projet d'application informatique, de la phase d'étude à son intégration, pour un client ou une entreprise selon des besoins fonctionnels et un cahier des charges. Peut conduire des projets de développement. Peut coordonner une équipe.

- Le niveau de diplôme visé. Exemple : BP, Bac, autres formations niveau (Bac)

- Les compétences ou qualités attendues pour le poste. Exemple : Faire preuve d'autonomie ; Faire preuve de créativité, d'inventivité ; Faire preuve de rigueur et de précision ; Travailler en équipe

- Les compétences ou qualités à acquérir durant l'alternance. Exemple : Recherche, Innovation (Analyser les indicateurs pertinents sur les tendances et les usages des clients ; Concevoir et développer une solution digitale ; Créer une documentation technique). Nouvelles technologies (Assembler des composants logiciels ; Concevoir une application web)

- Les conditions d’accès au métier. Exemple : Ce métier est accessible avec un diplôme de niveau Bac+2 (BTS, DUT) à Master (MIAGE, diplôme d'ingénieur, Master professionnel, ...) en informatique. Il est également accessible avec une expérience professionnelle en informatique, système d'exploitation ou dans un domaine applicatif. La pratique de l'anglais (vocabulaire technique) est requise.

- Le mode de travail (présentiel, télétravail ou hybride).


Le ROME correspond au Référentiel Opérationnel des Métiers et des Emplois. Conçu par France Travail (anciennement Pôle Emploi), ce référentiel présente l'ensemble des métiers regroupés par fiches, organisées par domaines professionnels.",
                    "properties": {
                      "access_conditions": {
                        "default": [],
                        "description": "The conditions for entering the profession",
                        "items": {
                          "description": "The conditions for entering the profession",
                          "examples": [
                            "Ce métier est accessible avec un diplôme de niveau Bac+2 (BTS, DUT) à Master (MIAGE, diplôme d'ingénieur, Master professionnel, ...) en informatique.",
                            "Il est également accessible avec une expérience professionnelle en informatique, système d'exploitation ou dans un domaine applicatif.",
                            "La pratique de l'anglais (vocabulaire technique) est requise.",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "description": {
                        "description": "Job offer description.",
                        "examples": [
                          "Conçoit, développe et met au point un projet d'application informatique, de la phase d'étude à son intégration, pour un client ou une entreprise selon des besoins fonctionnels et un cahier des charges. Peut conduire des projets de développement. Peut coordonner une équipe.",
                        ],
                        "minLength": 30,
                        "type": "string",
                      },
                      "desired_skills": {
                        "default": [],
                        "description": "The skills or qualities expected for the position.",
                        "items": {
                          "description": "The skills or qualities expected for the position.",
                          "examples": [
                            "Faire preuve d'autonomie",
                            "Faire preuve de créativité, d'inventivité",
                            "Faire preuve de rigueur et de précision",
                            "Travailler en équipe",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "multicast": {
                        "default": true,
                        "description": "Si l'offre peut être diffusé sur l'ensemble des plateformes partenaires",
                        "type": "boolean",
                      },
                      "opening_count": {
                        "default": 1,
                        "description": "Number of positions available for this job offer",
                        "examples": [
                          1,
                          3,
                        ],
                        "type": "number",
                      },
                      "origin": {
                        "description": "Origine de l'offre provenant d'un aggregateur",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "publication": {
                        "description": "Une opportunité d’emploi possède un cycle de vie : une date de création et une date d'expiration.
",
                        "properties": {
                          "creation": {
                            "description": "Creation date of the job opportunity.",
                            "examples": [
                              "2024-07-23T13:23:01.000Z",
                            ],
                            "format": "date-time",
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                          "expiration": {
                            "description": "Expiration date of the job opportunity.",
                            "examples": [
                              "2027-05-14T00:00:00Z",
                            ],
                            "format": "date-time",
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                        },
                        "type": "object",
                      },
                      "rome_codes": {
                        "description": "ROME code(s) of the offer

Notes:

If the published offer does not have a ROME code provided, we deduce the ROME codes from the job offer title.",
                        "items": {
                          "description": "ROME code",
                          "examples": [
                            "A1401",
                          ],
                          "pattern": "^[A-Z]\\d{4}$",
                          "type": "string",
                        },
                        "type": [
                          "array",
                          "null",
                        ],
                      },
                      "status": {
                        "description": "Le statut de l'offre (cycle de vie) :

- Active : L'offre est disponible sur la plateforme et il est possible d'y postuler.
- Filled : L'offre a été pourvue et n'est donc plus disponible.
- Cancelled : L'offre a été annulée et n'est donc plus disponible.


Notes:

When creating an offer, only active offers are accepted. However, during an update, it is possible to cancel or mark an offer as filled.",
                        "enum": [
                          "Active",
                          "Filled",
                          "Cancelled",
                        ],
                        "examples": [
                          "Active",
                          "Filled",
                          "Cancelled",
                        ],
                        "type": "string",
                      },
                      "target_diploma": {
                        "description": "Targeted diploma level at the end of studies.",
                        "properties": {
                          "european": {
                            "description": "Targeted diploma level at the end of studies.",
                            "enum": [
                              "3",
                              "4",
                              "5",
                              "6",
                              "7",
                            ],
                            "examples": [
                              3,
                            ],
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                        },
                        "type": [
                          "object",
                          "null",
                        ],
                      },
                      "title": {
                        "description": "Job offer title.",
                        "examples": [
                          "Développeur / Développeuse web",
                        ],
                        "minLength": 3,
                        "type": "string",
                      },
                      "to_be_acquired_skills": {
                        "default": [],
                        "description": "The skills or qualities to be acquired during the apprenticeship.",
                        "items": {
                          "description": "The skills or qualities to be acquired during the apprenticeship.",
                          "examples": [
                            "Recherche, Innovation : Analyser les indicateurs pertinents sur les tendances et les usages des clients",
                            "Recherche, Innovation : Concevoir et développer une solution digitale",
                            "Nouvelles technologies : Assembler des composants logiciels",
                          ],
                          "type": "string",
                        },
                        "type": "array",
                      },
                    },
                    "required": [
                      "title",
                      "description",
                    ],
                    "type": "object",
                  },
                  "workplace": {
                    "description": "Cet élement regroupe :

- Le nom (enseigne ou à défaut, raison sociale) et le numéro SIRET de l’entreprise.
- La description de l’employeur et/ou du service où s’exécutera le contrat.
- La tranche effectif de l’entreprise, en nombre de salariés.
- Le site web de l’entreprise.
",
                    "properties": {
                      "description": {
                        "description": "Description of the employer and/or the department where the contract will be carried out.",
                        "examples": [
                          "Service du Premier ministre, placé sous l’autorité du ministre de la Transformation et de la Fonction publiques, la direction interministérielle du numérique (DINUM) a pour mission d’élaborer la stratégie numérique de l’État et de piloter sa mise en œuvre. Notre objectif : un État plus efficace, plus simple et plus souverain grâce au numérique.",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "location": {
                        "description": "Adresse postale et géolocalisation rattachées au numéro SIRET de l’entreprise
",
                        "properties": {
                          "address": {
                            "description": "Address of the job offer

Notes:

In the case of job offer publication, a custom address can be provided; otherwise, the establishment's address will be used.

The geopoint field is derived from the address.",
                            "examples": [
                              "20 AVENUE DE SEGUR 75007 PARIS",
                            ],
                            "type": [
                              "string",
                              "null",
                            ],
                          },
                        },
                        "type": [
                          "object",
                          "null",
                        ],
                      },
                      "name": {
                        "description": "Name of the establishment (brand name or, failing that, legal name)

Notes:

In the case of publishing a job offer, it is possible to use a custom name; otherwise, it will take the value of the brand name, or failing that, the legal name.",
                        "examples": [
                          "DIRECTION INTERMINISTERIELLE DU NUMERIQUE (DINUM)",
                        ],
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                      "siret": {
                        "description": "SIRET of the contract execution location

Notes:

The information \`brand\` \`legal_name\` \`size\` \`idcc\` \`opco\` \`naf\` is automatically deduced from the SIRET.",
                        "examples": [
                          "13002526500013",
                        ],
                        "pattern": "^\\d{14}$",
                        "type": "string",
                      },
                      "website": {
                        "description": "Company website",
                        "examples": [
                          "https://beta.gouv.fr/startups/",
                        ],
                        "format": "uri",
                        "type": [
                          "string",
                          "null",
                        ],
                      },
                    },
                    "required": [
                      "siret",
                    ],
                    "type": "object",
                  },
                },
                "required": [
                  "workplace",
                  "apply",
                  "offer",
                ],
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "204": {
            "content": undefined,
            "description": "Succès",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Requête invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "examples": [
                        "Request validation failed",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "examples": [
                        "Bad Request",
                      ],
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        400,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Requête invalide",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Clé d’API manquante ou invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Vous devez être connecté pour accéder à cette ressource",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        401,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Clé d’API manquante ou invalide",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Habilitations insuffisantes pour accéder à la ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Le jeton d'accès est invalide",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Forbidden",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        403,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Habilitations insuffisantes pour accéder à la ressource",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Ressource non trouvée",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Resource non trouvée",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Not Found",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        404,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Ressource non trouvée",
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Conflit de ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "La ressource exite déjà",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Conflict",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        409,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflit de ressource",
          },
          "419": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Limite de volumétrie atteinte pour la clé d’API",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Limite de requêtes atteinte",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Too Many Requests",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        419,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Limite de volumétrie atteinte pour la clé d’API",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Une erreur inattendue s'est produite sur le serveur.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Internal Server Error",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        500,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Une erreur inattendue s'est produite sur le serveur.",
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est indisponible.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Bad Gateway",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est indisponible.",
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est en maintenance",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Service Unavailable",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est en maintenance",
          },
        },
        "security": [
          {
            "api-key": [
              "jobs:write",
            ],
          },
        ],
        "summary": "Modifier une offre d'emploi en alternance.",
        "tags": [
          "Job",
        ],
      },
    },
    "/job/v1/search": {
      "get": {
        "description": "Accédez en temps réel à toutes les opportunités d'emploi en apprentissage disponibles en France et proposez-les à vos utilisateurs gratuitement et sous un format white-label.",
        "operationId": "jobSearch",
        "parameters": [
          {
            "in": "query",
            "name": "longitude",
            "required": false,
            "schema": {
              "description": "Longitude of the GPS coordinate of the search area.

The search will cover the whole of France if not specified.

This field must be mandatory when used with the longitude field.
",
              "examples": [
                48.8566,
              ],
              "maximum": 180,
              "minimum": -180,
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "latitude",
            "required": false,
            "schema": {
              "description": "Latitude of the GPS coordinate of the search area.

The search will cover the entire France if not specified.

This field should be mandatory when used with the longitude field.
",
              "examples": [
                2.3522,
              ],
              "maximum": 90,
              "minimum": -90,
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "radius",
            "required": false,
            "schema": {
              "default": 30,
              "description": "Search radius in km, useful if a latitude and longitude are provided. The value must be between 0 and 200 and will default to 30.
",
              "examples": [
                30,
              ],
              "maximum": 200,
              "minimum": 0,
              "type": "number",
            },
          },
          {
            "in": "query",
            "name": "target_diploma_level",
            "required": false,
            "schema": {
              "description": "Target diploma level at the end of studies.

When filtering by diploma level, we return offers:

- where the target diploma level is unknown / not specified / indifferent
- **and** where the target diploma level matches the requested diploma level

By filtering on \`4\`, only offers related to this diploma level, as well as those with unknown/unspecified levels, will be returned to you.
",
              "enum": [
                "3",
                "4",
                "5",
                "6",
                "7",
              ],
              "examples": [
                "3",
                "4",
                "5",
                "6",
                "7",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "romes",
            "required": false,
            "schema": {
              "description": "ROME code(s) for the research scope

The ROME corresponds to the Operational Reference for Trades and Jobs designed by France Travail.

List of codes separated by commas

The codes must adhere to the ROME formats
",
              "examples": [
                "F1601,F1201,F1106",
                "M1806",
              ],
              "type": "string",
            },
          },
          {
            "in": "query",
            "name": "rncp",
            "required": false,
            "schema": {
              "description": "RNCP code of the research scope

The RNCP corresponds to the National Directory of Professional Certifications by [France Compétences](https://www.francecompetences.fr/reguler-le-marche/certification-professionnelle/)
",
              "examples": [
                "RNCP34436",
                "RNCP183",
              ],
              "pattern": "^RNCP\\d{3,5}$",
              "type": "string",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "jobs": {
                      "description": "List of job offers corresponding to the search.

The offers come from:

- collection on the platform La bonne alternance
- France Travail
- publication via API by our partners

Currently, the results are sorted by:

- Source priority (La bonne alternance > France Travail > other partners)
- Increasing distance (only for a search by location)
- Decreasing date of creation

The results are limited to 150 per source, and currently, it is not possible to retrieve all the offers matching the search criteria.
",
                      "items": {
                        "description": "Offre d'emploi",
                        "properties": {
                          "apply": {
                            "description": "Eléments qui permettent de déposer une candidature :

- URL de redirection
- numéro de téléphone
- email de l’entreprise
",
                            "properties": {
                              "phone": {
                                "description": "Recruiter's phone number

Notes:

Only European phone numbers are allowed. There is also a check on the nature of the number: only mobile and landline phones are allowed.",
                                "examples": [
                                  "0199000000",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "recipient_id": {
                                "description": "Identifier to use for applying to the job offer using /v3/jobs/apply route",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "url": {
                                "description": "Redirect URL to the application form",
                                "examples": [
                                  "https://labonnealternance.apprentissage.beta.gouv.fr/recherche-apprentissage?display=list&page=fiche&type=matcha&itemId=664752a2ebe24062b758c641",
                                ],
                                "format": "uri",
                                "type": "string",
                              },
                            },
                            "required": [
                              "phone",
                              "url",
                            ],
                            "type": "object",
                          },
                          "contract": {
                            "description": "Un contrat est décrit par :

- Le type (apprentissage et/ou professionnalisation).
- La date de début.
- La durée.
- Le mode de travail (présentiel, télétravail ou hybride).
",
                            "properties": {
                              "duration": {
                                "description": "Contract duration in months.",
                                "examples": [
                                  12,
                                ],
                                "minimum": 0,
                                "type": [
                                  "integer",
                                  "null",
                                ],
                              },
                              "remote": {
                                "description": "Work mode (on-site, remote, or hybrid)",
                                "enum": [
                                  "onsite",
                                  "remote",
                                  "hybrid",
                                ],
                                "examples": [
                                  "onsite",
                                  "remote",
                                  "hybrid",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "start": {
                                "description": "Date de début du contrat.",
                                "examples": [
                                  "2024-09-23T10:00:00.000Z",
                                ],
                                "format": "date-time",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "type": {
                                "description": "Contract type (apprenticeship and/or professionalization)",
                                "items": {
                                  "description": "Contract type (apprenticeship and/or professionalization)",
                                  "enum": [
                                    "Apprentissage",
                                    "Professionnalisation",
                                  ],
                                  "examples": [
                                    "Apprentissage",
                                    "Professionnalisation",
                                  ],
                                  "type": "string",
                                },
                                "type": "array",
                              },
                            },
                            "required": [
                              "start",
                              "duration",
                              "type",
                              "remote",
                            ],
                            "type": "object",
                          },
                          "identifier": {
                            "description": "Cet élément regroupe :

- le partenaire à l'origine de l'offre d'emploi
- l'identifiant unique de l'offre d'emploi au sein du système d'information La bonne alternance
",
                            "properties": {
                              "id": {
                                "description": "Identifier of the job offer in the La bonne alternance database.

Notes:

France Travail offers are not stored in the La bonne alternance database but are retrieved on the fly. They do not have an identifier in the database.",
                                "examples": [
                                  "6687165396d52b5e01b409545",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "partner_job_id": {
                                "description": "Offer identifier within the partner's information system.",
                                "examples": [
                                  "b16a546a-e61f-4028-b5a3-1a7bbfaa4e3d",
                                ],
                                "type": "string",
                              },
                              "partner_label": {
                                "description": "Partner originating the job offer.

Notes:

In the case of La Bonne Alternance, the partner_label is: "La bonne alternance".",
                                "examples": [
                                  "France Travail",
                                  "La bonne alternance",
                                ],
                                "type": "string",
                              },
                            },
                            "required": [
                              "partner_job_id",
                              "id",
                              "partner_label",
                            ],
                            "type": "object",
                          },
                          "offer": {
                            "description": "Une offre d’emploi est décrite par :

- L’intitulé. Exemple : Développeur / Développeuse web.

- La description. Exemple : Conçoit, développe et met au point un projet d'application informatique, de la phase d'étude à son intégration, pour un client ou une entreprise selon des besoins fonctionnels et un cahier des charges. Peut conduire des projets de développement. Peut coordonner une équipe.

- Le niveau de diplôme visé. Exemple : BP, Bac, autres formations niveau (Bac)

- Les compétences ou qualités attendues pour le poste. Exemple : Faire preuve d'autonomie ; Faire preuve de créativité, d'inventivité ; Faire preuve de rigueur et de précision ; Travailler en équipe

- Les compétences ou qualités à acquérir durant l'alternance. Exemple : Recherche, Innovation (Analyser les indicateurs pertinents sur les tendances et les usages des clients ; Concevoir et développer une solution digitale ; Créer une documentation technique). Nouvelles technologies (Assembler des composants logiciels ; Concevoir une application web)

- Les conditions d’accès au métier. Exemple : Ce métier est accessible avec un diplôme de niveau Bac+2 (BTS, DUT) à Master (MIAGE, diplôme d'ingénieur, Master professionnel, ...) en informatique. Il est également accessible avec une expérience professionnelle en informatique, système d'exploitation ou dans un domaine applicatif. La pratique de l'anglais (vocabulaire technique) est requise.

- Le mode de travail (présentiel, télétravail ou hybride).


Le ROME correspond au Référentiel Opérationnel des Métiers et des Emplois. Conçu par France Travail (anciennement Pôle Emploi), ce référentiel présente l'ensemble des métiers regroupés par fiches, organisées par domaines professionnels.",
                            "properties": {
                              "access_conditions": {
                                "description": "The conditions for entering the profession",
                                "items": {
                                  "description": "The conditions for entering the profession",
                                  "examples": [
                                    "Ce métier est accessible avec un diplôme de niveau Bac+2 (BTS, DUT) à Master (MIAGE, diplôme d'ingénieur, Master professionnel, ...) en informatique.",
                                    "Il est également accessible avec une expérience professionnelle en informatique, système d'exploitation ou dans un domaine applicatif.",
                                    "La pratique de l'anglais (vocabulaire technique) est requise.",
                                  ],
                                  "type": "string",
                                },
                                "type": "array",
                              },
                              "description": {
                                "description": "Job offer description.",
                                "examples": [
                                  "Conçoit, développe et met au point un projet d'application informatique, de la phase d'étude à son intégration, pour un client ou une entreprise selon des besoins fonctionnels et un cahier des charges. Peut conduire des projets de développement. Peut coordonner une équipe.",
                                ],
                                "type": "string",
                              },
                              "desired_skills": {
                                "description": "The skills or qualities expected for the position.",
                                "items": {
                                  "description": "The skills or qualities expected for the position.",
                                  "examples": [
                                    "Faire preuve d'autonomie",
                                    "Faire preuve de créativité, d'inventivité",
                                    "Faire preuve de rigueur et de précision",
                                    "Travailler en équipe",
                                  ],
                                  "type": "string",
                                },
                                "type": "array",
                              },
                              "opening_count": {
                                "description": "Number of positions available for this job offer",
                                "examples": [
                                  1,
                                  3,
                                ],
                                "type": "number",
                              },
                              "publication": {
                                "description": "Une opportunité d’emploi possède un cycle de vie : une date de création et une date d'expiration.
",
                                "properties": {
                                  "creation": {
                                    "description": "Creation date of the job opportunity.",
                                    "examples": [
                                      "2024-07-23T13:23:01.000Z",
                                    ],
                                    "format": "date-time",
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                  "expiration": {
                                    "description": "Expiration date of the job opportunity.",
                                    "examples": [
                                      "2027-05-14T00:00:00Z",
                                    ],
                                    "format": "date-time",
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                },
                                "required": [
                                  "creation",
                                  "expiration",
                                ],
                                "type": "object",
                              },
                              "rome_codes": {
                                "description": "ROME code(s) of the offer",
                                "items": {
                                  "description": "ROME code",
                                  "examples": [
                                    "A1401",
                                  ],
                                  "pattern": "^[A-Z]\\d{4}$",
                                  "type": "string",
                                },
                                "type": "array",
                              },
                              "status": {
                                "description": "Le statut de l'offre (cycle de vie) :

- Active : L'offre est disponible sur la plateforme et il est possible d'y postuler.
- Filled : L'offre a été pourvue et n'est donc plus disponible.
- Cancelled : L'offre a été annulée et n'est donc plus disponible.


Notes:

Only active offers are returned by the search.",
                                "enum": [
                                  "Active",
                                  "Filled",
                                  "Cancelled",
                                ],
                                "examples": [
                                  "Active",
                                ],
                                "type": "string",
                              },
                              "target_diploma": {
                                "description": "Targeted diploma level at the end of studies.",
                                "properties": {
                                  "european": {
                                    "description": "Targeted diploma level at the end of studies.",
                                    "enum": [
                                      "3",
                                      "4",
                                      "5",
                                      "6",
                                      "7",
                                    ],
                                    "examples": [
                                      3,
                                    ],
                                    "type": "string",
                                  },
                                  "label": {
                                    "description": "The title of the targeted diploma level at the end of studies.",
                                    "examples": [
                                      "BP, Bac, autres formations niveau (Bac)",
                                    ],
                                    "type": "string",
                                  },
                                },
                                "required": [
                                  "european",
                                  "label",
                                ],
                                "type": [
                                  "object",
                                  "null",
                                ],
                              },
                              "title": {
                                "description": "Job offer title.",
                                "examples": [
                                  "Développeur / Développeuse web",
                                ],
                                "minLength": 3,
                                "type": "string",
                              },
                              "to_be_acquired_skills": {
                                "description": "The skills or qualities to be acquired during the apprenticeship.",
                                "items": {
                                  "description": "The skills or qualities to be acquired during the apprenticeship.",
                                  "examples": [
                                    "Recherche, Innovation : Analyser les indicateurs pertinents sur les tendances et les usages des clients",
                                    "Recherche, Innovation : Concevoir et développer une solution digitale",
                                    "Nouvelles technologies : Assembler des composants logiciels",
                                  ],
                                  "type": "string",
                                },
                                "type": "array",
                              },
                            },
                            "required": [
                              "title",
                              "desired_skills",
                              "to_be_acquired_skills",
                              "access_conditions",
                              "opening_count",
                              "publication",
                              "rome_codes",
                              "description",
                              "target_diploma",
                              "status",
                            ],
                            "type": "object",
                          },
                          "workplace": {
                            "description": "Cet élement regroupe :

- Le nom (enseigne ou à défaut, raison sociale) et le numéro SIRET de l’entreprise.
- La description de l’employeur et/ou du service où s’exécutera le contrat.
- La tranche effectif de l’entreprise, en nombre de salariés.
- Le site web de l’entreprise.
",
                            "properties": {
                              "brand": {
                                "description": "Brand name of the establishment",
                                "examples": [
                                  "Enseigne (todo)",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "description": {
                                "description": "Description of the employer and/or the department where the contract will be carried out.",
                                "examples": [
                                  "Service du Premier ministre, placé sous l’autorité du ministre de la Transformation et de la Fonction publiques, la direction interministérielle du numérique (DINUM) a pour mission d’élaborer la stratégie numérique de l’État et de piloter sa mise en œuvre. Notre objectif : un État plus efficace, plus simple et plus souverain grâce au numérique.",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "domain": {
                                "description": "Regroupe des éléments qui décrivent le domaine auquel est rattaché le numéro SIRET de l’entreprise :

- La Nomenclature d’Activité Française (NAF). Produite par l’INSEE, elle a pour objectif de faciliter l'organisation de l'information économique et sociale.
- Le numéro IDCC de la convention collective. Produit par le ministère chargé du travail (Dares et DGT) et celui chargé de l’agriculture.
- L’Opérateur de Compétence (OPCO) de rattachement pouvant prendre en charge le financement du contrat.
",
                                "properties": {
                                  "idcc": {
                                    "description": "Collective agreement number associated with the SIRET number",
                                    "examples": [
                                      1979,
                                    ],
                                    "type": [
                                      "number",
                                      "null",
                                    ],
                                  },
                                  "naf": {
                                    "description": "NAF (sector of activity) associated with the SIRET number",
                                    "properties": {
                                      "code": {
                                        "description": "NAF code (sector of activity) associated with the SIRET number",
                                        "examples": [
                                          "8411Z",
                                        ],
                                        "type": "string",
                                      },
                                      "label": {
                                        "description": "Label of the NAF code (sector of activity) associated with the SIRET number",
                                        "examples": [
                                          "Administration publique générale",
                                        ],
                                        "type": [
                                          "string",
                                          "null",
                                        ],
                                      },
                                    },
                                    "required": [
                                      "code",
                                      "label",
                                    ],
                                    "type": [
                                      "object",
                                      "null",
                                    ],
                                  },
                                  "opco": {
                                    "description": "Competency Operator (OPCO) associated with the SIRET number",
                                    "examples": [
                                      "OPCO 2i",
                                    ],
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                },
                                "required": [
                                  "idcc",
                                  "opco",
                                  "naf",
                                ],
                                "type": "object",
                              },
                              "legal_name": {
                                "description": "Company legal name",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "location": {
                                "description": "Adresse postale et géolocalisation rattachées au numéro SIRET de l’entreprise
",
                                "properties": {
                                  "address": {
                                    "description": "Postal address of the job offer location.",
                                    "examples": [
                                      "20 AVENUE DE SEGUR 75007 PARIS",
                                    ],
                                    "type": "string",
                                  },
                                  "geopoint": {
                                    "additionalProperties": false,
                                    "description": "Geolocation linked to the address

Notes:

Derived from the address.",
                                    "properties": {
                                      "coordinates": {
                                        "description": "Coordinates of the geolocation linked to the address",
                                        "prefixItems": [
                                          {
                                            "description": "Longitude",
                                            "examples": [
                                              48.850699,
                                            ],
                                            "maximum": 180,
                                            "minimum": -180,
                                            "type": "number",
                                          },
                                          {
                                            "description": "Latitude",
                                            "examples": [
                                              2.308628,
                                            ],
                                            "maximum": 90,
                                            "minimum": -90,
                                            "type": "number",
                                          },
                                        ],
                                        "type": "array",
                                      },
                                      "type": {
                                        "description": "GeoJSON type related to the geolocation linked to the address",
                                        "enum": [
                                          "Point",
                                        ],
                                        "examples": [
                                          "Point",
                                        ],
                                        "type": "string",
                                      },
                                    },
                                    "required": [
                                      "coordinates",
                                      "type",
                                    ],
                                    "type": "object",
                                  },
                                },
                                "required": [
                                  "address",
                                  "geopoint",
                                ],
                                "type": "object",
                              },
                              "name": {
                                "description": "Name of the establishment (brand name or, failing that, legal name)

Notes:

In the case of publishing a job offer, it is possible to use a custom name; otherwise, it will take the value of the brand name, or failing that, the legal name.",
                                "examples": [
                                  "DIRECTION INTERMINISTERIELLE DU NUMERIQUE (DINUM)",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "siret": {
                                "description": "SIRET of the contract execution location",
                                "examples": [
                                  "13002526500013",
                                ],
                                "pattern": "^\\d{14}$",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "size": {
                                "description": "Company workforce range, in number of employees",
                                "examples": [
                                  "100-199",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "website": {
                                "description": "Company website",
                                "examples": [
                                  "https://beta.gouv.fr/startups/",
                                ],
                                "format": "uri",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "name",
                              "description",
                              "website",
                              "siret",
                              "location",
                              "brand",
                              "legal_name",
                              "size",
                              "domain",
                            ],
                            "type": "object",
                          },
                        },
                        "required": [
                          "identifier",
                          "workplace",
                          "apply",
                          "contract",
                          "offer",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "recruiters": {
                      "description": "List of companies that have not posted a job offer but are likely to hire apprentices in the desired field.

The results are limited to 150, and currently, it is not possible to retrieve all recruiters matching the search criteria.
",
                      "items": {
                        "description": "Recruteur",
                        "properties": {
                          "apply": {
                            "description": "Eléments qui permettent de déposer une candidature :

- URL de redirection
- numéro de téléphone
- email de l’entreprise
",
                            "properties": {
                              "phone": {
                                "description": "Recruiter's phone number

Notes:

Only European phone numbers are allowed. There is also a check on the nature of the number: only mobile and landline phones are allowed.",
                                "examples": [
                                  "0199000000",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "recipient_id": {
                                "description": "Identifier to use for applying to the job offer using /v3/jobs/apply route",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "url": {
                                "description": "Redirect URL to the application form",
                                "examples": [
                                  "https://labonnealternance.apprentissage.beta.gouv.fr/recherche-apprentissage?display=list&page=fiche&type=matcha&itemId=664752a2ebe24062b758c641",
                                ],
                                "format": "uri",
                                "type": "string",
                              },
                            },
                            "required": [
                              "phone",
                              "url",
                            ],
                            "type": "object",
                          },
                          "identifier": {
                            "description": "Cet élément regroupe :

- le partenaire à l'origine de l'offre d'emploi
- l'identifiant unique de l'offre d'emploi au sein du système d'information La bonne alternance
",
                            "properties": {
                              "id": {
                                "description": "Partner responsible for the job offer.",
                                "examples": [
                                  "6687165396d52b5e01b409545",
                                ],
                                "type": "string",
                              },
                            },
                            "required": [
                              "id",
                            ],
                            "type": "object",
                          },
                          "workplace": {
                            "description": "Cet élement regroupe :

- Le nom (enseigne ou à défaut, raison sociale) et le numéro SIRET de l’entreprise.
- La description de l’employeur et/ou du service où s’exécutera le contrat.
- La tranche effectif de l’entreprise, en nombre de salariés.
- Le site web de l’entreprise.
",
                            "properties": {
                              "brand": {
                                "description": "Brand name of the establishment",
                                "examples": [
                                  "Enseigne (todo)",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "description": {
                                "description": "Description of the employer and/or the department where the contract will be carried out.",
                                "examples": [
                                  "Service du Premier ministre, placé sous l’autorité du ministre de la Transformation et de la Fonction publiques, la direction interministérielle du numérique (DINUM) a pour mission d’élaborer la stratégie numérique de l’État et de piloter sa mise en œuvre. Notre objectif : un État plus efficace, plus simple et plus souverain grâce au numérique.",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "domain": {
                                "description": "Regroupe des éléments qui décrivent le domaine auquel est rattaché le numéro SIRET de l’entreprise :

- La Nomenclature d’Activité Française (NAF). Produite par l’INSEE, elle a pour objectif de faciliter l'organisation de l'information économique et sociale.
- Le numéro IDCC de la convention collective. Produit par le ministère chargé du travail (Dares et DGT) et celui chargé de l’agriculture.
- L’Opérateur de Compétence (OPCO) de rattachement pouvant prendre en charge le financement du contrat.
",
                                "properties": {
                                  "idcc": {
                                    "description": "Collective agreement number associated with the SIRET number",
                                    "examples": [
                                      1979,
                                    ],
                                    "type": [
                                      "number",
                                      "null",
                                    ],
                                  },
                                  "naf": {
                                    "description": "NAF (sector of activity) associated with the SIRET number",
                                    "properties": {
                                      "code": {
                                        "description": "NAF code (sector of activity) associated with the SIRET number",
                                        "examples": [
                                          "8411Z",
                                        ],
                                        "type": "string",
                                      },
                                      "label": {
                                        "description": "Label of the NAF code (sector of activity) associated with the SIRET number",
                                        "examples": [
                                          "Administration publique générale",
                                        ],
                                        "type": [
                                          "string",
                                          "null",
                                        ],
                                      },
                                    },
                                    "required": [
                                      "code",
                                      "label",
                                    ],
                                    "type": [
                                      "object",
                                      "null",
                                    ],
                                  },
                                  "opco": {
                                    "description": "Competency Operator (OPCO) associated with the SIRET number",
                                    "examples": [
                                      "OPCO 2i",
                                    ],
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                },
                                "required": [
                                  "idcc",
                                  "opco",
                                  "naf",
                                ],
                                "type": "object",
                              },
                              "legal_name": {
                                "description": "Company legal name",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "location": {
                                "description": "Adresse postale et géolocalisation rattachées au numéro SIRET de l’entreprise
",
                                "properties": {
                                  "address": {
                                    "description": "Postal address of the job offer location.",
                                    "examples": [
                                      "20 AVENUE DE SEGUR 75007 PARIS",
                                    ],
                                    "type": "string",
                                  },
                                  "geopoint": {
                                    "additionalProperties": false,
                                    "description": "Geolocation linked to the address

Notes:

Derived from the address.",
                                    "properties": {
                                      "coordinates": {
                                        "description": "Coordinates of the geolocation linked to the address",
                                        "prefixItems": [
                                          {
                                            "description": "Longitude",
                                            "examples": [
                                              48.850699,
                                            ],
                                            "maximum": 180,
                                            "minimum": -180,
                                            "type": "number",
                                          },
                                          {
                                            "description": "Latitude",
                                            "examples": [
                                              2.308628,
                                            ],
                                            "maximum": 90,
                                            "minimum": -90,
                                            "type": "number",
                                          },
                                        ],
                                        "type": "array",
                                      },
                                      "type": {
                                        "description": "GeoJSON type related to the geolocation linked to the address",
                                        "enum": [
                                          "Point",
                                        ],
                                        "examples": [
                                          "Point",
                                        ],
                                        "type": "string",
                                      },
                                    },
                                    "required": [
                                      "coordinates",
                                      "type",
                                    ],
                                    "type": "object",
                                  },
                                },
                                "required": [
                                  "address",
                                  "geopoint",
                                ],
                                "type": "object",
                              },
                              "name": {
                                "description": "Name of the establishment (brand name or, failing that, legal name)

Notes:

In the case of publishing a job offer, it is possible to use a custom name; otherwise, it will take the value of the brand name, or failing that, the legal name.",
                                "examples": [
                                  "DIRECTION INTERMINISTERIELLE DU NUMERIQUE (DINUM)",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "siret": {
                                "description": "SIRET of the contract execution location",
                                "examples": [
                                  "13002526500013",
                                ],
                                "pattern": "^\\d{14}$",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "size": {
                                "description": "Company workforce range, in number of employees",
                                "examples": [
                                  "100-199",
                                ],
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                              "website": {
                                "description": "Company website",
                                "examples": [
                                  "https://beta.gouv.fr/startups/",
                                ],
                                "format": "uri",
                                "type": [
                                  "string",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "name",
                              "description",
                              "website",
                              "siret",
                              "location",
                              "brand",
                              "legal_name",
                              "size",
                              "domain",
                            ],
                            "type": "object",
                          },
                        },
                        "required": [
                          "identifier",
                          "workplace",
                          "apply",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "warnings": {
                      "description": "List of warnings related to the search.

France Travail job offers are retrieved in real-time, so in case of an error when calling the France Travail API, the France Travail offers will not be returned and a warning will be added to the response.
",
                      "examples": [
                        {
                          "code": "WARNING_CODE",
                          "message": "Some warning message",
                        },
                      ],
                      "items": {
                        "properties": {
                          "code": {
                            "type": "string",
                          },
                          "message": {
                            "type": "string",
                          },
                        },
                        "required": [
                          "message",
                          "code",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "jobs",
                    "recruiters",
                    "warnings",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Succès",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Requête invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "examples": [
                        "Request validation failed",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "examples": [
                        "Bad Request",
                      ],
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        400,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Requête invalide",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Clé d’API manquante ou invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Vous devez être connecté pour accéder à cette ressource",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        401,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Clé d’API manquante ou invalide",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Habilitations insuffisantes pour accéder à la ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Le jeton d'accès est invalide",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Forbidden",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        403,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Habilitations insuffisantes pour accéder à la ressource",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Ressource non trouvée",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Resource non trouvée",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Not Found",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        404,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Ressource non trouvée",
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Conflit de ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "La ressource exite déjà",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Conflict",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        409,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflit de ressource",
          },
          "419": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Limite de volumétrie atteinte pour la clé d’API",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Limite de requêtes atteinte",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Too Many Requests",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        419,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Limite de volumétrie atteinte pour la clé d’API",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Une erreur inattendue s'est produite sur le serveur.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Internal Server Error",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        500,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Une erreur inattendue s'est produite sur le serveur.",
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est indisponible.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Bad Gateway",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est indisponible.",
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est en maintenance",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Service Unavailable",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est en maintenance",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "summary": "Recherche d'opportunités d'emploi en apprentissage",
        "tags": [
          "Job",
        ],
      },
    },
    "/organisme/v1/recherche": {
      "get": {
        "description": "Récupère la liste des organismes, filtrée par UAI et/ou SIRET fournis",
        "operationId": "searchOrganismes",
        "parameters": [
          {
            "in": "query",
            "name": "uai",
            "required": false,
            "schema": {
              "pattern": "^\\d{1,7}[A-Z]$",
              "type": [
                "string",
                "null",
              ],
            },
          },
          {
            "in": "query",
            "name": "siret",
            "required": false,
            "schema": {
              "pattern": "^\\d{9,14}$",
              "type": [
                "string",
                "null",
              ],
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "candidats": {
                      "items": {
                        "properties": {
                          "correspondances": {
                            "properties": {
                              "siret": {
                                "properties": {
                                  "lui_meme": {
                                    "type": "boolean",
                                  },
                                  "son_formateur": {
                                    "type": "boolean",
                                  },
                                  "son_responsable": {
                                    "type": "boolean",
                                  },
                                },
                                "required": [
                                  "son_formateur",
                                  "son_responsable",
                                  "lui_meme",
                                ],
                                "type": [
                                  "object",
                                  "null",
                                ],
                              },
                              "uai": {
                                "properties": {
                                  "lui_meme": {
                                    "type": "boolean",
                                  },
                                  "son_lieu": {
                                    "type": "boolean",
                                  },
                                },
                                "required": [
                                  "lui_meme",
                                  "son_lieu",
                                ],
                                "type": [
                                  "object",
                                  "null",
                                ],
                              },
                            },
                            "required": [
                              "uai",
                              "siret",
                            ],
                            "type": "object",
                          },
                          "organisme": {
                            "properties": {
                              "identifiant": {
                                "properties": {
                                  "siret": {
                                    "pattern": "^\\d{9,14}$",
                                    "type": "string",
                                  },
                                  "uai": {
                                    "pattern": "^\\d{1,7}[A-Z]$",
                                    "type": [
                                      "string",
                                      "null",
                                    ],
                                  },
                                },
                                "required": [
                                  "uai",
                                  "siret",
                                ],
                                "type": "object",
                              },
                            },
                            "required": [
                              "identifiant",
                            ],
                            "type": "object",
                          },
                          "status": {
                            "properties": {
                              "declaration_catalogue": {
                                "type": "boolean",
                              },
                              "ouvert": {
                                "type": "boolean",
                              },
                              "validation_uai": {
                                "type": "boolean",
                              },
                            },
                            "required": [
                              "ouvert",
                              "declaration_catalogue",
                              "validation_uai",
                            ],
                            "type": "object",
                          },
                        },
                        "required": [
                          "status",
                          "correspondances",
                          "organisme",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "metadata": {
                      "properties": {
                        "siret": {
                          "properties": {
                            "status": {
                              "enum": [
                                "inconnu",
                                "fermé",
                                "ok",
                              ],
                              "type": "string",
                            },
                          },
                          "required": [
                            "status",
                          ],
                          "type": [
                            "object",
                            "null",
                          ],
                        },
                        "uai": {
                          "properties": {
                            "status": {
                              "enum": [
                                "inconnu",
                                "ok",
                              ],
                              "type": "string",
                            },
                          },
                          "required": [
                            "status",
                          ],
                          "type": [
                            "object",
                            "null",
                          ],
                        },
                      },
                      "required": [
                        "uai",
                        "siret",
                      ],
                      "type": "object",
                    },
                    "resultat": {
                      "properties": {
                        "correspondances": {
                          "properties": {
                            "siret": {
                              "properties": {
                                "lui_meme": {
                                  "type": "boolean",
                                },
                                "son_formateur": {
                                  "type": "boolean",
                                },
                                "son_responsable": {
                                  "type": "boolean",
                                },
                              },
                              "required": [
                                "son_formateur",
                                "son_responsable",
                                "lui_meme",
                              ],
                              "type": [
                                "object",
                                "null",
                              ],
                            },
                            "uai": {
                              "properties": {
                                "lui_meme": {
                                  "type": "boolean",
                                },
                                "son_lieu": {
                                  "type": "boolean",
                                },
                              },
                              "required": [
                                "lui_meme",
                                "son_lieu",
                              ],
                              "type": [
                                "object",
                                "null",
                              ],
                            },
                          },
                          "required": [
                            "uai",
                            "siret",
                          ],
                          "type": "object",
                        },
                        "organisme": {
                          "properties": {
                            "identifiant": {
                              "properties": {
                                "siret": {
                                  "pattern": "^\\d{9,14}$",
                                  "type": "string",
                                },
                                "uai": {
                                  "pattern": "^\\d{1,7}[A-Z]$",
                                  "type": [
                                    "string",
                                    "null",
                                  ],
                                },
                              },
                              "required": [
                                "uai",
                                "siret",
                              ],
                              "type": "object",
                            },
                          },
                          "required": [
                            "identifiant",
                          ],
                          "type": "object",
                        },
                        "status": {
                          "properties": {
                            "declaration_catalogue": {
                              "type": "boolean",
                            },
                            "ouvert": {
                              "type": "boolean",
                            },
                            "validation_uai": {
                              "type": "boolean",
                            },
                          },
                          "required": [
                            "ouvert",
                            "declaration_catalogue",
                            "validation_uai",
                          ],
                          "type": "object",
                        },
                      },
                      "required": [
                        "status",
                        "correspondances",
                        "organisme",
                      ],
                      "type": [
                        "object",
                        "null",
                      ],
                    },
                  },
                  "required": [
                    "metadata",
                    "resultat",
                    "candidats",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Requête invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "examples": [
                        "Request validation failed",
                      ],
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "examples": [
                        "Bad Request",
                      ],
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        400,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Requête invalide",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Clé d’API manquante ou invalide",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Vous devez être connecté pour accéder à cette ressource",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        401,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Clé d’API manquante ou invalide",
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Habilitations insuffisantes pour accéder à la ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Le jeton d'accès est invalide",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Forbidden",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        403,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Habilitations insuffisantes pour accéder à la ressource",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Ressource non trouvée",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Resource non trouvée",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Not Found",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        404,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Ressource non trouvée",
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Conflit de ressource",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "La ressource exite déjà",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Conflict",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        409,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflit de ressource",
          },
          "419": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Limite de volumétrie atteinte pour la clé d’API",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "Limite de requêtes atteinte",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Too Many Requests",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        419,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Limite de volumétrie atteinte pour la clé d’API",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Une erreur inattendue s'est produite sur le serveur.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Internal Server Error",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        500,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Une erreur inattendue s'est produite sur le serveur.",
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est indisponible.",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Bad Gateway",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est indisponible.",
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Le service est en maintenance",
                  "properties": {
                    "data": {
                      "description": "Données contextuelles liées à l'erreur",
                    },
                    "message": {
                      "description": "Un message explicatif de l'erreur",
                      "example": "The server was unable to complete your request",
                      "type": "string",
                    },
                    "name": {
                      "description": "Le type générique de l'erreur",
                      "example": "Service Unavailable",
                      "type": "string",
                    },
                    "statusCode": {
                      "description": "Le status code retourné",
                      "enum": [
                        502,
                      ],
                      "type": "number",
                    },
                  },
                  "required": [
                    "message",
                    "name",
                    "statusCode",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Le service est en maintenance",
          },
        },
        "security": [
          {
            "api-key": [],
          },
        ],
        "summary": "Recherche d'organismes par UAI et/ou SIRET",
        "tags": [
          "Organismes",
        ],
      },
    },
  },
  "servers": [
    {
      "description": "Production",
      "url": "https://api.apprentissage.beta.gouv.fr",
    },
  ],
  "tags": [
    {
      "description": "Pour essayer l'API [vous pouvez utiliser le swagger UI](/documentation-technique/try)",
      "name": "Essayer l'API",
    },
    {
      "description": "Liste des opérations sur les certifications.",
      "name": "Certifications",
    },
    {
      "description": "Opportunités d'emploi en alternance",
      "name": "Job",
    },
    {
      "description": "Référentiel Géographique",
      "name": "Géographie",
    },
    {
      "description": "Liste des routes expérimentales. Attention: ces routes peuvent changer sans préavis.",
      "name": "Expérimental",
    },
  ],
}
`;

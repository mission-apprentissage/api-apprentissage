// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`openapiSpec#models > should generate schema in sync with zod definition 1`] = `
{
  "Adresse": {
    "diff": {
      "type": {
        "result": "object",
        "source": [
          "object",
          "null",
        ],
        "type": "changed",
      },
    },
    "result": "api",
    "source": "zod",
  },
  "Commune": {
    "diff": {
      "properties.mission_locale.$ref": {
        "source": "#/components/schemas/MissionLocale",
        "type": "removed",
      },
      "properties.mission_locale.oneOf": {
        "result": [
          {
            "type": "null",
          },
          {
            "$ref": "#/components/schemas/MissionLocale",
          },
        ],
        "type": "added",
      },
    },
    "result": "api",
    "source": "zod",
  },
  "Formation": {
    "diff": {
      "properties.formateur.properties.organisme.$ref": {
        "source": "#/components/schemas/Organisme",
        "type": "removed",
      },
      "properties.formateur.properties.organisme.oneOf": {
        "result": [
          {
            "$ref": "#/components/schemas/Organisme",
          },
          {
            "type": "null",
          },
        ],
        "type": "added",
      },
      "properties.lieu.properties.adresse.$ref": {
        "result": "#/components/schemas/Adresse",
        "type": "added",
      },
      "properties.lieu.properties.adresse.allOf": {
        "source": [
          {
            "$ref": "#/components/schemas/Adresse",
          },
          {
            "type": "object",
          },
        ],
        "type": "removed",
      },
      "properties.responsable.properties.organisme.$ref": {
        "source": "#/components/schemas/Organisme",
        "type": "removed",
      },
      "properties.responsable.properties.organisme.oneOf": {
        "result": [
          {
            "$ref": "#/components/schemas/Organisme",
          },
          {
            "type": "null",
          },
        ],
        "type": "added",
      },
    },
    "result": "api",
    "source": "zod",
  },
  "GeoJsonPoint": {
    "diff": {
      "properties.coordinates.maxItems": {
        "result": 2,
        "type": "added",
      },
      "properties.coordinates.minItems": {
        "result": 2,
        "type": "added",
      },
    },
    "result": "api",
    "source": "zod",
  },
  "GeoJsonPolygon": {
    "diff": {
      "properties.coordinates.items.items.maxItems": {
        "result": 2,
        "type": "added",
      },
      "properties.coordinates.items.items.minItems": {
        "result": 2,
        "type": "added",
      },
    },
    "result": "api",
    "source": "zod",
  },
  "MissionLocale": {
    "diff": {
      "properties.localisation.properties.geopoint.allOf": {
        "source": [
          {
            "$ref": "#/components/schemas/GeoJsonPoint",
          },
          {
            "type": [
              "object",
              "null",
            ],
          },
        ],
        "type": "removed",
      },
      "properties.localisation.properties.geopoint.oneOf": {
        "result": [
          {
            "type": "null",
          },
          {
            "$ref": "#/components/schemas/GeoJsonPoint",
          },
        ],
        "type": "added",
      },
      "type": {
        "result": "object",
        "source": [
          "object",
          "null",
        ],
        "type": "changed",
      },
    },
    "result": "api",
    "source": "zod",
  },
  "Organisme": {
    "diff": {
      "properties.etablissement.properties.adresse.$ref": {
        "source": "#/components/schemas/Adresse",
        "type": "removed",
      },
      "properties.etablissement.properties.adresse.oneOf": {
        "result": [
          {
            "$ref": "#/components/schemas/Adresse",
          },
          {
            "type": "null",
          },
        ],
        "type": "added",
      },
      "required.0": {
        "result": "etablissement",
        "source": "contacts",
        "type": "changed",
      },
      "required.1": {
        "result": "identifiant",
        "source": "etablissement",
        "type": "changed",
      },
      "required.2": {
        "result": "renseignements_specifiques",
        "source": "identifiant",
        "type": "changed",
      },
      "required.3": {
        "result": "statut",
        "source": "renseignements_specifiques",
        "type": "changed",
      },
      "required.4": {
        "result": "unite_legale",
        "source": "statut",
        "type": "changed",
      },
      "required.5": {
        "source": "unite_legale",
        "type": "removed",
      },
      "type": {
        "result": "object",
        "source": [
          "object",
          "null",
        ],
        "type": "changed",
      },
    },
    "result": "api",
    "source": "zod",
  },
  "Pagination": {
    "diff": {
      "properties.page_count.type": {
        "result": "integer",
        "source": [
          "integer",
          "null",
        ],
        "type": "changed",
      },
      "properties.page_index.type": {
        "result": "integer",
        "source": [
          "integer",
          "null",
        ],
        "type": "changed",
      },
      "properties.page_size.type": {
        "result": "integer",
        "source": [
          "integer",
          "null",
        ],
        "type": "changed",
      },
    },
    "result": "api",
    "source": "zod",
  },
}
`;

exports[`openapiSpec#routes > should generate schema in sync with zod definition 1`] = `
{
  "get:/certification/v1": {
    "diff": {
      "parameters.query:identifiant.cfd.allowEmptyValue": {
        "result": true,
        "type": "added",
      },
      "parameters.query:identifiant.rncp.allowEmptyValue": {
        "result": true,
        "type": "added",
      },
    },
    "result": "api",
    "source": "zod",
  },
  "get:/formation/v1/search": {
    "diff": {
      "parameters.query:latitude.schema.type": {
        "result": "number",
        "source": [
          "number",
          "null",
        ],
        "type": "changed",
      },
      "parameters.query:longitude.schema.type": {
        "result": "number",
        "source": [
          "number",
          "null",
        ],
        "type": "changed",
      },
      "parameters.query:radius.schema.type": {
        "result": "number",
        "source": [
          "number",
          "null",
        ],
        "type": "changed",
      },
    },
    "result": "api",
    "source": "zod",
  },
  "get:/geographie/v1/mission-locale": {
    "diff": {
      "responses.200.content.application/json.schema.items.$ref": {
        "result": "#/components/schemas/MissionLocale",
        "type": "added",
      },
      "responses.200.content.application/json.schema.items.allOf": {
        "source": [
          {
            "$ref": "#/components/schemas/MissionLocale",
          },
          {
            "type": "object",
          },
        ],
        "type": "removed",
      },
    },
    "result": "api",
    "source": "zod",
  },
}
`;
